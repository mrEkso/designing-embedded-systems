ARM GAS  C:\Users\main\AppData\Local\Temp\ccvX4GZn.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32c0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HardFault_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	HardFault_Handler
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	HardFault_Handler:
  25              	.LFB218:
  26              		.file 1 "Core/Src/stm32c0xx_it.c"
   1:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32c0xx_it.c **** /**
   3:Core/Src/stm32c0xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32c0xx_it.c ****   * @file    stm32c0xx_it.c
   5:Core/Src/stm32c0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32c0xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32c0xx_it.c ****   * @attention
   8:Core/Src/stm32c0xx_it.c ****   *
   9:Core/Src/stm32c0xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32c0xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32c0xx_it.c ****   *
  12:Core/Src/stm32c0xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32c0xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32c0xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32c0xx_it.c ****   *
  16:Core/Src/stm32c0xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32c0xx_it.c ****   */
  18:Core/Src/stm32c0xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32c0xx_it.c **** 
  20:Core/Src/stm32c0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32c0xx_it.c **** #include "main.h"
  22:Core/Src/stm32c0xx_it.c **** #include "stm32c0xx_it.h"
  23:Core/Src/stm32c0xx_it.c **** #include "FreeRTOS.h"
  24:Core/Src/stm32c0xx_it.c **** #include "task.h"
  25:Core/Src/stm32c0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/stm32c0xx_it.c **** /* USER CODE END Includes */
  28:Core/Src/stm32c0xx_it.c **** 
  29:Core/Src/stm32c0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN TD */
  31:Core/Src/stm32c0xx_it.c **** 
  32:Core/Src/stm32c0xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\main\AppData\Local\Temp\ccvX4GZn.s 			page 2


  33:Core/Src/stm32c0xx_it.c **** 
  34:Core/Src/stm32c0xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN PD */
  36:Core/Src/stm32c0xx_it.c **** 
  37:Core/Src/stm32c0xx_it.c **** /* USER CODE END PD */
  38:Core/Src/stm32c0xx_it.c **** 
  39:Core/Src/stm32c0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN PM */
  41:Core/Src/stm32c0xx_it.c **** 
  42:Core/Src/stm32c0xx_it.c **** /* USER CODE END PM */
  43:Core/Src/stm32c0xx_it.c **** 
  44:Core/Src/stm32c0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN PV */
  46:Core/Src/stm32c0xx_it.c **** 
  47:Core/Src/stm32c0xx_it.c **** /* USER CODE END PV */
  48:Core/Src/stm32c0xx_it.c **** 
  49:Core/Src/stm32c0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/stm32c0xx_it.c **** 
  52:Core/Src/stm32c0xx_it.c **** /* USER CODE END PFP */
  53:Core/Src/stm32c0xx_it.c **** 
  54:Core/Src/stm32c0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/stm32c0xx_it.c **** 
  57:Core/Src/stm32c0xx_it.c **** /* USER CODE END 0 */
  58:Core/Src/stm32c0xx_it.c **** 
  59:Core/Src/stm32c0xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Core/Src/stm32c0xx_it.c **** 
  61:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN EV */
  62:Core/Src/stm32c0xx_it.c **** 
  63:Core/Src/stm32c0xx_it.c **** /* USER CODE END EV */
  64:Core/Src/stm32c0xx_it.c **** 
  65:Core/Src/stm32c0xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32c0xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  67:Core/Src/stm32c0xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32c0xx_it.c **** /**
  69:Core/Src/stm32c0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  70:Core/Src/stm32c0xx_it.c ****   */
  71:Core/Src/stm32c0xx_it.c **** void HardFault_Handler(void)
  72:Core/Src/stm32c0xx_it.c **** {
  27              		.loc 1 72 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  73:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  74:Core/Src/stm32c0xx_it.c **** 
  75:Core/Src/stm32c0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  76:Core/Src/stm32c0xx_it.c ****   while (1)
  34              		.loc 1 76 3 discriminator 1 view .LVU1
  77:Core/Src/stm32c0xx_it.c ****   {
  78:Core/Src/stm32c0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  79:Core/Src/stm32c0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  80:Core/Src/stm32c0xx_it.c ****   }
  35              		.loc 1 80 3 discriminator 1 view .LVU2
ARM GAS  C:\Users\main\AppData\Local\Temp\ccvX4GZn.s 			page 3


  76:Core/Src/stm32c0xx_it.c ****   {
  36              		.loc 1 76 9 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE218:
  41              		.section	.text.SysTick_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	SysTick_Handler
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  48              	SysTick_Handler:
  49              	.LFB219:
  81:Core/Src/stm32c0xx_it.c **** }
  82:Core/Src/stm32c0xx_it.c **** 
  83:Core/Src/stm32c0xx_it.c **** /**
  84:Core/Src/stm32c0xx_it.c ****   * @brief This function handles System tick timer.
  85:Core/Src/stm32c0xx_it.c ****   */
  86:Core/Src/stm32c0xx_it.c **** void SysTick_Handler(void)
  87:Core/Src/stm32c0xx_it.c **** {
  50              		.loc 1 87 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54 0000 10B5     		push	{r4, lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 4, -8
  58              		.cfi_offset 14, -4
  88:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
  89:Core/Src/stm32c0xx_it.c **** 
  90:Core/Src/stm32c0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
  91:Core/Src/stm32c0xx_it.c ****   HAL_IncTick();
  59              		.loc 1 91 3 view .LVU5
  60 0002 FFF7FEFF 		bl	HAL_IncTick
  61              	.LVL0:
  92:Core/Src/stm32c0xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
  93:Core/Src/stm32c0xx_it.c ****   if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
  62              		.loc 1 93 3 view .LVU6
  63              		.loc 1 93 7 is_stmt 0 view .LVU7
  64 0006 FFF7FEFF 		bl	xTaskGetSchedulerState
  65              	.LVL1:
  66              		.loc 1 93 6 view .LVU8
  67 000a 0128     		cmp	r0, #1
  68 000c 00D1     		bne	.L5
  69              	.L3:
  94:Core/Src/stm32c0xx_it.c ****   {
  95:Core/Src/stm32c0xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
  96:Core/Src/stm32c0xx_it.c ****   xPortSysTickHandler();
  97:Core/Src/stm32c0xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
  98:Core/Src/stm32c0xx_it.c ****   }
  99:Core/Src/stm32c0xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
 100:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 101:Core/Src/stm32c0xx_it.c **** 
 102:Core/Src/stm32c0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 103:Core/Src/stm32c0xx_it.c **** }
  70              		.loc 1 103 1 view .LVU9
ARM GAS  C:\Users\main\AppData\Local\Temp\ccvX4GZn.s 			page 4


  71              		@ sp needed
  72 000e 10BD     		pop	{r4, pc}
  73              	.L5:
  96:Core/Src/stm32c0xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
  74              		.loc 1 96 3 is_stmt 1 view .LVU10
  75 0010 FFF7FEFF 		bl	xPortSysTickHandler
  76              	.LVL2:
  77              		.loc 1 103 1 is_stmt 0 view .LVU11
  78 0014 FBE7     		b	.L3
  79              		.cfi_endproc
  80              	.LFE219:
  82              		.section	.text.FLASH_IRQHandler,"ax",%progbits
  83              		.align	1
  84              		.global	FLASH_IRQHandler
  85              		.syntax unified
  86              		.code	16
  87              		.thumb_func
  89              	FLASH_IRQHandler:
  90              	.LFB220:
 104:Core/Src/stm32c0xx_it.c **** 
 105:Core/Src/stm32c0xx_it.c **** /******************************************************************************/
 106:Core/Src/stm32c0xx_it.c **** /* STM32C0xx Peripheral Interrupt Handlers                                    */
 107:Core/Src/stm32c0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 108:Core/Src/stm32c0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 109:Core/Src/stm32c0xx_it.c **** /* please refer to the startup file (startup_stm32c0xx.s).                    */
 110:Core/Src/stm32c0xx_it.c **** /******************************************************************************/
 111:Core/Src/stm32c0xx_it.c **** 
 112:Core/Src/stm32c0xx_it.c **** /**
 113:Core/Src/stm32c0xx_it.c ****   * @brief This function handles Flash global interrupt.
 114:Core/Src/stm32c0xx_it.c ****   */
 115:Core/Src/stm32c0xx_it.c **** void FLASH_IRQHandler(void)
 116:Core/Src/stm32c0xx_it.c **** {
  91              		.loc 1 116 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95 0000 10B5     		push	{r4, lr}
  96              	.LCFI1:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 117:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 0 */
 118:Core/Src/stm32c0xx_it.c **** 
 119:Core/Src/stm32c0xx_it.c ****   /* USER CODE END FLASH_IRQn 0 */
 120:Core/Src/stm32c0xx_it.c ****   HAL_FLASH_IRQHandler();
 100              		.loc 1 120 3 view .LVU13
 101 0002 FFF7FEFF 		bl	HAL_FLASH_IRQHandler
 102              	.LVL3:
 121:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 1 */
 122:Core/Src/stm32c0xx_it.c **** 
 123:Core/Src/stm32c0xx_it.c ****   /* USER CODE END FLASH_IRQn 1 */
 124:Core/Src/stm32c0xx_it.c **** }
 103              		.loc 1 124 1 is_stmt 0 view .LVU14
 104              		@ sp needed
 105 0006 10BD     		pop	{r4, pc}
 106              		.cfi_endproc
 107              	.LFE220:
ARM GAS  C:\Users\main\AppData\Local\Temp\ccvX4GZn.s 			page 5


 109              		.section	.text.RCC_IRQHandler,"ax",%progbits
 110              		.align	1
 111              		.global	RCC_IRQHandler
 112              		.syntax unified
 113              		.code	16
 114              		.thumb_func
 116              	RCC_IRQHandler:
 117              	.LFB221:
 125:Core/Src/stm32c0xx_it.c **** 
 126:Core/Src/stm32c0xx_it.c **** /**
 127:Core/Src/stm32c0xx_it.c ****   * @brief This function handles RCC global interrupt.
 128:Core/Src/stm32c0xx_it.c ****   */
 129:Core/Src/stm32c0xx_it.c **** void RCC_IRQHandler(void)
 130:Core/Src/stm32c0xx_it.c **** {
 118              		.loc 1 130 1 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 131:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 0 */
 132:Core/Src/stm32c0xx_it.c **** 
 133:Core/Src/stm32c0xx_it.c ****   /* USER CODE END RCC_IRQn 0 */
 134:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 1 */
 135:Core/Src/stm32c0xx_it.c **** 
 136:Core/Src/stm32c0xx_it.c ****   /* USER CODE END RCC_IRQn 1 */
 137:Core/Src/stm32c0xx_it.c **** }
 123              		.loc 1 137 1 view .LVU16
 124              		@ sp needed
 125 0000 7047     		bx	lr
 126              		.cfi_endproc
 127              	.LFE221:
 129              		.section	.text.EXTI4_15_IRQHandler,"ax",%progbits
 130              		.align	1
 131              		.global	EXTI4_15_IRQHandler
 132              		.syntax unified
 133              		.code	16
 134              		.thumb_func
 136              	EXTI4_15_IRQHandler:
 137              	.LFB222:
 138:Core/Src/stm32c0xx_it.c **** 
 139:Core/Src/stm32c0xx_it.c **** /**
 140:Core/Src/stm32c0xx_it.c ****   * @brief This function handles EXTI line 4 to 15 interrupts.
 141:Core/Src/stm32c0xx_it.c ****   */
 142:Core/Src/stm32c0xx_it.c **** void EXTI4_15_IRQHandler(void)
 143:Core/Src/stm32c0xx_it.c **** {
 138              		.loc 1 143 1 view -0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 10B5     		push	{r4, lr}
 143              	.LCFI2:
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 4, -8
 146              		.cfi_offset 14, -4
 144:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN EXTI4_15_IRQn 0 */
 145:Core/Src/stm32c0xx_it.c **** 
 146:Core/Src/stm32c0xx_it.c ****   /* USER CODE END EXTI4_15_IRQn 0 */
ARM GAS  C:\Users\main\AppData\Local\Temp\ccvX4GZn.s 			page 6


 147:Core/Src/stm32c0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 147              		.loc 1 147 3 view .LVU18
 148 0002 8020     		movs	r0, #128
 149 0004 8001     		lsls	r0, r0, #6
 150 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 151              	.LVL4:
 148:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN EXTI4_15_IRQn 1 */
 149:Core/Src/stm32c0xx_it.c **** 
 150:Core/Src/stm32c0xx_it.c ****   /* USER CODE END EXTI4_15_IRQn 1 */
 151:Core/Src/stm32c0xx_it.c **** }
 152              		.loc 1 151 1 is_stmt 0 view .LVU19
 153              		@ sp needed
 154 000a 10BD     		pop	{r4, pc}
 155              		.cfi_endproc
 156              	.LFE222:
 158              		.text
 159              	.Letext0:
 160              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 161              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 162              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"
 163              		.file 5 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_gpio.h"
 164              		.file 6 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_flash.h"
 165              		.file 7 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal.h"
 166              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 167              		.file 9 "Core/Inc/FreeRTOSConfig.h"
ARM GAS  C:\Users\main\AppData\Local\Temp\ccvX4GZn.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 stm32c0xx_it.c
C:\Users\main\AppData\Local\Temp\ccvX4GZn.s:18     .text.HardFault_Handler:00000000 $t
C:\Users\main\AppData\Local\Temp\ccvX4GZn.s:24     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\main\AppData\Local\Temp\ccvX4GZn.s:42     .text.SysTick_Handler:00000000 $t
C:\Users\main\AppData\Local\Temp\ccvX4GZn.s:48     .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\main\AppData\Local\Temp\ccvX4GZn.s:83     .text.FLASH_IRQHandler:00000000 $t
C:\Users\main\AppData\Local\Temp\ccvX4GZn.s:89     .text.FLASH_IRQHandler:00000000 FLASH_IRQHandler
C:\Users\main\AppData\Local\Temp\ccvX4GZn.s:110    .text.RCC_IRQHandler:00000000 $t
C:\Users\main\AppData\Local\Temp\ccvX4GZn.s:116    .text.RCC_IRQHandler:00000000 RCC_IRQHandler
C:\Users\main\AppData\Local\Temp\ccvX4GZn.s:130    .text.EXTI4_15_IRQHandler:00000000 $t
C:\Users\main\AppData\Local\Temp\ccvX4GZn.s:136    .text.EXTI4_15_IRQHandler:00000000 EXTI4_15_IRQHandler

UNDEFINED SYMBOLS
HAL_IncTick
xTaskGetSchedulerState
xPortSysTickHandler
HAL_FLASH_IRQHandler
HAL_GPIO_EXTI_IRQHandler
