ARM GAS  C:\Users\main\AppData\Local\Temp\ccKllqjw.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32c0xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.global	SystemInit
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	SystemInit:
  25              	.LFB214:
  26              		.file 1 "Core/Src/system_stm32c0xx.c"
   1:Core/Src/system_stm32c0xx.c **** /**
   2:Core/Src/system_stm32c0xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32c0xx.c ****   * @file    system_stm32c0xx.c
   4:Core/Src/system_stm32c0xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32c0xx.c ****   * @brief   CMSIS Cortex-M0+ Device Peripheral Access Layer System Source File
   6:Core/Src/system_stm32c0xx.c ****   *
   7:Core/Src/system_stm32c0xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32c0xx.c ****   *   user application:
   9:Core/Src/system_stm32c0xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32c0xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32c0xx.c ****   *                      the "startup_stm32c0xx.s" file.
  12:Core/Src/system_stm32c0xx.c ****   *
  13:Core/Src/system_stm32c0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32c0xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32c0xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32c0xx.c ****   *
  17:Core/Src/system_stm32c0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32c0xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32c0xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32c0xx.c ****   *
  21:Core/Src/system_stm32c0xx.c ****   ******************************************************************************
  22:Core/Src/system_stm32c0xx.c ****   * @attention
  23:Core/Src/system_stm32c0xx.c ****   *
  24:Core/Src/system_stm32c0xx.c ****   * Copyright (c) 2022 STMicroelectronics.
  25:Core/Src/system_stm32c0xx.c ****   * All rights reserved.
  26:Core/Src/system_stm32c0xx.c ****   *
  27:Core/Src/system_stm32c0xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  28:Core/Src/system_stm32c0xx.c ****   * in the root directory of this software component.
  29:Core/Src/system_stm32c0xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  30:Core/Src/system_stm32c0xx.c ****   *
  31:Core/Src/system_stm32c0xx.c ****   ******************************************************************************
  32:Core/Src/system_stm32c0xx.c ****   */
ARM GAS  C:\Users\main\AppData\Local\Temp\ccKllqjw.s 			page 2


  33:Core/Src/system_stm32c0xx.c **** 
  34:Core/Src/system_stm32c0xx.c **** /** @addtogroup CMSIS
  35:Core/Src/system_stm32c0xx.c ****   * @{
  36:Core/Src/system_stm32c0xx.c ****   */
  37:Core/Src/system_stm32c0xx.c **** 
  38:Core/Src/system_stm32c0xx.c **** /** @addtogroup stm32c0xx_system
  39:Core/Src/system_stm32c0xx.c ****   * @{
  40:Core/Src/system_stm32c0xx.c ****   */
  41:Core/Src/system_stm32c0xx.c **** 
  42:Core/Src/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_Includes
  43:Core/Src/system_stm32c0xx.c ****   * @{
  44:Core/Src/system_stm32c0xx.c ****   */
  45:Core/Src/system_stm32c0xx.c **** 
  46:Core/Src/system_stm32c0xx.c **** #include "stm32c0xx.h"
  47:Core/Src/system_stm32c0xx.c **** 
  48:Core/Src/system_stm32c0xx.c **** #if !defined  (HSE_VALUE)
  49:Core/Src/system_stm32c0xx.c **** #define HSE_VALUE    (48000000UL)    /*!< Value of the External oscillator in Hz */
  50:Core/Src/system_stm32c0xx.c **** #endif /* HSE_VALUE */
  51:Core/Src/system_stm32c0xx.c **** 
  52:Core/Src/system_stm32c0xx.c **** #if !defined  (HSI_VALUE)
  53:Core/Src/system_stm32c0xx.c ****   #define HSI_VALUE  (48000000UL)   /*!< Value of the Internal oscillator in Hz*/
  54:Core/Src/system_stm32c0xx.c **** #endif /* HSI_VALUE */
  55:Core/Src/system_stm32c0xx.c **** 
  56:Core/Src/system_stm32c0xx.c **** #if !defined  (LSI_VALUE)
  57:Core/Src/system_stm32c0xx.c ****  #define LSI_VALUE   (32000UL)     /*!< Value of LSI in Hz*/
  58:Core/Src/system_stm32c0xx.c **** #endif /* LSI_VALUE */
  59:Core/Src/system_stm32c0xx.c **** 
  60:Core/Src/system_stm32c0xx.c **** #if !defined  (LSE_VALUE)
  61:Core/Src/system_stm32c0xx.c ****   #define LSE_VALUE  (32768UL)      /*!< Value of LSE in Hz*/
  62:Core/Src/system_stm32c0xx.c **** #endif /* LSE_VALUE */
  63:Core/Src/system_stm32c0xx.c **** 
  64:Core/Src/system_stm32c0xx.c **** #if defined(RCC_HSI48_SUPPORT)
  65:Core/Src/system_stm32c0xx.c **** #if !defined  (HSI48_VALUE)
  66:Core/Src/system_stm32c0xx.c **** #define HSI48_VALUE  48000000U  /*!< Value of the HSI48 oscillator in Hz */
  67:Core/Src/system_stm32c0xx.c **** #endif /* HSI48_VALUE */
  68:Core/Src/system_stm32c0xx.c **** #endif /* RCC_HSI48_SUPPORT */
  69:Core/Src/system_stm32c0xx.c **** 
  70:Core/Src/system_stm32c0xx.c **** /**
  71:Core/Src/system_stm32c0xx.c ****   * @}
  72:Core/Src/system_stm32c0xx.c ****   */
  73:Core/Src/system_stm32c0xx.c **** 
  74:Core/Src/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_TypesDefinitions
  75:Core/Src/system_stm32c0xx.c ****   * @{
  76:Core/Src/system_stm32c0xx.c ****   */
  77:Core/Src/system_stm32c0xx.c **** 
  78:Core/Src/system_stm32c0xx.c **** /**
  79:Core/Src/system_stm32c0xx.c ****   * @}
  80:Core/Src/system_stm32c0xx.c ****   */
  81:Core/Src/system_stm32c0xx.c **** 
  82:Core/Src/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_Defines
  83:Core/Src/system_stm32c0xx.c ****   * @{
  84:Core/Src/system_stm32c0xx.c ****   */
  85:Core/Src/system_stm32c0xx.c **** 
  86:Core/Src/system_stm32c0xx.c **** /************************* Miscellaneous Configuration ************************/
  87:Core/Src/system_stm32c0xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  88:Core/Src/system_stm32c0xx.c ****      Internal SRAM. */
  89:Core/Src/system_stm32c0xx.c **** //#define VECT_TAB_SRAM 
ARM GAS  C:\Users\main\AppData\Local\Temp\ccKllqjw.s 			page 3


  90:Core/Src/system_stm32c0xx.c **** #define VECT_TAB_OFFSET  0x0U /*!< Vector Table base offset field.
  91:Core/Src/system_stm32c0xx.c ****                                    This value must be a multiple of 0x100. */
  92:Core/Src/system_stm32c0xx.c **** /******************************************************************************/
  93:Core/Src/system_stm32c0xx.c **** /**
  94:Core/Src/system_stm32c0xx.c ****   * @}
  95:Core/Src/system_stm32c0xx.c ****   */
  96:Core/Src/system_stm32c0xx.c **** 
  97:Core/Src/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_Macros
  98:Core/Src/system_stm32c0xx.c ****   * @{
  99:Core/Src/system_stm32c0xx.c ****   */
 100:Core/Src/system_stm32c0xx.c **** 
 101:Core/Src/system_stm32c0xx.c **** /**
 102:Core/Src/system_stm32c0xx.c ****   * @}
 103:Core/Src/system_stm32c0xx.c ****   */
 104:Core/Src/system_stm32c0xx.c **** 
 105:Core/Src/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_Variables
 106:Core/Src/system_stm32c0xx.c ****   * @{
 107:Core/Src/system_stm32c0xx.c ****   */
 108:Core/Src/system_stm32c0xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 109:Core/Src/system_stm32c0xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 110:Core/Src/system_stm32c0xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 111:Core/Src/system_stm32c0xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 112:Core/Src/system_stm32c0xx.c ****          Note: If you use this function to configure the system clock; then there
 113:Core/Src/system_stm32c0xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 114:Core/Src/system_stm32c0xx.c ****                variable is updated automatically.
 115:Core/Src/system_stm32c0xx.c ****   */
 116:Core/Src/system_stm32c0xx.c ****   uint32_t SystemCoreClock = 12000000UL;
 117:Core/Src/system_stm32c0xx.c **** 
 118:Core/Src/system_stm32c0xx.c ****   const uint32_t AHBPrescTable[16UL] = {0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 1UL, 2UL, 3UL, 4UL,
 119:Core/Src/system_stm32c0xx.c ****   const uint32_t APBPrescTable[8UL] =  {0UL, 0UL, 0UL, 0UL, 1UL, 2UL, 3UL, 4UL};
 120:Core/Src/system_stm32c0xx.c **** 
 121:Core/Src/system_stm32c0xx.c **** /**
 122:Core/Src/system_stm32c0xx.c ****   * @}
 123:Core/Src/system_stm32c0xx.c ****   */
 124:Core/Src/system_stm32c0xx.c **** 
 125:Core/Src/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_FunctionPrototypes
 126:Core/Src/system_stm32c0xx.c ****   * @{
 127:Core/Src/system_stm32c0xx.c ****   */
 128:Core/Src/system_stm32c0xx.c **** 
 129:Core/Src/system_stm32c0xx.c **** /**
 130:Core/Src/system_stm32c0xx.c ****   * @}
 131:Core/Src/system_stm32c0xx.c ****   */
 132:Core/Src/system_stm32c0xx.c **** 
 133:Core/Src/system_stm32c0xx.c **** /** @addtogroup STM32C0xx_System_Private_Functions
 134:Core/Src/system_stm32c0xx.c ****   * @{
 135:Core/Src/system_stm32c0xx.c ****   */
 136:Core/Src/system_stm32c0xx.c **** 
 137:Core/Src/system_stm32c0xx.c **** /**
 138:Core/Src/system_stm32c0xx.c ****   * @brief  Setup the microcontroller system.
 139:Core/Src/system_stm32c0xx.c ****   * @param  None
 140:Core/Src/system_stm32c0xx.c ****   * @retval None
 141:Core/Src/system_stm32c0xx.c ****   */
 142:Core/Src/system_stm32c0xx.c **** void SystemInit(void)
 143:Core/Src/system_stm32c0xx.c **** {
  27              		.loc 1 143 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\main\AppData\Local\Temp\ccKllqjw.s 			page 4


  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 144:Core/Src/system_stm32c0xx.c ****   
 145:Core/Src/system_stm32c0xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 146:Core/Src/system_stm32c0xx.c **** #ifdef VECT_TAB_SRAM
 147:Core/Src/system_stm32c0xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 148:Core/Src/system_stm32c0xx.c **** #else
 149:Core/Src/system_stm32c0xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  32              		.loc 1 149 3 view .LVU1
  33              		.loc 1 149 13 is_stmt 0 view .LVU2
  34 0000 024B     		ldr	r3, .L2
  35 0002 8022     		movs	r2, #128
  36 0004 1205     		lsls	r2, r2, #20
  37 0006 9A60     		str	r2, [r3, #8]
 150:Core/Src/system_stm32c0xx.c **** #endif
 151:Core/Src/system_stm32c0xx.c **** }
  38              		.loc 1 151 1 view .LVU3
  39              		@ sp needed
  40 0008 7047     		bx	lr
  41              	.L3:
  42 000a C046     		.align	2
  43              	.L2:
  44 000c 00ED00E0 		.word	-536810240
  45              		.cfi_endproc
  46              	.LFE214:
  48              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  49              		.align	1
  50              		.global	SystemCoreClockUpdate
  51              		.syntax unified
  52              		.code	16
  53              		.thumb_func
  55              	SystemCoreClockUpdate:
  56              	.LFB215:
 152:Core/Src/system_stm32c0xx.c **** 
 153:Core/Src/system_stm32c0xx.c **** /**
 154:Core/Src/system_stm32c0xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 155:Core/Src/system_stm32c0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 156:Core/Src/system_stm32c0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 157:Core/Src/system_stm32c0xx.c ****   *         other parameters.
 158:Core/Src/system_stm32c0xx.c ****   *
 159:Core/Src/system_stm32c0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 160:Core/Src/system_stm32c0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 161:Core/Src/system_stm32c0xx.c ****   *         based on this variable will be incorrect.
 162:Core/Src/system_stm32c0xx.c ****   *
 163:Core/Src/system_stm32c0xx.c ****   * @note   - The system frequency computed by this function is not the real
 164:Core/Src/system_stm32c0xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 165:Core/Src/system_stm32c0xx.c ****   *           constant and the selected clock source:
 166:Core/Src/system_stm32c0xx.c ****   *
 167:Core/Src/system_stm32c0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**) / HSI divis
 168:Core/Src/system_stm32c0xx.c ****   *
 169:Core/Src/system_stm32c0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 170:Core/Src/system_stm32c0xx.c ****   *
 171:Core/Src/system_stm32c0xx.c ****   *           - If SYSCLK source is LSI, SystemCoreClock will contain the LSI_VALUE
 172:Core/Src/system_stm32c0xx.c ****   *
 173:Core/Src/system_stm32c0xx.c ****   *           - If SYSCLK source is LSE, SystemCoreClock will contain the LSE_VALUE
 174:Core/Src/system_stm32c0xx.c ****   *
 175:Core/Src/system_stm32c0xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32c0xx_hal_conf.h file (default value
ARM GAS  C:\Users\main\AppData\Local\Temp\ccKllqjw.s 			page 5


 176:Core/Src/system_stm32c0xx.c ****   *              48 MHz) but the real value may vary depending on the variations
 177:Core/Src/system_stm32c0xx.c ****   *              in voltage and temperature.
 178:Core/Src/system_stm32c0xx.c ****   *
 179:Core/Src/system_stm32c0xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32c0xx_hal_conf.h file (default value
 180:Core/Src/system_stm32c0xx.c ****   *              48 MHz), user has to ensure that HSE_VALUE is same as the real
 181:Core/Src/system_stm32c0xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 182:Core/Src/system_stm32c0xx.c ****   *              have wrong result.
 183:Core/Src/system_stm32c0xx.c ****   *
 184:Core/Src/system_stm32c0xx.c ****   *         - The result of this function could be not correct when using fractional
 185:Core/Src/system_stm32c0xx.c ****   *           value for HSE crystal.
 186:Core/Src/system_stm32c0xx.c ****   *
 187:Core/Src/system_stm32c0xx.c ****   * @param  None
 188:Core/Src/system_stm32c0xx.c ****   * @retval None
 189:Core/Src/system_stm32c0xx.c ****   */
 190:Core/Src/system_stm32c0xx.c **** void SystemCoreClockUpdate(void)
 191:Core/Src/system_stm32c0xx.c **** {
  57              		.loc 1 191 1 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
 192:Core/Src/system_stm32c0xx.c ****   uint32_t tmp;
  62              		.loc 1 192 3 view .LVU5
 193:Core/Src/system_stm32c0xx.c ****   uint32_t hsidiv;
  63              		.loc 1 193 3 view .LVU6
 194:Core/Src/system_stm32c0xx.c ****   uint32_t sysdiv;
  64              		.loc 1 194 3 view .LVU7
 195:Core/Src/system_stm32c0xx.c **** #if defined(RCC_CR_SYSDIV)
 196:Core/Src/system_stm32c0xx.c ****   sysdiv = (uint32_t)(((RCC->CR & RCC_CR_SYSDIV) >> RCC_CR_SYSDIV_Pos) + 1U);
 197:Core/Src/system_stm32c0xx.c **** #else
 198:Core/Src/system_stm32c0xx.c ****   sysdiv = 1U;
  65              		.loc 1 198 3 view .LVU8
  66              	.LVL0:
 199:Core/Src/system_stm32c0xx.c **** #endif /* RCC_CR_SYSDIV */
 200:Core/Src/system_stm32c0xx.c **** 
 201:Core/Src/system_stm32c0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 202:Core/Src/system_stm32c0xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  67              		.loc 1 202 3 view .LVU9
  68              		.loc 1 202 14 is_stmt 0 view .LVU10
  69 0000 164B     		ldr	r3, .L10
  70 0002 9A68     		ldr	r2, [r3, #8]
  71              		.loc 1 202 21 view .LVU11
  72 0004 3823     		movs	r3, #56
  73 0006 1340     		ands	r3, r2
  74              		.loc 1 202 3 view .LVU12
  75 0008 182B     		cmp	r3, #24
  76 000a 1DD0     		beq	.L5
  77 000c 202B     		cmp	r3, #32
  78 000e 20D0     		beq	.L6
  79 0010 082B     		cmp	r3, #8
  80 0012 09D0     		beq	.L9
 203:Core/Src/system_stm32c0xx.c ****   {
 204:Core/Src/system_stm32c0xx.c ****     case RCC_CFGR_SWS_0:                /* HSE used as system clock */
 205:Core/Src/system_stm32c0xx.c ****       SystemCoreClock = (HSE_VALUE / sysdiv);
 206:Core/Src/system_stm32c0xx.c ****       break;
 207:Core/Src/system_stm32c0xx.c **** 
 208:Core/Src/system_stm32c0xx.c **** #if defined(RCC_HSI48_SUPPORT)
ARM GAS  C:\Users\main\AppData\Local\Temp\ccKllqjw.s 			page 6


 209:Core/Src/system_stm32c0xx.c ****     case RCC_CFGR_SW_1:                 /* HSI48 used as system clock */
 210:Core/Src/system_stm32c0xx.c ****       SystemCoreClock = (HSI48_VALUE / sysdiv);
 211:Core/Src/system_stm32c0xx.c ****       break;
 212:Core/Src/system_stm32c0xx.c **** #endif /* RCC_HSI48_SUPPORT */
 213:Core/Src/system_stm32c0xx.c **** 
 214:Core/Src/system_stm32c0xx.c ****     case (RCC_CFGR_SWS_1 | RCC_CFGR_SWS_0):  /* LSI used as system clock */
 215:Core/Src/system_stm32c0xx.c ****       SystemCoreClock = (LSI_VALUE / sysdiv);
 216:Core/Src/system_stm32c0xx.c ****       break;
 217:Core/Src/system_stm32c0xx.c **** 
 218:Core/Src/system_stm32c0xx.c ****     case RCC_CFGR_SWS_2:                /* LSE used as system clock */
 219:Core/Src/system_stm32c0xx.c ****       SystemCoreClock = (LSE_VALUE / sysdiv);
 220:Core/Src/system_stm32c0xx.c ****       break;
 221:Core/Src/system_stm32c0xx.c **** 
 222:Core/Src/system_stm32c0xx.c ****     case 0x00000000U:                   /* HSI used as system clock */
 223:Core/Src/system_stm32c0xx.c ****     default:                            /* HSI used as system clock */
 224:Core/Src/system_stm32c0xx.c ****       hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV))>> RCC_CR_HSIDIV_Pos));
  81              		.loc 1 224 7 is_stmt 1 view .LVU13
  82              		.loc 1 224 26 is_stmt 0 view .LVU14
  83 0014 114B     		ldr	r3, .L10
  84 0016 1B68     		ldr	r3, [r3]
  85              		.loc 1 224 59 view .LVU15
  86 0018 DB0A     		lsrs	r3, r3, #11
  87 001a 0722     		movs	r2, #7
  88 001c 1A40     		ands	r2, r3
  89              	.LVL1:
 225:Core/Src/system_stm32c0xx.c ****       SystemCoreClock = ((HSI_VALUE / sysdiv) / hsidiv);
  90              		.loc 1 225 7 is_stmt 1 view .LVU16
  91              		.loc 1 225 47 is_stmt 0 view .LVU17
  92 001e 104B     		ldr	r3, .L10+4
  93 0020 D340     		lsrs	r3, r3, r2
  94              		.loc 1 225 23 view .LVU18
  95 0022 104A     		ldr	r2, .L10+8
  96              	.LVL2:
  97              		.loc 1 225 23 view .LVU19
  98 0024 1360     		str	r3, [r2]
 226:Core/Src/system_stm32c0xx.c ****       break;
  99              		.loc 1 226 7 is_stmt 1 view .LVU20
 100 0026 02E0     		b	.L8
 101              	.L9:
 205:Core/Src/system_stm32c0xx.c ****       break;
 102              		.loc 1 205 7 view .LVU21
 205:Core/Src/system_stm32c0xx.c ****       break;
 103              		.loc 1 205 23 is_stmt 0 view .LVU22
 104 0028 0E4B     		ldr	r3, .L10+8
 105 002a 0D4A     		ldr	r2, .L10+4
 106 002c 1A60     		str	r2, [r3]
 206:Core/Src/system_stm32c0xx.c **** 
 107              		.loc 1 206 7 is_stmt 1 view .LVU23
 108              	.L8:
 227:Core/Src/system_stm32c0xx.c ****   }
 228:Core/Src/system_stm32c0xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 229:Core/Src/system_stm32c0xx.c ****   /* Get HCLK prescaler */
 230:Core/Src/system_stm32c0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 109              		.loc 1 230 3 view .LVU24
 110              		.loc 1 230 28 is_stmt 0 view .LVU25
 111 002e 0B4B     		ldr	r3, .L10
 112 0030 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\main\AppData\Local\Temp\ccKllqjw.s 			page 7


 113              		.loc 1 230 52 view .LVU26
 114 0032 120A     		lsrs	r2, r2, #8
 115 0034 0F23     		movs	r3, #15
 116 0036 1340     		ands	r3, r2
 117              		.loc 1 230 7 view .LVU27
 118 0038 9B00     		lsls	r3, r3, #2
 119 003a 0B4A     		ldr	r2, .L10+12
 120 003c 9B58     		ldr	r3, [r3, r2]
 121              	.LVL3:
 231:Core/Src/system_stm32c0xx.c ****   /* HCLK clock frequency */
 232:Core/Src/system_stm32c0xx.c ****   SystemCoreClock >>= tmp;
 122              		.loc 1 232 3 is_stmt 1 view .LVU28
 123              		.loc 1 232 19 is_stmt 0 view .LVU29
 124 003e 094A     		ldr	r2, .L10+8
 125 0040 1168     		ldr	r1, [r2]
 126 0042 D940     		lsrs	r1, r1, r3
 127 0044 1160     		str	r1, [r2]
 233:Core/Src/system_stm32c0xx.c **** }
 128              		.loc 1 233 1 view .LVU30
 129              		@ sp needed
 130 0046 7047     		bx	lr
 131              	.LVL4:
 132              	.L5:
 215:Core/Src/system_stm32c0xx.c ****       break;
 133              		.loc 1 215 7 is_stmt 1 view .LVU31
 215:Core/Src/system_stm32c0xx.c ****       break;
 134              		.loc 1 215 23 is_stmt 0 view .LVU32
 135 0048 064B     		ldr	r3, .L10+8
 136 004a FA22     		movs	r2, #250
 137 004c D201     		lsls	r2, r2, #7
 138 004e 1A60     		str	r2, [r3]
 216:Core/Src/system_stm32c0xx.c **** 
 139              		.loc 1 216 7 is_stmt 1 view .LVU33
 140 0050 EDE7     		b	.L8
 141              	.L6:
 219:Core/Src/system_stm32c0xx.c ****       break;
 142              		.loc 1 219 7 view .LVU34
 219:Core/Src/system_stm32c0xx.c ****       break;
 143              		.loc 1 219 23 is_stmt 0 view .LVU35
 144 0052 044B     		ldr	r3, .L10+8
 145 0054 8022     		movs	r2, #128
 146 0056 1202     		lsls	r2, r2, #8
 147 0058 1A60     		str	r2, [r3]
 220:Core/Src/system_stm32c0xx.c **** 
 148              		.loc 1 220 7 is_stmt 1 view .LVU36
 149 005a E8E7     		b	.L8
 150              	.L11:
 151              		.align	2
 152              	.L10:
 153 005c 00100240 		.word	1073876992
 154 0060 006CDC02 		.word	48000000
 155 0064 00000000 		.word	.LANCHOR0
 156 0068 00000000 		.word	.LANCHOR1
 157              		.cfi_endproc
 158              	.LFE215:
 160              		.global	APBPrescTable
 161              		.global	AHBPrescTable
ARM GAS  C:\Users\main\AppData\Local\Temp\ccKllqjw.s 			page 8


 162              		.global	SystemCoreClock
 163              		.section	.data.SystemCoreClock,"aw"
 164              		.align	2
 165              		.set	.LANCHOR0,. + 0
 168              	SystemCoreClock:
 169 0000 001BB700 		.word	12000000
 170              		.section	.rodata.AHBPrescTable,"a"
 171              		.align	2
 172              		.set	.LANCHOR1,. + 0
 175              	AHBPrescTable:
 176 0000 00000000 		.word	0
 177 0004 00000000 		.word	0
 178 0008 00000000 		.word	0
 179 000c 00000000 		.word	0
 180 0010 00000000 		.word	0
 181 0014 00000000 		.word	0
 182 0018 00000000 		.word	0
 183 001c 00000000 		.word	0
 184 0020 01000000 		.word	1
 185 0024 02000000 		.word	2
 186 0028 03000000 		.word	3
 187 002c 04000000 		.word	4
 188 0030 06000000 		.word	6
 189 0034 07000000 		.word	7
 190 0038 08000000 		.word	8
 191 003c 09000000 		.word	9
 192              		.section	.rodata.APBPrescTable,"a"
 193              		.align	2
 196              	APBPrescTable:
 197 0000 00000000 		.word	0
 198 0004 00000000 		.word	0
 199 0008 00000000 		.word	0
 200 000c 00000000 		.word	0
 201 0010 01000000 		.word	1
 202 0014 02000000 		.word	2
 203 0018 03000000 		.word	3
 204 001c 04000000 		.word	4
 205              		.text
 206              	.Letext0:
 207              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 208              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 209              		.file 4 "Drivers/CMSIS/Include/core_cm0plus.h"
 210              		.file 5 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/system_stm32c0xx.h"
 211              		.file 6 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/stm32c031xx.h"
ARM GAS  C:\Users\main\AppData\Local\Temp\ccKllqjw.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32c0xx.c
C:\Users\main\AppData\Local\Temp\ccKllqjw.s:18     .text.SystemInit:00000000 $t
C:\Users\main\AppData\Local\Temp\ccKllqjw.s:24     .text.SystemInit:00000000 SystemInit
C:\Users\main\AppData\Local\Temp\ccKllqjw.s:44     .text.SystemInit:0000000c $d
C:\Users\main\AppData\Local\Temp\ccKllqjw.s:49     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\main\AppData\Local\Temp\ccKllqjw.s:55     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\main\AppData\Local\Temp\ccKllqjw.s:153    .text.SystemCoreClockUpdate:0000005c $d
C:\Users\main\AppData\Local\Temp\ccKllqjw.s:196    .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\main\AppData\Local\Temp\ccKllqjw.s:175    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\main\AppData\Local\Temp\ccKllqjw.s:168    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\main\AppData\Local\Temp\ccKllqjw.s:164    .data.SystemCoreClock:00000000 $d
C:\Users\main\AppData\Local\Temp\ccKllqjw.s:171    .rodata.AHBPrescTable:00000000 $d
C:\Users\main\AppData\Local\Temp\ccKllqjw.s:193    .rodata.APBPrescTable:00000000 $d

NO UNDEFINED SYMBOLS
