ARM GAS  C:\Users\main\AppData\Local\Temp\ccFNr45H.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"qf_defer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.QActive_defer,"ax",%progbits
  18              		.align	1
  19              		.global	QActive_defer
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	QActive_defer:
  25              	.LVL0:
  26              	.LFB18:
  27              		.file 1 "Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c"
   1:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //============================================================================
   2:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // QP/C Real-Time Embedded Framework (RTEF)
   3:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // Version 8.0.2
   4:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //
   5:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // Copyright (C) 2005 Quantum Leaps, LLC. All rights reserved.
   6:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //
   7:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //                    Q u a n t u m  L e a P s
   8:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //                    ------------------------
   9:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //                    Modern Embedded Software
  10:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //
  11:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // SPDX-License-Identifier: GPL-3.0-or-later OR LicenseRef-QL-commercial
  12:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //
  13:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // This software is dual-licensed under the terms of the open-source GNU
  14:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // General Public License (GPL) or under the terms of one of the closed-
  15:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // source Quantum Leaps commercial licenses.
  16:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //
  17:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // Redistributions in source code must retain this top-level comment block.
  18:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // Plagiarizing this software to sidestep the license obligations is illegal.
  19:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //
  20:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // NOTE:
  21:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // The GPL does NOT permit the incorporation of this code into proprietary
  22:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // programs. Please contact Quantum Leaps for commercial licensing options,
  23:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // which expressly supersede the GPL and are designed explicitly for
  24:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // closed-source distribution.
  25:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //
  26:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // Quantum Leaps contact information:
  27:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // <www.state-machine.com/licensing>
  28:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** // <info@state-machine.com>
  29:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //============================================================================
  30:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** #define QP_IMPL           // this is QP implementation
  31:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** #include "qp_port.h"      // QP port
ARM GAS  C:\Users\main\AppData\Local\Temp\ccFNr45H.s 			page 2


  32:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** #include "qp_pkg.h"       // QP package-scope interface
  33:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** #include "qsafe.h"        // QP Functional Safety (FuSa) Subsystem
  34:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** #ifdef Q_SPY              // QS software tracing enabled?
  35:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     #include "qs_port.h"  // QS port
  36:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     #include "qs_pkg.h"   // QS facilities for pre-defined trace records
  37:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** #else
  38:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     #include "qs_dummy.h" // disable the QS software tracing
  39:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** #endif // Q_SPY
  40:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
  41:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** Q_DEFINE_THIS_MODULE("qf_defer")
  42:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
  43:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //............................................................................
  44:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //! @protected @memberof QActive
  45:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** bool QActive_defer(QActive const * const me,
  46:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     struct QEQueue * const eq,
  47:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     QEvt const * const e)
  48:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** {
  28              		.loc 1 48 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 48 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0300     		movs	r3, r0
  39 0004 0800     		movs	r0, r1
  40              	.LVL1:
  41              		.loc 1 48 1 view .LVU2
  42 0006 1100     		movs	r1, r2
  43              	.LVL2:
  49:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     bool const status = QEQueue_post(eq, e, 0U, me->prio);
  44              		.loc 1 49 5 is_stmt 1 view .LVU3
  45              		.loc 1 49 51 is_stmt 0 view .LVU4
  46 0008 1B7B     		ldrb	r3, [r3, #12]
  47              	.LVL3:
  48              		.loc 1 49 25 view .LVU5
  49 000a 0022     		movs	r2, #0
  50              	.LVL4:
  51              		.loc 1 49 25 view .LVU6
  52 000c FFF7FEFF 		bl	QEQueue_post
  53              	.LVL5:
  50:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
  51:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     QS_CRIT_STAT
  52:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     QS_CRIT_ENTRY();
  54              		.loc 1 52 5 is_stmt 1 view .LVU7
  53:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     QS_BEGIN_PRE(QS_QF_ACTIVE_DEFER, me->prio)
  55              		.loc 1 53 5 view .LVU8
  54:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QS_TIME_PRE();      // time stamp
  56              		.loc 1 54 9 view .LVU9
  55:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QS_OBJ_PRE(me);     // this active object
  57              		.loc 1 55 9 view .LVU10
  56:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QS_OBJ_PRE(eq);     // the deferred queue
  58              		.loc 1 56 9 view .LVU11
  57:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QS_SIG_PRE(e->sig); // the signal of the event
ARM GAS  C:\Users\main\AppData\Local\Temp\ccFNr45H.s 			page 3


  59              		.loc 1 57 9 view .LVU12
  58:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QS_2U8_PRE(e->poolNum_, e->refCtr_);
  60              		.loc 1 58 9 view .LVU13
  59:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     QS_END_PRE()
  60:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     QS_CRIT_EXIT();
  61              		.loc 1 60 5 view .LVU14
  61:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
  62:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     return status;
  62              		.loc 1 62 5 view .LVU15
  63:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** }
  63              		.loc 1 63 1 is_stmt 0 view .LVU16
  64              		@ sp needed
  65 0010 10BD     		pop	{r4, pc}
  66              		.cfi_endproc
  67              	.LFE18:
  69              		.section	.text.QActive_recall,"ax",%progbits
  70              		.align	1
  71              		.global	QActive_recall
  72              		.syntax unified
  73              		.code	16
  74              		.thumb_func
  76              	QActive_recall:
  77              	.LVL6:
  78              	.LFB19:
  64:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
  65:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //............................................................................
  66:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //! @protected @memberof QActive
  67:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** bool QActive_recall(QActive * const me,
  68:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     struct QEQueue * const eq)
  69:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** {
  79              		.loc 1 69 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		.loc 1 69 1 is_stmt 0 view .LVU18
  84 0000 70B5     		push	{r4, r5, r6, lr}
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 16
  87              		.cfi_offset 4, -16
  88              		.cfi_offset 5, -12
  89              		.cfi_offset 6, -8
  90              		.cfi_offset 14, -4
  91 0002 0500     		movs	r5, r0
  92 0004 0800     		movs	r0, r1
  93              	.LVL7:
  70:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     QEvt const * const e = QEQueue_get(eq, me->prio);
  94              		.loc 1 70 5 is_stmt 1 view .LVU19
  95              		.loc 1 70 46 is_stmt 0 view .LVU20
  96 0006 297B     		ldrb	r1, [r5, #12]
  97              	.LVL8:
  98              		.loc 1 70 28 view .LVU21
  99 0008 FFF7FEFF 		bl	QEQueue_get
 100              	.LVL9:
 101              		.loc 1 70 28 view .LVU22
 102 000c 041E     		subs	r4, r0, #0
 103              	.LVL10:
  71:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     QF_CRIT_STAT
ARM GAS  C:\Users\main\AppData\Local\Temp\ccFNr45H.s 			page 4


  72:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
  73:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     bool recalled = false;
 104              		.loc 1 73 5 is_stmt 1 view .LVU23
  74:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     if (e != (QEvt *)0) { // event available?
 105              		.loc 1 74 5 view .LVU24
 106              		.loc 1 74 8 is_stmt 0 view .LVU25
 107 000e 18D0     		beq	.L6
  75:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QACTIVE_POST_LIFO(me, e); // post it to the front of the AO's queue
 108              		.loc 1 75 9 is_stmt 1 view .LVU26
 109 0010 0100     		movs	r1, r0
 110 0012 2800     		movs	r0, r5
 111              	.LVL11:
 112              		.loc 1 75 9 is_stmt 0 view .LVU27
 113 0014 FFF7FEFF 		bl	QActive_postLIFO_
 114              	.LVL12:
  76:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
  77:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QF_CRIT_ENTRY();
 115              		.loc 1 77 9 is_stmt 1 view .LVU28
 116 0018 FFF7FEFF 		bl	vPortEnterCritical
 117              	.LVL13:
  78:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
  79:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         if (e->poolNum_ != 0U) { // is it a mutable event?
 118              		.loc 1 79 9 view .LVU29
 119              		.loc 1 79 14 is_stmt 0 view .LVU30
 120 001c A378     		ldrb	r3, [r4, #2]
 121              		.loc 1 79 12 view .LVU31
 122 001e 002B     		cmp	r3, #0
 123 0020 07D0     		beq	.L4
  80:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
  81:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             // after posting to the AO's queue the event must be referenced
  82:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             // at least twice: once in the deferred event queue (eq->get()
  83:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             // did NOT decrement the reference counter) and once in the
  84:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             // AO's event queue.
  85:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             Q_ASSERT_INCRIT(205, e->refCtr_ >= 2U);
 124              		.loc 1 85 13 is_stmt 1 view .LVU32
 125 0022 E378     		ldrb	r3, [r4, #3]
 126 0024 DBB2     		uxtb	r3, r3
 127 0026 012B     		cmp	r3, #1
 128 0028 07D9     		bls	.L7
  86:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
  87:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             // we need to decrement the reference counter once, to account
  88:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             // for removing the event from the deferred event queue.
  89:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             QEvt_refCtr_dec_(e); // decrement the reference counter
 129              		.loc 1 89 13 view .LVU33
 130              	.LVL14:
 131              	.LBB4:
 132              	.LBI4:
 133              		.file 2 "Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h"
   1:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //============================================================================
   2:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // QP/C Real-Time Embedded Framework (RTEF)
   3:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // Version 8.0.2
   4:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //
   5:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // Copyright (C) 2005 Quantum Leaps, LLC. All rights reserved.
   6:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //
   7:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //                    Q u a n t u m  L e a P s
   8:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //                    ------------------------
   9:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //                    Modern Embedded Software
ARM GAS  C:\Users\main\AppData\Local\Temp\ccFNr45H.s 			page 5


  10:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //
  11:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // SPDX-License-Identifier: GPL-3.0-or-later OR LicenseRef-QL-commercial
  12:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //
  13:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // This software is dual-licensed under the terms of the open-source GNU
  14:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // General Public License (GPL) or under the terms of one of the closed-
  15:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // source Quantum Leaps commercial licenses.
  16:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //
  17:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // Redistributions in source code must retain this top-level comment block.
  18:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // Plagiarizing this software to sidestep the license obligations is illegal.
  19:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //
  20:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // NOTE:
  21:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // The GPL does NOT permit the incorporation of this code into proprietary
  22:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // programs. Please contact Quantum Leaps for commercial licensing options,
  23:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // which expressly supersede the GPL and are designed explicitly for
  24:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // closed-source distribution.
  25:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //
  26:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // Quantum Leaps contact information:
  27:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // <www.state-machine.com/licensing>
  28:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // <info@state-machine.com>
  29:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //============================================================================
  30:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** #ifndef QP_PKG_H_
  31:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** #define QP_PKG_H_
  32:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** 
  33:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //============================================================================
  34:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** #define QACTIVE_CAST_(ptr_)    ((QActive *)(ptr_))
  35:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** #define Q_PTR2UINT_CAST_(ptr_) ((uintptr_t)(ptr_))
  36:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** 
  37:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //============================================================================
  38:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** typedef struct {
  39:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** #if (QF_MAX_EPOOL > 0U)
  40:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h ****     QF_EPOOL_TYPE_ ePool_[QF_MAX_EPOOL]; //!< @private @memberof QF_Attr
  41:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h ****     uint_fast8_t maxPool_;               //!< @private @memberof QF_Attr
  42:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** #else
  43:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h ****     uint8_t dummy;                       //!< @private @memberof QF_Attr
  44:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** #endif //  (QF_MAX_EPOOL == 0U)
  45:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** } QF_Attr;
  46:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** 
  47:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** extern QF_Attr QF_priv_; //!< @static @private @memberof QF
  48:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** 
  49:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //! @static @private @memberof QF
  50:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** void QF_bzero_(
  51:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h ****     void * const start,
  52:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h ****     uint_fast16_t const len);
  53:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** 
  54:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //============================================================================
  55:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** // Bitmasks are for the QTimeEvt::flags attribute
  56:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** #define QTE_FLAG_IS_LINKED      (1U << 7U)
  57:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** #define QTE_FLAG_WAS_DISARMED   (1U << 6U)
  58:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** 
  59:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //============================================================================
  60:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //! @private @memberof QEvt
  61:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** static inline void QEvt_refCtr_inc_(QEvt const * const me) {
  62:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h ****     // NOTE: this function must be called inside a critical section
  63:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h ****     uint8_t const rc = me->refCtr_ + 1U;
  64:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h ****     ((QEvt *)me)->refCtr_ = rc; // cast away 'const'
  65:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** }
  66:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** 
ARM GAS  C:\Users\main\AppData\Local\Temp\ccFNr45H.s 			page 6


  67:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** //! @private @memberof QEvt
  68:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h **** static inline void QEvt_refCtr_dec_(QEvt const * const me) {
 134              		.loc 2 68 20 view .LVU34
 135              	.LBB5:
  69:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h ****     // NOTE: this function must be called inside a critical section
  70:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h ****     uint8_t const rc = me->refCtr_ - 1U;
 136              		.loc 2 70 5 view .LVU35
 137              		.loc 2 70 26 is_stmt 0 view .LVU36
 138 002a E378     		ldrb	r3, [r4, #3]
 139              		.loc 2 70 19 view .LVU37
 140 002c 013B     		subs	r3, r3, #1
 141 002e DBB2     		uxtb	r3, r3
 142              	.LVL15:
  71:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp_pkg.h ****     ((QEvt *)me)->refCtr_ = rc; // cast away 'const'
 143              		.loc 2 71 5 is_stmt 1 view .LVU38
 144              		.loc 2 71 27 is_stmt 0 view .LVU39
 145 0030 E370     		strb	r3, [r4, #3]
 146              	.LVL16:
 147              	.L4:
 148              		.loc 2 71 27 view .LVU40
 149              	.LBE5:
 150              	.LBE4:
  90:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         }
  91:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
  92:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QS_BEGIN_PRE(QS_QF_ACTIVE_RECALL, me->prio)
 151              		.loc 1 92 9 is_stmt 1 view .LVU41
  93:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             QS_TIME_PRE();      // time stamp
 152              		.loc 1 93 13 view .LVU42
  94:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             QS_OBJ_PRE(me);     // this active object
 153              		.loc 1 94 13 view .LVU43
  95:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             QS_OBJ_PRE(eq);     // the deferred queue
 154              		.loc 1 95 13 view .LVU44
  96:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             QS_SIG_PRE(e->sig); // the signal of the event
 155              		.loc 1 96 13 view .LVU45
  97:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             QS_2U8_PRE(e->poolNum_, e->refCtr_);
 156              		.loc 1 97 13 view .LVU46
  98:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QS_END_PRE()
  99:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
 100:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QF_CRIT_EXIT();
 157              		.loc 1 100 9 view .LVU47
 158 0032 FFF7FEFF 		bl	vPortExitCritical
 159              	.LVL17:
 101:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
 102:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         recalled = true;
 160              		.loc 1 102 9 view .LVU48
 161              		.loc 1 102 18 is_stmt 0 view .LVU49
 162 0036 0120     		movs	r0, #1
 163              	.LVL18:
 164              	.L3:
 103:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     }
 104:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     else {
 105:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QS_CRIT_ENTRY();
 106:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
 107:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QS_BEGIN_PRE(QS_QF_ACTIVE_RECALL_ATTEMPT, me->prio)
 108:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             QS_TIME_PRE();      // time stamp
 165              		.loc 1 108 13 is_stmt 1 view .LVU50
 109:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             QS_OBJ_PRE(me);     // this active object
ARM GAS  C:\Users\main\AppData\Local\Temp\ccFNr45H.s 			page 7


 166              		.loc 1 109 13 view .LVU51
 110:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             QS_OBJ_PRE(eq);     // the deferred queue
 167              		.loc 1 110 13 view .LVU52
 111:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QS_END_PRE()
 112:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
 113:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QS_CRIT_EXIT();
 168              		.loc 1 113 9 view .LVU53
 114:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     }
 115:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     return recalled;
 169              		.loc 1 115 5 view .LVU54
 116:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** }
 170              		.loc 1 116 1 is_stmt 0 view .LVU55
 171              		@ sp needed
 172              	.LVL19:
 173              	.LVL20:
 174              		.loc 1 116 1 view .LVU56
 175 0038 70BD     		pop	{r4, r5, r6, pc}
 176              	.LVL21:
 177              	.L7:
  85:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
 178              		.loc 1 85 13 discriminator 1 view .LVU57
 179 003a CD21     		movs	r1, #205
 180 003c 0248     		ldr	r0, .L8
 181 003e FFF7FEFF 		bl	Q_onError
 182              	.LVL22:
 183              	.L6:
  73:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     if (e != (QEvt *)0) { // event available?
 184              		.loc 1 73 10 view .LVU58
 185 0042 0020     		movs	r0, #0
 186              	.LVL23:
  73:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     if (e != (QEvt *)0) { // event available?
 187              		.loc 1 73 10 view .LVU59
 188 0044 F8E7     		b	.L3
 189              	.L9:
 190 0046 C046     		.align	2
 191              	.L8:
 192 0048 00000000 		.word	.LANCHOR0
 193              		.cfi_endproc
 194              	.LFE19:
 196              		.section	.text.QActive_flushDeferred,"ax",%progbits
 197              		.align	1
 198              		.global	QActive_flushDeferred
 199              		.syntax unified
 200              		.code	16
 201              		.thumb_func
 203              	QActive_flushDeferred:
 204              	.LVL24:
 205              	.LFB20:
 117:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
 118:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //............................................................................
 119:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** //! @protected @memberof QActive
 120:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** uint_fast16_t QActive_flushDeferred(QActive const * const me,
 121:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     struct QEQueue * const eq,
 122:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     uint_fast16_t const num)
 123:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** {
 206              		.loc 1 123 1 is_stmt 1 view -0
 207              		.cfi_startproc
ARM GAS  C:\Users\main\AppData\Local\Temp\ccFNr45H.s 			page 8


 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		.loc 1 123 1 is_stmt 0 view .LVU61
 211 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 212              	.LCFI2:
 213              		.cfi_def_cfa_offset 24
 214              		.cfi_offset 3, -24
 215              		.cfi_offset 4, -20
 216              		.cfi_offset 5, -16
 217              		.cfi_offset 6, -12
 218              		.cfi_offset 7, -8
 219              		.cfi_offset 14, -4
 220 0002 0700     		movs	r7, r0
 221 0004 0E00     		movs	r6, r1
 222 0006 1500     		movs	r5, r2
 124:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     uint_fast16_t n = 0U;
 223              		.loc 1 124 5 is_stmt 1 view .LVU62
 224              	.LVL25:
 125:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     while (n < num) {
 225              		.loc 1 125 5 view .LVU63
 124:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     uint_fast16_t n = 0U;
 226              		.loc 1 124 19 is_stmt 0 view .LVU64
 227 0008 0024     		movs	r4, #0
 228              		.loc 1 125 11 view .LVU65
 229 000a 02E0     		b	.L11
 230              	.LVL26:
 231              	.L14:
 232              	.LBB6:
 126:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QEvt const * const e = QEQueue_get(eq, me->prio);
 127:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         if (e != (QEvt *)0) {
 128:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             ++n; // count one more flushed event
 233              		.loc 1 128 13 is_stmt 1 view .LVU66
 234 000c 0134     		adds	r4, r4, #1
 235              	.LVL27:
 129:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** #if (QF_MAX_EPOOL > 0U)
 130:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             QF_gc(e); // garbage collect
 236              		.loc 1 130 13 view .LVU67
 237 000e FFF7FEFF 		bl	QF_gc
 238              	.LVL28:
 239              	.L11:
 240              		.loc 1 130 13 is_stmt 0 view .LVU68
 241              	.LBE6:
 125:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QEvt const * const e = QEQueue_get(eq, me->prio);
 242              		.loc 1 125 11 is_stmt 1 view .LVU69
 243 0012 AC42     		cmp	r4, r5
 244 0014 05D2     		bcs	.L10
 245              	.LBB7:
 126:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QEvt const * const e = QEQueue_get(eq, me->prio);
 246              		.loc 1 126 9 view .LVU70
 126:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QEvt const * const e = QEQueue_get(eq, me->prio);
 247              		.loc 1 126 50 is_stmt 0 view .LVU71
 248 0016 397B     		ldrb	r1, [r7, #12]
 126:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         QEvt const * const e = QEQueue_get(eq, me->prio);
 249              		.loc 1 126 32 view .LVU72
 250 0018 3000     		movs	r0, r6
 251 001a FFF7FEFF 		bl	QEQueue_get
 252              	.LVL29:
ARM GAS  C:\Users\main\AppData\Local\Temp\ccFNr45H.s 			page 9


 127:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             ++n; // count one more flushed event
 253              		.loc 1 127 9 is_stmt 1 view .LVU73
 127:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             ++n; // count one more flushed event
 254              		.loc 1 127 12 is_stmt 0 view .LVU74
 255 001e 0028     		cmp	r0, #0
 256 0020 F4D1     		bne	.L14
 257              	.LVL30:
 258              	.L10:
 127:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             ++n; // count one more flushed event
 259              		.loc 1 127 12 view .LVU75
 260              	.LBE7:
 131:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** #endif
 132:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         }
 133:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         else {
 134:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****             break;
 135:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****         }
 136:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     }
 137:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** 
 138:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c ****     return n;
 139:Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/src/qf/qf_defer.c **** }
 261              		.loc 1 139 1 view .LVU76
 262 0022 2000     		movs	r0, r4
 263              		@ sp needed
 264              	.LVL31:
 265              	.LVL32:
 266              	.LVL33:
 267              	.LVL34:
 268              		.loc 1 139 1 view .LVU77
 269 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 270              		.cfi_endproc
 271              	.LFE20:
 273              		.section	.rodata.Q_this_module_,"a"
 274              		.align	2
 275              		.set	.LANCHOR0,. + 0
 278              	Q_this_module_:
 279 0000 71665F64 		.ascii	"qf_defer\000"
 279      65666572 
 279      00
 280              		.text
 281              	.Letext0:
 282              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 283              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 284              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 285              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"
 286              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 287              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 288              		.file 9 "Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qequeue.h"
 289              		.file 10 "Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qp.h"
 290              		.file 11 "Middlewares/Third_Party/QuantumLeaps_RTEF_qpc/include/qsafe.h"
ARM GAS  C:\Users\main\AppData\Local\Temp\ccFNr45H.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 qf_defer.c
C:\Users\main\AppData\Local\Temp\ccFNr45H.s:18     .text.QActive_defer:00000000 $t
C:\Users\main\AppData\Local\Temp\ccFNr45H.s:24     .text.QActive_defer:00000000 QActive_defer
C:\Users\main\AppData\Local\Temp\ccFNr45H.s:70     .text.QActive_recall:00000000 $t
C:\Users\main\AppData\Local\Temp\ccFNr45H.s:76     .text.QActive_recall:00000000 QActive_recall
C:\Users\main\AppData\Local\Temp\ccFNr45H.s:192    .text.QActive_recall:00000048 $d
C:\Users\main\AppData\Local\Temp\ccFNr45H.s:197    .text.QActive_flushDeferred:00000000 $t
C:\Users\main\AppData\Local\Temp\ccFNr45H.s:203    .text.QActive_flushDeferred:00000000 QActive_flushDeferred
C:\Users\main\AppData\Local\Temp\ccFNr45H.s:274    .rodata.Q_this_module_:00000000 $d
C:\Users\main\AppData\Local\Temp\ccFNr45H.s:278    .rodata.Q_this_module_:00000000 Q_this_module_

UNDEFINED SYMBOLS
QEQueue_post
QEQueue_get
QActive_postLIFO_
vPortEnterCritical
vPortExitCritical
Q_onError
QF_gc
