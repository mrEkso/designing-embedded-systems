ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32c0xx_hal_adc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_uidiv
  18              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_ADCEx_Calibration_Start
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	HAL_ADCEx_Calibration_Start:
  26              	.LVL0:
  27              	.LFB342:
  28              		.file 1 "Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c"
   1:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /**
   2:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @file    stm32c0xx_hal_adc_ex.c
   4:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *          peripheral:
   8:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *           + Operation functions
   9:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *             ++ Calibration
  10:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *               +++ ADC automatic self-calibration
  11:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *               +++ Calibration factors get or set
  12:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file
  13:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *          "stm32c0xx_hal_adc.c".
  14:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *
  15:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   ******************************************************************************
  16:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @attention
  17:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *
  18:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * Copyright (c) 2022 STMicroelectronics.
  19:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * All rights reserved.
  20:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *
  21:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  22:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * in the root directory of this software component.
  23:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  24:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *
  25:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   ******************************************************************************
  26:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   @verbatim
  27:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   [..]
  28:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  29:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       available in file of generic functions "stm32c0xx_hal_adc.c".
  30:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   [..]
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 2


  31:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   @endverbatim
  32:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   ******************************************************************************
  33:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
  34:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
  35:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** #include "stm32c0xx_hal.h"
  37:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
  38:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /** @addtogroup STM32C0xx_HAL_Driver
  39:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @{
  40:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
  41:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
  42:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  43:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  44:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @{
  45:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
  46:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
  47:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  48:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
  49:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
  52:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADC Extended Private Constants
  53:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @{
  54:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
  55:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
  56:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                   */
  57:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /* Values defined to be higher than worst cases: maximum ratio between ADC    */
  58:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /* and CPU clock frequencies.                                                 */
  59:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /* Example of profile low frequency : ADC frequency at 31.25kHz (ADC clock    */
  60:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /* source 8MHz, ADC clock prescaler 256), CPU frequency 48MHz.            */
  61:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /* Calibration time max = 116 / fADC (refer to datasheet)                     */
  62:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /*                      = 178 176 CPU cycles                                  */
  63:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** #define ADC_CALIBRATION_TIMEOUT         (178176UL)   /*!< ADC calibration time-out value (unit: CPU
  64:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** #define ADC_DISABLE_TIMEOUT             (2UL)
  65:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
  66:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /**
  67:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @}
  68:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
  69:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
  70:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
  71:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
  72:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  73:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
  74:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
  75:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADC Extended Exported Functions
  76:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @{
  77:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
  78:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
  79:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Input and Output operation functions
  80:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @brief    Extended IO operation functions
  81:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *
  82:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** @verbatim
  83:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****  ===============================================================================
  84:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****                       ##### IO operation functions #####
  85:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****  ===============================================================================
  86:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
  87:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 3


  88:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration.
  89:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       (+) Get calibration factors.
  90:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       (+) Set calibration factors.
  91:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
  92:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** @endverbatim
  93:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @{
  94:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
  95:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
  96:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /**
  97:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
  98:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
  99:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
 100:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @note   Calibration factor can be read after calibration, using function
 101:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *         HAL_ADC_GetValue() (value on 7 bits: from DR[6;0]).
 102:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @param  hadc       ADC handle
 103:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @retval HAL status
 104:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
 105:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef *hadc)
 106:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** {
  29              		.loc 1 106 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 106 1 is_stmt 0 view .LVU1
  34 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 83B0     		sub	sp, sp, #12
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 32
  45 0004 0400     		movs	r4, r0
 107:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
  46              		.loc 1 107 3 is_stmt 1 view .LVU2
 108:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0UL;
  47              		.loc 1 108 3 view .LVU3
  48              		.loc 1 108 17 is_stmt 0 view .LVU4
  49 0006 0023     		movs	r3, #0
  50 0008 0193     		str	r3, [sp, #4]
 109:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   uint32_t backup_setting_cfgr1;
  51              		.loc 1 109 3 is_stmt 1 view .LVU5
 110:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   uint32_t calibration_index;
  52              		.loc 1 110 3 view .LVU6
 111:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   uint32_t calibration_factor_accumulated = 0;
  53              		.loc 1 111 3 view .LVU7
  54              	.LVL1:
 112:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   uint32_t tickstart;
  55              		.loc 1 112 3 view .LVU8
 113:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   uint32_t adc_clk_async_presc;
  56              		.loc 1 113 3 view .LVU9
 114:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   __IO uint32_t delay_cpu_cycles;
  57              		.loc 1 114 3 view .LVU10
 115:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 4


 116:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Check the parameters */
 117:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  58              		.loc 1 117 3 view .LVU11
 118:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 119:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Process locked */
 120:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  59              		.loc 1 120 3 view .LVU12
  60              		.loc 1 120 3 view .LVU13
  61 000a 5433     		adds	r3, r3, #84
  62 000c C35C     		ldrb	r3, [r0, r3]
  63 000e 012B     		cmp	r3, #1
  64 0010 00D1     		bne	.LCB34
  65 0012 A2E0     		b	.L16	@long jump
  66              	.LCB34:
  67              		.loc 1 120 3 discriminator 2 view .LVU14
  68 0014 0126     		movs	r6, #1
  69 0016 5423     		movs	r3, #84
  70 0018 C654     		strb	r6, [r0, r3]
  71              		.loc 1 120 3 discriminator 2 view .LVU15
 121:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 122:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
 123:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 124:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
 125:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
  72              		.loc 1 125 3 discriminator 2 view .LVU16
  73              		.loc 1 125 20 is_stmt 0 discriminator 2 view .LVU17
  74 001a FFF7FEFF 		bl	ADC_Disable
  75              	.LVL2:
  76              		.loc 1 125 20 discriminator 2 view .LVU18
  77 001e 0500     		movs	r5, r0
  78              	.LVL3:
 126:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 127:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 128:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
  79              		.loc 1 128 3 is_stmt 1 discriminator 2 view .LVU19
  80              		.loc 1 128 28 is_stmt 0 discriminator 2 view .LVU20
  81 0020 2368     		ldr	r3, [r4]
  82              	.LVL4:
  83              	.LBB32:
  84              	.LBI32:
  85              		.file 2 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h"
   1:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
   2:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @file    stm32c0xx_ll_adc.h
   4:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @attention
   8:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
   9:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * Copyright (c) 2022 STMicroelectronics.
  10:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
  12:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
  16:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ******************************************************************************
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 5


  17:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
  18:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  19:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #ifndef STM32C0xx_LL_ADC_H
  21:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define STM32C0xx_LL_ADC_H
  22:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  23:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #endif
  26:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  27:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #include "stm32c0xx.h"
  29:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  30:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @addtogroup STM32C0xx_LL_Driver
  31:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
  32:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
  33:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  34:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #if defined (ADC1)
  35:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  36:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
  38:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
  39:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  40:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  43:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
  46:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
  47:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  48:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  51:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  52:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  53:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  54:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  55:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  56:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_SQ1" positi
  57:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_SQ2" positi
  58:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_SQ3" positi
  59:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (12UL) /* Equivalent to bitfield "ADC_CHSELR_SQ4" positi
  60:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (16UL) /* Equivalent to bitfield "ADC_CHSELR_SQ5" positi
  61:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (20UL) /* Equivalent to bitfield "ADC_CHSELR_SQ6" positi
  62:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (24UL) /* Equivalent to bitfield "ADC_CHSELR_SQ7" positi
  63:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (28UL) /* Equivalent to bitfield "ADC_CHSELR_SQ8" positi
  64:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  65:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  66:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  67:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  68:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - regular trigger source                                                   */
  69:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - regular trigger edge                                                     */
  70:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT      (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge (
  71:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                   compatibility with some ADC on ot
  72:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                   having this setting set by HW def
  73:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 6


  74:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  75:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  76:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  77:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK           (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U *
  78:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  79:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  80:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  81:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  82:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  83:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  84:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  85:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK             (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U * 
  86:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
  87:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
  88:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
  89:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  90:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  91:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_CFGR1_EXTSEL" posi
  92:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CFGR1_EXTEN" posit
  93:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  94:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  95:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  96:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  97:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - channel identifier defined by number                                     */
  98:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
  99:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 100:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 101:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWD1CH)
 102:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
 103:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_SEQ     (ADC_CHSELR_SQ1 << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) 
 104:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ADC_CHANNEL_ID_NUMBER_MASK with reduced range: on this STM32 series, ADC group regular sequencer,
 105:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   if set to mode "fully configurable", can contain channels with a restricted channel number.
 106:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   Refer to function @ref LL_ADC_REG_SetSequencerConfigurable(). */
 107:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)              /* Equivalent to bitfield "ADC_CHAN
 108:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    position in register */
 109:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 110:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 111:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 112:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FUL) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 113:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   >> [Position of bitfield "ADC_CHANNEL_NUMBER_MASK" in register]) */
 114:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 115:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 116:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 117:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
 118:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 119:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 120:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* channels literals definition.                                              */
 121:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 122:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR1_AWD1CH_0)
 123:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR1_AWD1CH_1)
 124:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 125:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR1_AWD1CH_2)
 126:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_0)
 127:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1)
 128:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 129:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR1_AWD1CH_3)
 130:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_0)
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 7


 131:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1)
 132:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 133:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2)
 134:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 135:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 136:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | \
 137:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 138:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWD1CH_4)
 139:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_0)
 140:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_1)
 141:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 142:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_19_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 143:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_20_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_2 )
 144:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_21_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 145:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_22_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 146:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 147:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 148:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* channels literals definition.                                              */
 149:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 150:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 151:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 152:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 153:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 154:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 155:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 156:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 157:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 158:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 159:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 160:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 161:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 162:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 163:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 164:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 165:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 166:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
 168:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_19_BITFIELD            (ADC_CHSELR_CHSEL19)
 169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_20_BITFIELD            (ADC_CHSELR_CHSEL20)
 170:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_21_BITFIELD            (ADC_CHSELR_CHSEL21)
 171:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_22_BITFIELD            (ADC_CHSELR_CHSEL22)
 172:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 173:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal mask for ADC channel sampling time:                               */
 174:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* To select into literals LL_ADC_SAMPLINGTIME_x                              */
 175:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* the relevant bits for:                                                     */
 176:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* (concatenation of multiple bits used in register SMPR)                     */
 177:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - ADC channels sampling time: setting channel wise, to map each channel    */
 178:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*   on one of the common sampling time available.                            */
 179:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - ADC channels common sampling time: set a sampling time into one of the   */
 180:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*   common sampling time available.                                          */
 181:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_CH_MASK          (ADC_CHANNEL_ID_BITFIELD_MASK << ADC_SMPR_SMPSEL0_BITOFF
 182:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_MASK         (ADC_SMPR_SMP2 | ADC_SMPR_SMP1)
 183:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_SHIFT_MASK   (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SMPR_SMP1_BITOFFSET_P
 184:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 185:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 186:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 187:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 8


 188:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 series)).         */
 189:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 190:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 191:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 192:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*   selection on groups.                                                     */
 193:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 194:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 195:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 196:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 197:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 198:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 199:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 200:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 201:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 202:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 203:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 204:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 205:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS (20UL)
 206:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 207:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL
 208:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 209:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 210:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 211:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL)                      /* Position of bits ADC_AWD_
 212:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                           in ADC_AWD_CRX_REGOFFSET_
 213:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 214:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 215:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 216:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 217:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET + (1UL << ADC_AWD_CRX_REGOFFSET_B
 218:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 219:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)      /* Position of bits ADC
 220:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                                in ADC_AWD_TRX_REGOF
 221:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 222:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                                threshold high: mask
 223:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 224:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                                threshold high: posi
 225:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 226:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                                position to perform 
 227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS (20UL)
 228:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 230:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* ADC registers bits positions */
 231:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3UL) /* Equivalent to bitfield "ADC_CFGR1_RES" positio
 232:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22UL) /* Equivalent to bitfield "ADC_CFGR1_AWDSGL" posi
 233:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Equivalent to bitfield "ADC_TR1_HT1" position 
 234:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL0" pos
 235:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL1" pos
 236:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL2" pos
 237:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL3" pos
 238:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL4" pos
 239:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL5" pos
 240:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL6" pos
 241:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL7" pos
 242:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL8" pos
 243:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL9" pos
 244:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL10" po
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 9


 245:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL11" po
 246:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL12" po
 247:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL13" po
 248:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL14" po
 249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL15" po
 250:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL16" po
 251:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL17" po
 252:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL18" po
 253:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL19_BITOFFSET_POS   (19UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL19" po
 254:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL20_BITOFFSET_POS   (20UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL20" po
 255:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL21_BITOFFSET_POS   (21UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL21" po
 256:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL22_BITOFFSET_POS   (22UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL22" po
 257:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_SMPR_SMP1_BITOFFSET_POS        ( 0UL) /* Equivalent to bitfield "ADC_SMPR_SMP1" positio
 258:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_SMPR_SMP2_BITOFFSET_POS        ( 4UL) /* Equivalent to bitfield "ADC_SMPR_SMP2" positio
 259:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_SMPR_SMPSEL0_BITOFFSET_POS     ( 8UL) /* Equivalent to bitfield "ADC_SMPR_SMPSEL0" posi
 260:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 261:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 262:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* ADC registers bits groups */
 263:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART \
 264:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CR_ADDIS | ADC_CR_ADEN) /* ADC register CR bits w
 265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            "rs": Software can read as well as set this bit. Writing
 266:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            on the bit value. */
 267:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 268:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 269:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* ADC internal channels related definitions */
 270:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 271:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF756AUL)) /* Internal voltage referen
 272:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            parameter VREFINT_CAL: VrefInt ADC raw data acquired at 
 273:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 274:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 275:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            voltage with which VrefInt has been calibrated in produc
 276:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (tolerance: +-10 mV) (unit: mV). */
 277:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Temperature sensor */
 278:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Note: On all devices of series STM32C0, calibration parameter TS_CAL2 is not available.
 279:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          Therefore, macro "__LL_ADC_CALC_TEMPERATURE()" is not available,
 280:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          macro "__LL_ADC_CALC_TEMPERATURE_TYP_PARAMS()" must be used and parameter TS_CAL1 can impr
 281:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          replace datasheet parameter of temperature offset (macro argument __TEMPSENSOR_TYP_CALX_V_
 282:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          by TEMPSENSOR_CAL1_ADDR
 283:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          (with taking into account conversion from digital value resolution 12 bit, analog voltage 
 284:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          between calibration and application environments) */
 285:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF7568UL)) /* Internal temperature sen
 286:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            parameter TS_CAL1: On STM32C0, temperature sensor ADC ra
 287:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            temperature  30 DegC (tolerance: +-5 DegC), Vref+ = 3.0 
 288:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (tolerance: +-10 mV). */
 289:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30)            /* Internal temperature sen
 290:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            which temperature sensor has been calibrated in producti
 291:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            TEMPSENSOR_CAL1_ADDR (tolerance: +-5 DegC) (unit: DegC).
 292:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          ( 3000UL)                    /* Analog voltage reference
 293:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with which temperature sensor has been calibrated in pro
 294:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (tolerance: +-10 mV) (unit: mV). */
 295:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 296:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 297:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 298:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 299:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 300:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 301:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 10


 302:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 303:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 304:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 305:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 306:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 307:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 308:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a register from a register basis from which an offset
 309:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is applied.
 310:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 311:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 312:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Pointer to register address
 313:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 314:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 315:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 316:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 317:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 318:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 319:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 320:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 321:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 322:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 323:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 324:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 325:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 326:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 327:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 328:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 329:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 330:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and multimode
 331:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 332:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 333:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 334:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         sharing the same ADC common instance):
 335:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 336:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         disabled.
 337:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 338:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** typedef struct
 339:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 340:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 341:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 342:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 343:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_SetCommonClock(). */
 344:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 345:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 346:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 347:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 348:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 349:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 350:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 351:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 352:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 353:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is conditioned to ADC state:
 354:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC instance must be disabled.
 355:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 356:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 357:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 358:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 11


 359:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 360:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 361:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 362:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         refer to description of each function for setting
 363:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         conditioned to ADC state.
 364:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 365:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** typedef struct
 366:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 367:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 368:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 369:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             @note On this STM32 series, this parameter has some clo
 370:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                   ADC clock synchronous (from PCLK) with prescaler 
 371:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                   only if PCLK has a 50% duty clock cycle (APB pres
 372:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                   inside the RCC must be bypassed and the system cl
 373:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                   cycle).
 374:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 375:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_SetClock().
 376:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              For more details, refer to description of this functio
 377:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 378:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 379:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 380:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 381:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_SetResolution(). */
 382:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 383:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 384:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 385:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 386:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_SetDataAlignment(). */
 387:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 388:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 389:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 390:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 391:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_SetLowPowerMode(). */
 392:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 393:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 394:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 395:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 396:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 397:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 398:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 399:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 400:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (functions with prefix "REG").
 401:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 402:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is conditioned to ADC state:
 403:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC instance must be disabled.
 404:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 405:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 406:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 407:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 408:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 409:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 410:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 411:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         refer to description of each function for setting
 412:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         conditioned to ADC state.
 413:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 414:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** typedef struct
 415:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 12


 416:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 417:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              from external peripheral (timer event, external interr
 418:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 419:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 420:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    set trigger polarity to rising edge(default sett
 421:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    with some ADC on other STM32 series having this 
 422:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    default value).
 423:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 424:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    @ref LL_ADC_REG_SetTriggerEdge().
 425:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 426:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetTriggerSource(). */
 427:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 428:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 429:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 430:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                     to mode "fully configurable". Refer to function
 431:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                     @ref LL_ADC_REG_SetSequencerConfigurable().
 432:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 433:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 434:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerLength(). */
 435:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 436:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 437:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 438:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 439:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 440:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    enabled (depending on the sequencer mode: scan l
 441:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    more, or several ADC channels enabled in group r
 442:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    Refer to function @ref LL_ADC_REG_SetSequencerCo
 443:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 444:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerDiscont(). */
 445:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 446:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 447:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              conversions are performed in single mode (one conversi
 448:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              continuous mode (after the first trigger, following co
 449:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              successively automatically).
 450:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 451:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 452:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    and discontinuous mode.
 453:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 454:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetContinuousMode(). */
 455:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 456:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 457:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              by DMA, and DMA requests mode.
 458:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 459:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 460:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetDMATransfer(). */
 461:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 462:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 463:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              data preserved or overwritten.
 464:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 465:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 466:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetOverrun(). */
 467:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 468:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 469:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 470:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 471:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 472:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 13


 473:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 474:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 475:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 476:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 477:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 478:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 479:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 480:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 481:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 482:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 483:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 484:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 485:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_CCRDY                  ADC_ISR_CCRDY      /*!< ADC flag ADC channel configurati
 486:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 487:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            conversion */
 488:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 489:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            conversions */
 490:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 491:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 492:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 493:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 494:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 495:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 496:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 497:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 498:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 499:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 500:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 501:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 502:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 503:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 504:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 505:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_CCRDY                    ADC_IER_CCRDYIE    /*!< ADC interruption channel configu
 506:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 507:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    conversion */
 508:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 509:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    conversions */
 510:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 511:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 512:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    phase */
 513:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 514:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 515:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 516:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 517:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 518:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 519:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 520:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 521:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 522:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 523:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 524:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 525:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* DMA transfer.                                                              */
 526:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 527:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA        (0x00000000UL)      /* ADC group regular conversion data
 528:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (corresponding to register DR) to be used with ADC confi
 529:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            mode. Without DMA transfer, register accessed by LL func
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 14


 530:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadConversionData32() and other
 531:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            functions @ref LL_ADC_REG_ReadConversionDatax() */
 532:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 533:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 534:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 535:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 536:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 537:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 538:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 539:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                      /*!< ADC asynchronou
 540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler */
 541:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                   /*!< ADC asynchronou
 542:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 2. Setting common to ADC instances
 543:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 544:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 545:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1)                   /*!< ADC asynchronou
 546:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 4. Setting common to ADC instances
 547:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each  instance clock
 548:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 549:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 550:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 6. Setting common to ADC instances
 551:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 552:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 553:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2)                   /*!< ADC asynchronou
 554:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 8. Setting common to ADC instances
 555:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 556:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 557:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 558:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 10. Setting common to ADC instance
 559:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 560:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 561:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 562:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 12. Setting common to ADC instance
 563:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 564:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 565:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 \
 566:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 567:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 16. Setting common to ADC instance
 568:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 569:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 570:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                   /*!< ADC asynchronou
 571:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 32. Setting common to ADC instance
 572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 573:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 574:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 575:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 64. Setting common to ADC instance
 576:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 577:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 578:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 579:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 128. Setting common to ADC instanc
 580:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 581:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 582:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 \
 583:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 584:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 256. Setting common to ADC instanc
 585:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 586:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 15


 587:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 588:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 589:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 590:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 591:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 592:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 593:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 594:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 595:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 596:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 597:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 598:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 599:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)     /*!< ADC measurement paths all disabl
 600:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)   /*!< ADC measurement path to internal
 601:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)     /*!< ADC measurement path to internal
 602:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    temperature sensor */
 603:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 604:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 605:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 606:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 607:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 608:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 609:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 610:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1) /*!< ADC synchronous clock derived 
 611:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            divided by 4 */
 612:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0) /*!< ADC synchronous clock derived 
 613:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            divided by 2 */
 614:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 \
 615:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR2_CKMODE_0) /*!< ADC synchronous clock derive
 616:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            not divided */
 617:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000UL)       /*!< ADC asynchronous clock. Asynch
 618:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler can be configured using function @ref LL_ADC_S
 619:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 620:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 621:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 623:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 624:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 625:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 626:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 627:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 628:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 629:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 630:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 631:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 632:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 633:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 634:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 635:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 636:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 637:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)     /*!< ADC conversion data alignment: r
 638:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (alignment on data register LSB bit 0)*/
 639:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)  /*!< ADC conversion data alignment: l
 640:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (alignment on data register MSB bit 15)*/
 641:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 643:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 16


 644:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 645:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 646:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 647:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 648:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)     /*!< No ADC low power mode activated 
 649:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)   /*!< ADC low power mode auto delay: D
 650:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            mode, ADC conversions are performed only when necessary
 651:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (when previous ADC conversion data is read).
 652:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            See description with function @ref LL_ADC_SetLowPowerMod
 653:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF) /*!< ADC low power mode auto power-of
 654:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            automatically powers-off after a ADC conversion and auto
 655:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            when a new ADC conversion is triggered (with startup tim
 656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            and start of sampling). See description with function
 657:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            @ref LL_ADC_SetLowPowerMode(). */
 658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 659:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** and auto power-off combined. See description with function @ref LL_ADC_SetLowPowerMode(). */
 660:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 661:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 662:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 663:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 664:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_FREQ  ADC group regular - Trigger frequency mode
 665:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 666:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 667:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_HIGH           (0x00000000UL)     /*!< ADC trigger frequency mode set t
 668:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            Note: ADC trigger frequency mode must be set to low freq
 669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            is exceeded before ADC conversion start trigger event (b
 670:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            and ADC conversion start trigger event or between two AD
 671:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            trigger event).
 672:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            Duration value: Refer to device datasheet, parameter "tI
 673:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_LOW            (ADC_CFGR2_LFTRIG) /*!< ADC trigger frequency mode set t
 674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            Note: ADC trigger frequency mode must be set to low freq
 675:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            is exceeded before ADC conversion start trigger event (b
 676:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            and ADC conversion start trigger event or between two AD
 677:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            trigger event).
 678:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            Duration value: Refer to device datasheet, parameter "tI
 679:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 680:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 681:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 682:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 683:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_FREQ_MODE  ADC common - Clock frequency mode
 684:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 685:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 686:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_HIGH        LL_ADC_TRIGGER_FREQ_HIGH   /*!< LL ADC define maintained
 687:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_LOW         LL_ADC_TRIGGER_FREQ_LOW    /*!< LL ADC define maintained
 688:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 689:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 690:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 691:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 692:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON  ADC instance - Sampling time common to a group of chan
 693:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 694:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 695:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_1       (ADC_SMPR_SMP1_BITOFFSET_POS) /*!< Set sampling time com
 696:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of channels: sampling time nb 1 */
 697:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_2       (ADC_SMPR_SMP2_BITOFFSET_POS \
 698:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_SAMPLING_TIME_CH_MASK)  /*!< Set sampling time co
 699:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of channels: sampling time nb 2 */
 700:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 17


 701:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 702:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 703:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 704:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 705:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 706:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 707:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 708:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 709:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 710:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 711:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 712:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 713:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 714:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 715:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER \
 716:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_0_BITFIELD ) /*!< ADC channel ADCx_IN0  *
 717:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER \
 718:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_1_BITFIELD ) /*!< ADC channel ADCx_IN1  *
 719:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER \
 720:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_2_BITFIELD ) /*!< ADC channel ADCx_IN2  *
 721:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER \
 722:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_3_BITFIELD ) /*!< ADC channel ADCx_IN3  *
 723:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER \
 724:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_4_BITFIELD ) /*!< ADC channel ADCx_IN4  *
 725:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER \
 726:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_5_BITFIELD ) /*!< ADC channel ADCx_IN5  *
 727:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER \
 728:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_6_BITFIELD ) /*!< ADC channel ADCx_IN6  *
 729:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER \
 730:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_7_BITFIELD ) /*!< ADC channel ADCx_IN7  *
 731:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER \
 732:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_8_BITFIELD ) /*!< ADC channel ADCx_IN8  *
 733:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER \
 734:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_9_BITFIELD ) /*!< ADC channel ADCx_IN9  *
 735:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER \
 736:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_10_BITFIELD) /*!< ADC channel ADCx_IN10 *
 737:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER \
 738:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_11_BITFIELD) /*!< ADC channel ADCx_IN11 *
 739:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER \
 740:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_12_BITFIELD) /*!< ADC channel ADCx_IN12 *
 741:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER \
 742:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_13_BITFIELD) /*!< ADC channel ADCx_IN13 *
 743:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER \
 744:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_14_BITFIELD) /*!< ADC channel ADCx_IN14 *
 745:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER \
 746:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_15_BITFIELD) /*!< ADC channel ADCx_IN15 *
 747:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER \
 748:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_16_BITFIELD) /*!< ADC channel ADCx_IN16 *
 749:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER \
 750:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_17_BITFIELD) /*!< ADC channel ADCx_IN17 *
 751:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER \
 752:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_18_BITFIELD) /*!< ADC channel ADCx_IN18 *
 753:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_19                  (ADC_CHANNEL_19_NUMBER \
 754:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_19_BITFIELD) /*!< ADC channel ADCx_IN19 *
 755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_20                  (ADC_CHANNEL_20_NUMBER \
 756:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_20_BITFIELD) /*!< ADC channel ADCx_IN20 *
 757:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_21                  (ADC_CHANNEL_21_NUMBER \
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 18


 758:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_21_BITFIELD) /*!< ADC channel ADCx_IN21 *
 759:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_22                  (ADC_CHANNEL_22_NUMBER \
 760:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_22_BITFIELD) /*!< ADC channel ADCx_IN22 *
 761:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_10 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 762:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            connected to VrefInt: Internal voltage reference. */
 763:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_9 | ADC_CHANNEL_ID_INTERNAL_CH)   /*!< A
 764:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            connected to Temperature sensor. */
 765:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VDDA                (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 766:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            connected to VDDA. */
 767:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VSSA                (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 768:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            connected to VSSA. */
 769:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 770:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 771:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 772:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 773:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 774:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 775:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 776:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE         (0x00000000UL) /*!< ADC group regular conversion trigger i
 777:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2   (ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*!< ADC group regular con
 778:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          from external peripheral: TIM1 TRGO.
 779:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          Trigger edge set to rising edge (default setting). */
 780:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4     (ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*!< 
 781:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          conversion trigger from external peripheral:
 782:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          TIM1 channel 4 event (capture compare: input capture or ou
 783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          Trigger edge set to rising edge (default setting). */
 784:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #if defined(TIM2)
 785:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO    (ADC_CFGR1_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*!< 
 786:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          conversion trigger from external peripheral: TIM2 TRGO.
 787:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          Trigger edge set to rising edge (default setting). */
 788:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #endif /* TIM2 */
 789:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO    (ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXTSEL_0 \
 790:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                           | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*!< ADC group regular c
 791:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          from external peripheral: TIM3 TRGO.
 792:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          Trigger edge set to rising edge (default setting). */
 793:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11  (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 \
 794:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                           | ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*!
 795:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          conversion trigger from external peripheral: external inte
 796:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          Trigger edge set to rising edge (default setting). */
 797:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 798:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 799:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 800:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 801:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 802:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 803:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 804:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (ADC_CFGR1_EXTEN_0)                     /*!< ADC group r
 805:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            trigger polarity set to rising edge */
 806:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1)                     /*!< ADC group r
 807:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            trigger polarity set to falling edge */
 808:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 809:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
 810:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 811:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 812:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 813:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 814:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 19


 815:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 816:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 817:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)     /*!< ADC conversions performed in sin
 818:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            one conversion per trigger */
 819:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)   /*!< ADC conversions performed in con
 820:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            after the first trigger, following conversions launched 
 821:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            automatically */
 822:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 823:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 824:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 825:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 826:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 827:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 828:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 829:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)     /*!< ADC conversions are not transfer
 830:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (ADC_CFGR1_DMAEN)  /*!< ADC conversion data are transfer
 831:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            in limited mode (one shot mode): DMA transfer requests a
 832:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            number of DMA data transfers (number of ADC conversions)
 833:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode non-c
 834:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN)  /*!< ADC conversio
 835:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            transferred by DMA, in unlimited mode: DMA transfer requ
 836:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            whatever number of DMA data transferred (number of ADC c
 837:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode circu
 838:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 839:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 840:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 841:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 842:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 843:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 844:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 845:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)     /*!< ADC group regular behavior in ca
 846:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    data preserved */
 847:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD) /*!< ADC group regular behavior in ca
 848:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    data overwritten */
 849:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 850:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 851:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 852:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 853:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_MODE  ADC group regular - Sequencer configuration flexibility
 854:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 855:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 856:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_FIXED               (0x00000000UL)        /*!< Sequencer configured to not f
 857:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            sequencer length and each rank affectation to a channel 
 858:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            by channel HW number. Refer to description of function
 859:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            @ref LL_ADC_REG_SetSequencerChannels(). */
 860:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_CONFIGURABLE        (ADC_CFGR1_CHSELRMOD) /*!< Sequencer configured to fully
 861:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            sequencer length and each rank affectation to a channel 
 862:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            Refer to description of function @ref LL_ADC_REG_SetSequ
 863:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 864:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 865:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 866:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 867:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 868:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 869:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 870:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (ADC_CHSELR_SQ2)               /*!< ADC group regular se
 871:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 20


 872:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_CHSELR_SQ3)               /*!< ADC group regular se
 873:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 2 ranks in the sequence */
 874:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_CHSELR_SQ4)               /*!< ADC group regular se
 875:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 3 ranks in the sequence */
 876:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_CHSELR_SQ5)               /*!< ADC group regular se
 877:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 4 ranks in the sequence */
 878:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_CHSELR_SQ6)               /*!< ADC group regular se
 879:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 5 ranks in the sequence */
 880:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_CHSELR_SQ7)               /*!< ADC group regular se
 881:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 6 ranks in the sequence */
 882:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_CHSELR_SQ8)               /*!< ADC group regular se
 883:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 7 ranks in the sequence */
 884:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (0x00000000UL)                 /*!< ADC group regular se
 885:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 8 ranks in the sequence */
 886:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 887:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 888:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 889:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 890:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 891:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 892:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 893:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000UL)      /*!< On this STM32 series, parameter
 894:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            sequencer set to mode not fully configurable, refer to f
 895:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            @ref LL_ADC_REG_SetSequencerConfigurable(). ADC group re
 896:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            direction forward: from lowest channel number to highest
 897:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (scan of all ranks, ADC conversion of ranks with channel
 898:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            sequencer). On some other STM32 series, this setting is 
 899:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            and the default scan direction is forward. */
 900:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR) /*!< On this STM32 series, parameter
 901:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            sequencer set to mode not fully configurable, refer to f
 902:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            @ref LL_ADC_REG_SetSequencerConfigurable(). ADC group re
 903:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            direction backward: from highest channel number to lowes
 904:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (scan of all ranks, ADC conversion of ranks with channel
 905:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            sequencer) */
 906:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 907:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 908:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 909:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 910:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 911:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 912:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 913:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                          /*!< ADC group r
 914:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            discontinuous mode disable */
 915:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                      /*!< ADC group r
 916:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
 917:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 918:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 919:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 920:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 921:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 922:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 923:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 924:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_REG_RANK_1_SQRX_BITOFFSET_POS) /*!< ADC group regul
 925:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_REG_RANK_2_SQRX_BITOFFSET_POS) /*!< ADC group regul
 926:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_REG_RANK_3_SQRX_BITOFFSET_POS) /*!< ADC group regul
 927:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_REG_RANK_4_SQRX_BITOFFSET_POS) /*!< ADC group regul
 928:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_REG_RANK_5_SQRX_BITOFFSET_POS) /*!< ADC group regul
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 21


 929:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_REG_RANK_6_SQRX_BITOFFSET_POS) /*!< ADC group regul
 930:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_REG_RANK_7_SQRX_BITOFFSET_POS) /*!< ADC group regul
 931:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_REG_RANK_8_SQRX_BITOFFSET_POS) /*!< ADC group regul
 932:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 933:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 934:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 935:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 936:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 937:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 938:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 939:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)     /*!< Sampling time 1.5 ADC clock cycl
 940:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP1_0)  /*!< Sampling time 3.5 ADC clock cycl
 941:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP1_1)  /*!< Sampling time 7.5 ADC clock cycl
 942:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP1_1 \
 943:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_0) /*!< Sampling time 12.5 ADC clock cy
 944:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP1_2)  /*!< Sampling time 19.5 ADC clock cyc
 945:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP1_2 \
 946:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_0) /*!< Sampling time 39.5 ADC clock cy
 947:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP1_2 \
 948:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_1) /*!< Sampling time 79.5 ADC clock cy
 949:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP1_2 \
 950:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_1 \
 951:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_0) /*!< Sampling time 160.5 ADC clock c
 952:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 953:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 954:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 955:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 956:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 957:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 958:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 959:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK \
 960:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_AWD_CR1_REGOFFSET) /*!< ADC analog watchdog numbe
 961:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK \
 962:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_AWD_CR2_REGOFFSET) /*!< ADC analog watchdog numbe
 963:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK \
 964:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_AWD_CR3_REGOFFSET) /*!< ADC analog watchdog numbe
 965:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 966:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 967:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 968:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 969:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 970:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 971:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 972:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                           /*!< ADC analog
 973:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            disabled */
 974:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK \
 975:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN)                     /*!< ADC analog
 976:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of all channels, converted by group regular only */
 977:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
 978:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 979:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group regular only
 980:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
 981:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 982:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group regular only
 983:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
 984:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 985:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group regular only
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 22


 986:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
 987:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 988:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group regular only
 989:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
 990:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 991:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group regular only
 992:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
 993:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 994:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group regular only
 995:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
 996:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 997:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group regular only
 998:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
 999:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1000:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group regular only
1001:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1002:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1003:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group regular only
1004:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1005:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1006:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group regular only
1007:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
1008:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1009:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group regular onl
1010:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1011:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1012:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group regular onl
1013:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1015:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group regular onl
1016:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1017:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1018:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group regular onl
1019:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1020:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1021:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group regular onl
1022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1023:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1024:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by group regular onl
1025:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1026:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1027:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group regular onl
1028:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1029:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1030:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group regular onl
1031:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1032:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1033:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group regular onl
1034:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) \
1035:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1036:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN19, converted by group regular onl
1037:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_20_REG          ((LL_ADC_CHANNEL_20 & ADC_CHANNEL_ID_MASK) \
1038:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1039:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN20, converted by group regular onl
1040:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_21_REG          ((LL_ADC_CHANNEL_21 & ADC_CHANNEL_ID_MASK) \
1041:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1042:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN21, converted by group regular onl
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 23


1043:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_22_REG          ((LL_ADC_CHANNEL_22 & ADC_CHANNEL_ID_MASK) \
1044:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1045:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN22, converted by group regular onl
1046:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) \
1047:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1048:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal v
1049:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            converted by group regular only */
1050:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) \
1051:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1052:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC internal channel connected to Temperature sensor,
1053:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            converted by group regular only */
1054:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VSSA_REG             ((LL_ADC_CHANNEL_16         & ADC_CHANNEL_ID_MASK) \
1055:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1056:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC internal channel connected to VSSA : internal ana
1057:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            converted by group regular only */
1058:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VDDA_REG             ((LL_ADC_CHANNEL_15         & ADC_CHANNEL_ID_MASK) \
1059:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1060:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC internal channel connected to VDDA : internal ana
1061:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            converted by group regular only */
1062:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1063:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1064:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1065:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1066:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1067:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1068:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1069:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_AWD1TR_HT1)   /*!< ADC analog watchdog threshold hi
1070:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (ADC_AWD1TR_LT1)   /*!< ADC analog watchdog threshold lo
1071:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_AWD1TR_HT1 \
1072:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_AWD1TR_LT1)  /*!< ADC analog watchdog both thresh
1073:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    concatenated into the same data 
1074:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1075:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1076:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1077:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1078:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1079:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                      /*!< ADC oversamplin
1082:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (ADC_CFGR2_OVSE)                    /*!< ADC oversamplin
1083:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            ADC group regular. Literal suffix "continued" is kept fo
1084:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with other STM32 devices featuring ADC group injected, i
1085:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            oversampling scope parameters are available. */
1086:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1087:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1088:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1089:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1090:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1091:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1092:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1093:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)     /*!< ADC oversampling discontinuous m
1094:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** (all conversions of oversampling ratio are done from 1 trigger) */
1095:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)   /*!< ADC oversampling discontinuous m
1096:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            mode (each conversion of oversampling ratio needs a trig
1097:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1098:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1099:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 24


1100:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1101:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1102:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1103:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1104:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                        /*!< ADC oversampl
1105:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1106:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1107:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (ADC_CFGR2_OVSR_0)                    /*!< ADC oversampl
1108:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1109:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1110:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (ADC_CFGR2_OVSR_1)                    /*!< ADC oversampl
1111:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1112:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1113:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1114:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1115:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1116:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2)                    /*!< ADC oversampl
1117:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1118:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1119:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1120:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1121:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1122:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1) /*!< ADC oversampl
1123:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1124:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1125:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 \
1126:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR2_OVSR_0)                   /*!< ADC oversamp
1127:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1128:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1129:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1130:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1131:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1132:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1133:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data right shift
1134:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1135:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1136:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                        /*!< ADC oversampl
1137:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data is not divided to resul
1138:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            conversion data) */
1139:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (ADC_CFGR2_OVSS_0)                    /*!< ADC oversampl
1140:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1141:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1142:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (ADC_CFGR2_OVSS_1)                    /*!< ADC oversampl
1143:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1144:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1145:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (ADC_CFGR2_OVSS_1 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1146:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1147:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1148:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (ADC_CFGR2_OVSS_2)                    /*!< ADC oversampl
1149:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1150:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1151:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1152:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1153:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1154:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1) /*!< ADC oversampl
1155:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1156:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 25


1157:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 \
1158:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR2_OVSS_0)                   /*!< ADC oversamp
1159:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1160:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1161:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3)                    /*!< ADC oversampl
1162:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1163:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1164:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1165:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1166:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1168:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
1169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1170:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1171:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR      ((int16_t)0x7FFF)  /* Temperature calculation error usin
1172:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                  @ref __LL_ADC_CALC_TEMPERATURE(), 
1173:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                  calibration parameters. This value
1174:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                  (to fit on signed word or double w
1175:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                  to an inconsistent temperature val
1176:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1177:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1178:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1179:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1180:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1181:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1182:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         not timeout values.
1183:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1184:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         above each literal definition.
1185:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1186:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1187:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1188:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1189:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       not timeout values.                                                  */
1190:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1191:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1192:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1193:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1194:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       STM32 series:                                                        */
1195:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 82/fADC.                    */
1196:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1197:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1198:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1199:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1200:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1201:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*         cycles                                                             */
1202:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1203:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*         configuration.                                                     */
1204:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1205:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1206:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1207:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1208:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1209:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Unit: us                                                                   */
1210:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)           /*!< Delay for ADC stabilization time
1211:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                               regulator start-up time) */
1212:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1213:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 26


1214:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1215:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1216:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Unit: us                                                                   */
1217:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)        /*!< Delay for internal voltage refer
1218:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    time */
1219:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1220:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1221:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1222:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1223:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Unit: us                                                                   */
1224:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)        /*!< Delay for temperature sensor sta
1225:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    (starting from temperature senso
1226:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    @ref LL_ADC_SetCommonPathInterna
1227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)        /*!< Delay for temperature sensor buf
1228:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    time (starting from ADC enable, 
1229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    @ref LL_ADC_Enable()) */
1230:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1231:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1232:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1233:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1234:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1235:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1236:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1237:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1238:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  2UL)        /*!< Delay required between ADC end o
1239:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    and ADC enable */
1240:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1241:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1242:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1243:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1244:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1245:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1246:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1247:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1248:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1250:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1251:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1252:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1253:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1254:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1255:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1256:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1257:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1258:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1259:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1260:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Write a value in ADC register
1261:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1262:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __REG__ Register to be written
1263:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1264:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
1265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1266:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1267:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1268:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1269:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Read a value in ADC register
1270:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 27


1271:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __REG__ Register to be read
1272:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Register value
1273:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1274:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1275:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1276:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1277:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1278:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1279:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1280:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1281:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1282:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1283:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1284:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1285:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1286:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Example:
1287:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1288:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           will return decimal number "4".
1289:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1290:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         number is returned, either defined with number
1291:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1292:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1293:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
1294:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
1295:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
1296:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
1297:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
1298:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
1299:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
1300:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
1301:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
1302:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
1303:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
1304:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
1305:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
1306:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
1307:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
1308:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
1309:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
1310:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
1311:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
1312:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
1313:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
1314:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
1315:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
1316:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
1317:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
1318:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
1319:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
1320:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
1321:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
1322:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1323:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1324:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1325:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1326:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1327:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 28


1328:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1329:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1330:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
1331:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                                       
1332:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    (                                                                                               
1333:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
1334:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    )                                                                                               
1335:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    :                                                                                               
1336:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    ((((__CHANNEL__) & ADC_CHANNEL_0_BITFIELD) == ADC_CHANNEL_0_BITFIELD) ? (0UL) :                 
1337:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     ((((__CHANNEL__) & ADC_CHANNEL_1_BITFIELD) == ADC_CHANNEL_1_BITFIELD) ? (1UL) :                
1338:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****      ((((__CHANNEL__) & ADC_CHANNEL_2_BITFIELD) == ADC_CHANNEL_2_BITFIELD) ? (2UL) :               
1339:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       ((((__CHANNEL__) & ADC_CHANNEL_3_BITFIELD) == ADC_CHANNEL_3_BITFIELD) ? (3UL) :              
1340:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****        ((((__CHANNEL__) & ADC_CHANNEL_4_BITFIELD) == ADC_CHANNEL_4_BITFIELD) ? (4UL) :             
1341:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         ((((__CHANNEL__) & ADC_CHANNEL_5_BITFIELD) == ADC_CHANNEL_5_BITFIELD) ? (5UL) :            
1342:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          ((((__CHANNEL__) & ADC_CHANNEL_6_BITFIELD) == ADC_CHANNEL_6_BITFIELD) ? (6UL) :           
1343:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           ((((__CHANNEL__) & ADC_CHANNEL_7_BITFIELD) == ADC_CHANNEL_7_BITFIELD) ? (7UL) :          
1344:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****            ((((__CHANNEL__) & ADC_CHANNEL_8_BITFIELD) == ADC_CHANNEL_8_BITFIELD) ? (8UL) :         
1345:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****             ((((__CHANNEL__) & ADC_CHANNEL_9_BITFIELD) == ADC_CHANNEL_9_BITFIELD) ? (9UL) :        
1346:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ((((__CHANNEL__) & ADC_CHANNEL_10_BITFIELD) == ADC_CHANNEL_10_BITFIELD) ? (10UL) :    
1347:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****               ((((__CHANNEL__) & ADC_CHANNEL_11_BITFIELD) == ADC_CHANNEL_11_BITFIELD) ? (11UL) :   
1348:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                ((((__CHANNEL__) & ADC_CHANNEL_12_BITFIELD) == ADC_CHANNEL_12_BITFIELD) ? (12UL) :  
1349:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                 ((((__CHANNEL__) & ADC_CHANNEL_13_BITFIELD) == ADC_CHANNEL_13_BITFIELD) ? (13UL) : 
1350:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                  ((((__CHANNEL__) & ADC_CHANNEL_14_BITFIELD) == ADC_CHANNEL_14_BITFIELD) ? (14UL) :
1351:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                   ((((__CHANNEL__) & ADC_CHANNEL_15_BITFIELD) == ADC_CHANNEL_15_BITFIELD) ? (15UL) 
1352:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                    ((((__CHANNEL__) & ADC_CHANNEL_16_BITFIELD) == ADC_CHANNEL_16_BITFIELD) ? (16UL)
1353:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                     ((((__CHANNEL__) & ADC_CHANNEL_17_BITFIELD) == ADC_CHANNEL_17_BITFIELD) ? (17UL
1354:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                      ((((__CHANNEL__) & ADC_CHANNEL_18_BITFIELD) == ADC_CHANNEL_18_BITFIELD) ? (18U
1355:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                       ((((__CHANNEL__) & ADC_CHANNEL_19_BITFIELD) == ADC_CHANNEL_19_BITFIELD) ? (19
1356:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                        ((((__CHANNEL__) & ADC_CHANNEL_20_BITFIELD) == ADC_CHANNEL_20_BITFIELD) ? (2
1357:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                         ((((__CHANNEL__) & ADC_CHANNEL_21_BITFIELD) == ADC_CHANNEL_21_BITFIELD) ? (
1358:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                          ((((__CHANNEL__) & ADC_CHANNEL_22_BITFIELD) == ADC_CHANNEL_22_BITFIELD) ? 
1359:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                           (0UL)))))))))))))))))))))))))
1360:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1361:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1362:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1363:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         from number in decimal format.
1364:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Example:
1365:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1366:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1367:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1368:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1369:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
1370:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
1371:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
1372:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
1373:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
1374:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
1375:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
1376:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
1377:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
1378:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
1379:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
1380:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
1381:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
1382:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
1383:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
1384:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 29


1385:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
1386:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
1387:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
1388:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
1389:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
1390:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
1391:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
1392:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
1393:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
1394:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
1395:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
1396:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
1397:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
1398:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1399:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1400:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1401:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1402:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1403:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
1404:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1405:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1406:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1407:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__)))
1408:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1409:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1410:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1411:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1412:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1413:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ADC internal channel:
1414:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1415:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1416:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1417:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1418:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1419:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1420:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1421:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1422:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         returned from ADC registers,
1423:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1424:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1425:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         parameters definitions of driver.
1426:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1427:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
1428:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
1429:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
1430:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
1431:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
1432:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
1433:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
1434:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
1435:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
1436:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
1437:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
1438:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
1439:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
1440:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
1441:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 30


1442:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
1443:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
1444:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
1445:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
1446:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
1447:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
1448:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
1449:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
1450:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
1451:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
1452:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
1453:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
1454:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
1455:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
1456:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1457:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1458:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1459:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1460:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1461:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
1462:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1463:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (channel connected to a GPIO pin).
1464:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1465:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1466:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1467:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1468:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1469:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1470:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1471:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1472:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1473:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1474:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1475:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1476:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1477:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1478:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a value defined from parameter definition of
1479:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1480:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1481:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         from ADC registers.
1482:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1483:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
1484:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
1485:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
1486:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
1487:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
1488:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
1489:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
1490:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
1491:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
1492:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
1493:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
1494:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
1495:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
1496:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
1497:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
1498:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 31


1499:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
1500:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
1501:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
1502:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
1503:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
1504:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
1505:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
1506:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
1507:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
1508:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
1509:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
1510:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
1511:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
1512:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1513:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1514:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1515:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1516:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1517:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
1518:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1519:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1520:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1521:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1522:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1523:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1524:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1525:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1526:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1527:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1528:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1529:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1530:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1531:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1532:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1533:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1534:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1535:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1536:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1537:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1538:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1539:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_20
1540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_21
1541:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_22
1542:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1543:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1544:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1545:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1546:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1547:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1548:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1549:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1550:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1551:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1552:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1553:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1554:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or a value from functions where a channel number is
1555:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         returned from ADC registers,
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 32


1556:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1557:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1558:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         parameters definitions of driver.
1559:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1560:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1561:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT
1562:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR
1563:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA
1564:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA
1565:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1566:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1567:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1568:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1569:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                             \
1570:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                             \
1571:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VDDA)       ||                             \
1572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VSSA))
1573:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1574:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1575:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1576:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1577:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1578:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1579:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example:
1580:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1581:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1582:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1583:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1584:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
1585:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
1586:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
1587:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
1588:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
1589:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
1590:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
1591:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
1592:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
1593:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
1594:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
1595:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
1596:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
1597:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
1598:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
1599:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
1600:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
1601:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
1602:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
1603:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
1604:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
1605:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
1606:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
1607:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
1608:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
1609:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
1610:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
1611:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
1612:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 33


1613:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1614:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1615:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1616:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1617:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1618:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
1619:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1620:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1621:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1623:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1624:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
1625:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
1626:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
1627:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
1628:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
1629:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
1630:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
1631:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
1632:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
1633:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
1634:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1635:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1636:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1637:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1638:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1639:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1640:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
1641:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (1)
1643:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (1)
1644:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_20_REG          (1)
1645:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_21_REG          (1)
1646:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_22_REG          (1)
1647:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1648:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1649:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDA_REG
1650:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VSSA_REG
1651:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter not available on all devices: only on STM32C031xx.
1652:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1653:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1654:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
1655:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1657:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1659:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         different of 12 bits.
1660:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1661:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1662:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1663:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1664:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1665:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *            (< ADCx param >,
1666:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1667:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *            );
1668:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 34


1670:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1671:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1672:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1673:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1675:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1676:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1677:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1678:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1679:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1680:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1681:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1682:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         different of 12 bits.
1683:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1684:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1685:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1686:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1687:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1688:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1689:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *            );
1690:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1691:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1692:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1693:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1694:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1695:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1696:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1697:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1698:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1699:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1700:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1701:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1702:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1703:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1704:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1705:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1706:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1707:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1708:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1709:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1710:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1711:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1712:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1713:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)          
1714:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1715:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    & LL_ADC_AWD_THRESHOLD_LOW)
1716:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1717:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1718:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1719:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1720:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1721:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1722:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1723:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1724:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1725:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval ADC common register instance
1726:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 35


1727:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1728:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (ADC1_COMMON)
1729:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1730:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1731:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1732:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC common instance are disabled.
1733:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1734:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
1735:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1736:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1737:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1738:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1739:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1740:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1741:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1742:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1743:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are disabled.
1744:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1745:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is enabled.
1746:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1747:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1748:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   LL_ADC_IsEnabled(ADC1)
1749:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1750:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1751:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1752:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1753:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1754:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (refer to reference manual).
1756:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1757:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1758:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1759:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1760:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1761:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
1762:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1763:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1764:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))
1765:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1766:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1767:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1768:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a resolution to another resolution.
1769:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
1770:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
1771:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1772:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1773:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1774:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1775:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1776:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1777:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1778:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1779:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1780:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1781:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1782:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 36


1784:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
1785:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
1786:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
1787:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** (((__DATA__)                                                                 \
1788:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))  \
1789:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL))     \
1790:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** )
1791:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1792:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1793:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1794:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1795:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1796:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1797:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1798:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1799:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1800:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                       (unit: digital value).
1801:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1802:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1803:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1804:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1805:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1806:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1807:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1808:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1809:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                       __ADC_DATA__,\
1810:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
1811:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1812:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1813:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** )
1814:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1815:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1816:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1817:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1818:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         reference VrefInt.
1819:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1820:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1821:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1822:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         connected to pin Vref+.
1823:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1824:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1825:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
1826:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1827:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1828:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal voltage reference VrefInt.
1829:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1830:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1831:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1832:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1833:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1834:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1835:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1836:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1837:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1838:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1839:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1840:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 37


1841:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
1842:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1843:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
1844:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
1845:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
1846:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** )
1847:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1848:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1849:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1850:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1851:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1852:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (refer to device datasheet).
1853:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Calculation formula:
1854:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1855:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1856:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1857:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                   (unit: digital value)
1858:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1859:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1860:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1861:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1862:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1863:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                  of the current device has characteristics in line with
1864:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                  datasheet typical values.
1865:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note:  On this STM32 series, calibtation parameter TS_CAL1 can be used
1866:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         to improve calculation accuracy.
1867:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to @ref TEMPSENSOR_CAL1_ADDR.
1868:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1869:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1870:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1871:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1872:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1873:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
1874:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1875:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1876:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1877:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                           (unit: uV/DegCelsius).
1878:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                       On this STM32 series, refer to device datasheet parameter
1879:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1880:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                           (at temperature and Vref+ defined in parameters below) (u
1881:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                       On this STM32 series, refer to datasheet parameter "V30" 
1882:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                       to TS_CAL1).
1883:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1884:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                           (see parameter above) is corresponding (unit: mV)
1885:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) value (unit: mV)
1886:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1887:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1888:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1889:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1890:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1891:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1892:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1893:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1894:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1895:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1896:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1897:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 38


1898:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1899:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1900:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
1901:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1902:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1903:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****               * 1000UL)                                                     \
1904:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     -                                                                       \
1905:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1906:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****               * 1000UL)                                                     \
1907:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    )                                                                        \
1908:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
1909:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
1910:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** )
1911:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1912:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1913:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1914:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1915:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1916:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1917:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1918:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1919:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1920:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1921:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1922:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1923:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1924:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1925:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1926:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1927:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1928:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1929:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1930:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1931:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1932:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1933:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1934:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1935:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1936:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1937:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   These ADC registers are data registers:
1938:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1939:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1940:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1941:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1942:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example:
1943:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1944:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1945:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1946:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1947:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1948:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1949:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1950:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1951:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1952:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1953:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
1954:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 39


1955:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1956:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval ADC register address
1957:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1958:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
1959:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
1960:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
1961:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (void)(Register);
1962:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1963:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Retrieve address of register DR */
1964:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
1965:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
1966:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1967:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1968:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1969:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1970:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1971:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1972:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC instances
1973:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1974:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1975:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1976:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1977:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
1978:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1979:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
1980:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1981:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1982:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1983:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1984:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1985:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1986:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1987:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1988:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1989:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1990:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1991:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1992:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1993:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1994:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1995:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1996:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1997:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1998:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1999:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
2000:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
2001:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
2002:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
2003:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             is set to clock source asynchronous.
2004:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
2005:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2006:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2007:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2008:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2009:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
2010:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2011:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 40


2012:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2013:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
2015:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2016:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2017:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2018:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
2019:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
2020:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
2021:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
2022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
2023:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
2024:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
2025:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
2026:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
2027:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
2028:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
2029:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
2030:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
2031:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
2032:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
2033:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             is set to clock source asynchronous.
2034:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
2035:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2036:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(const ADC_Common_TypeDef *ADCxy_COMMON)
2037:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2038:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
2039:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2040:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2041:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2042:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2043:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2044:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2045:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
2046:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2047:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2048:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2049:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2050:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2051:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2052:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         temperature sensor stabilization time.
2053:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet.
2054:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2055:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
2056:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2057:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2058:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2059:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a sampling time minimum value is required.
2060:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet.
2061:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2062:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2063:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2064:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2065:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2066:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2067:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2068:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 41


2069:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2070:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2071:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2072:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2073:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2074:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2075:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2076:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2077:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2078:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2079:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN, PathInternal);
2081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2082:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2083:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2084:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2085:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2086:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Add paths to the current configuration.
2087:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
2088:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2089:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2090:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2091:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2092:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2093:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         temperature sensor stabilization time.
2094:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet.
2095:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2096:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
2097:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2098:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2099:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2100:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a sampling time minimum value is required.
2101:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet.
2102:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2103:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2104:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2105:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2106:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2107:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2108:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2109:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2110:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2111:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2112:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2113:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2114:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2115:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2116:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2117:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2118:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2119:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2120:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2121:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2122:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2123:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2124:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2125:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 42


2126:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Remove paths to the current configuration.
2127:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
2128:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2129:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2130:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2131:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2132:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2133:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2134:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2135:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2136:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2137:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2138:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2139:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2140:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2141:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2142:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2143:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2144:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2145:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2146:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2147:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2148:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2149:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2150:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2151:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2152:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2153:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2154:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
2155:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2156:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2157:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2158:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2159:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2160:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2161:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2162:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2163:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2164:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2165:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2166:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(const ADC_Common_TypeDef *ADCxy_COMMON)
2168:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN));
2170:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2171:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2172:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2173:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
2174:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2175:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2176:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2177:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
2178:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2179:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2180:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2181:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
2182:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 43


2183:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2184:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2185:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
2186:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2187:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
2188:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2189:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2190:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2191:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2192:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
2193:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
2194:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
2195:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2196:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2197:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2198:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2199:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             cycle).
2200:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Refer to reference manual.
2201:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2202:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2203:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
2204:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2205:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
2206:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2207:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2208:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2209:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
2210:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
2211:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2212:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2213:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2214:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2215:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2216:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2217:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
2218:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
2219:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
2220:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2221:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2222:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2223:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2224:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             cycle).
2225:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Refer to reference manual.
2226:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(const ADC_TypeDef *ADCx)
2228:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
2230:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2231:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2232:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2233:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2234:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2235:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2236:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         without having to perform a new calibration using
2237:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2238:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2239:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 44


2240:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2241:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on going on group regular.
2242:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
2243:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2244:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2245:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2246:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2247:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
2248:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2250:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
2251:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              CalibrationFactor);
2252:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2253:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2254:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2255:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2256:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2257:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2258:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2259:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
2260:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2261:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2262:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2263:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(const ADC_TypeDef *ADCx)
2264:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
2266:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2267:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2268:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2269:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC resolution.
2270:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2271:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2272:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2273:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2274:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2275:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
2276:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2277:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2278:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2279:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2280:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2281:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2282:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2283:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2284:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2285:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2286:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
2287:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2288:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2289:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2290:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC resolution.
2291:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2292:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2293:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
2294:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2295:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2296:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 45


2297:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2298:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2299:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2300:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2301:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(const ADC_TypeDef *ADCx)
2302:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2303:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
2304:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2305:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2306:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2307:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2308:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2309:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2310:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2311:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2312:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2313:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
2314:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2315:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2316:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2317:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2318:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2319:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2320:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2321:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2322:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
2323:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2324:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2325:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2326:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2327:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2328:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2329:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
2330:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2331:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2332:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2333:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2334:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2335:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(const ADC_TypeDef *ADCx)
2336:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2337:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2338:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2339:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2340:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2341:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2342:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2343:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2344:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2345:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           in order to reduce power consumption.
2346:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2347:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2348:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           has been retrieved by user software.
2349:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2350:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           other conversion.
2351:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2352:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2353:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 46


2354:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           applications.
2355:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           How to use this low power mode:
2356:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2357:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2358:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2359:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2360:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2361:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2362:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2363:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2364:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2365:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2366:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC conversion start.
2367:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2368:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2369:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2370:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2371:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2372:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2373:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2374:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2375:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2376:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2377:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2378:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC channel.
2379:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2380:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2381:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2382:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2383:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2384:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2385:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2386:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2387:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2388:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2389:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2390:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2391:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2392:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2393:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2394:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2395:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2396:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2397:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2398:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2399:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2400:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2401:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2402:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           in order to reduce power consumption.
2403:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2404:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2405:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           has been retrieved by user software.
2406:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2407:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           other conversion.
2408:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2409:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2410:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 47


2411:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           applications.
2412:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           How to use this low power mode:
2413:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2414:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2415:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2416:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2417:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2418:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2419:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2420:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2421:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2422:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2423:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC conversion start.
2424:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2425:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2426:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2427:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2428:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2429:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2430:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2431:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2432:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2433:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2434:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2435:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC channel.
2436:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2437:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2438:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2439:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2440:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2441:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2442:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2443:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2444:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2445:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(const ADC_TypeDef *ADCx)
2446:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2447:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2448:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2449:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2450:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2451:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC trigger frequency mode.
2452:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   ADC trigger frequency mode must be set to low frequency when
2453:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a duration is exceeded before ADC conversion start trigger event
2454:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (between ADC enable and ADC conversion start trigger event
2455:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or between two ADC conversion start trigger event).
2456:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Duration value: Refer to device datasheet, parameter "tIdle".
2457:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   When ADC trigger frequency mode is set to low frequency,
2458:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         some rearm cycles are inserted before performing ADC conversion
2459:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         start, inducing a delay of 2 ADC clock cycles.
2460:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Usage of ADC trigger frequency mode with ADC low power mode:
2461:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Low power mode auto wait: Only the first ADC conversion
2462:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           start trigger inserts the rearm delay.
2463:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Low power mode auto power-off: ADC trigger frequency mode
2464:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           is discarded.
2465:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2466:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2467:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 48


2468:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_SetTriggerFrequencyMode
2469:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2470:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  TriggerFrequencyMode This parameter can be one of the following values:
2471:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2472:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2473:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2474:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2475:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetTriggerFrequencyMode(ADC_TypeDef *ADCx, uint32_t TriggerFrequencyMod
2476:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2477:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_LFTRIG, TriggerFrequencyMode);
2478:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2479:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2480:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2481:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC trigger frequency mode.
2482:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_GetTriggerFrequencyMode
2483:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2484:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2485:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2486:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2487:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2488:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetTriggerFrequencyMode(const ADC_TypeDef *ADCx)
2489:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2490:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_LFTRIG));
2491:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2492:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2493:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2494:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2495:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2496:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2497:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Sampling time common to all channels.
2498:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2499:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2500:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         converted:
2501:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2502:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2503:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         setting).
2504:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2505:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TS_temp, ...).
2506:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2507:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
2508:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2509:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2510:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2511:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2512:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2513:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2514:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is required.
2515:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet.
2516:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2517:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2518:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2519:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
2520:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_SetSamplingTimeCommonChannels\n
2521:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_SetSamplingTimeCommonChannels
2522:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2523:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2524:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 49


2525:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2526:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2527:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2528:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2529:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2530:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2531:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2532:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2533:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2534:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2535:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2536:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2537:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTimeY
2538:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                           uint32_t SamplingTime)
2539:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
2541:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
2542:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              SamplingTime << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2543:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2544:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2545:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2546:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2547:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2548:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2549:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Sampling time common to all channels.
2550:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2551:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2552:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2553:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         this STM32 series.
2554:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_GetSamplingTimeCommonChannels\n
2555:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_GetSamplingTimeCommonChannels
2556:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2557:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2558:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2559:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2560:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2561:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2562:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2563:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2564:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2565:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2566:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2567:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2568:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2569:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2570:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(const ADC_TypeDef *ADCx, uint32_t Sam
2571:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->SMPR, ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_S
2573:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2574:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2575:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2576:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2577:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
2578:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2579:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2580:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2581:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 50


2582:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2583:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2584:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2585:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
2586:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2587:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         external interrupt line).
2588:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
2589:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         also set trigger polarity to rising edge
2590:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2591:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
2592:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2593:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
2594:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC trigger frequency mode must be set
2595:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         in function of frequency of ADC group regular conversion trigger.
2596:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of function
2597:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_SetTriggerFrequencyMode().
2598:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2599:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2600:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2601:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2602:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2603:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2604:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2605:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2606:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2607:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2608:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2609:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2610:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO (1)
2611:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2612:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2613:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) ADC external trigger available on STM32C071xx device only.
2614:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2615:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2616:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2617:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2618:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
2619:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2620:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2621:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2623:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2624:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         external interrupt line).
2625:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2626:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal (SW start) or external, without detail
2627:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2628:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (equivalent to
2629:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2630:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2631:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2632:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2633:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2634:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2635:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2636:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2637:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2638:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 51


2639:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2640:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO (1)
2641:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2643:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) ADC external trigger available on STM32C071xx device only.
2644:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2645:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(const ADC_TypeDef *ADCx)
2646:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2647:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2648:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2649:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
2650:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2651:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2
2652:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2653:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
2654:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2655:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((TriggerSource
2656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR1_EXTSEL)
2657:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR1_EXTEN)
2658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          );
2659:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2660:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2661:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2662:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2663:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or external.
2664:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2665:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2666:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2667:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2668:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2670:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2671:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2672:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
2673:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN)) 
2675:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2676:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2677:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2678:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2679:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2680:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2681:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2682:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2683:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
2684:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2685:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2686:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
2687:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2688:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2689:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2690:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2691:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2692:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2693:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2694:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
2695:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 52


2696:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2697:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2698:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2699:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2700:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
2701:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2702:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2703:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2704:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2705:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2706:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2707:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(const ADC_TypeDef *ADCx)
2708:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2709:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2710:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2711:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2712:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2713:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer configuration flexibility.
2714:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2715:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2716:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         available:
2717:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2718:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank
2719:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           affectation to a channel are configurable.
2720:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Refer to description of function
2721:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2722:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2723:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2724:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are fixed by channel HW number.
2725:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Refer to description of function
2726:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2727:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2728:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2729:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2730:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2731:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2732:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2733:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
2734:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2735:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2736:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2737:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2738:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2739:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Configurability This parameter can be one of the following values:
2740:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2741:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2742:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2743:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2744:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerConfigurable(ADC_TypeDef *ADCx, uint32_t Configurabilit
2745:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2746:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD, Configurability);
2747:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2748:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2749:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2750:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer configuration flexibility.
2751:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2752:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 53


2753:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         available:
2754:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank
2756:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           affectation to a channel are configurable.
2757:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Refer to description of function
2758:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2759:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2760:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2761:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are fixed by channel HW number.
2762:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Refer to description of function
2763:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2764:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2765:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2766:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2767:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2768:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2769:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2770:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerConfigurable(const ADC_TypeDef *ADCx)
2771:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2772:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD));
2773:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2774:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2775:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2776:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
2777:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2778:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2779:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2780:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2781:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are configurable.
2782:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This function performs configuration of:
2783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2784:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2785:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2786:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2787:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2788:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2789:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2790:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2791:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are defined by channel number.
2792:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This function performs configuration of:
2793:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2794:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2795:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2796:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2797:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2798:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2799:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             highest channel number).
2800:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2801:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2802:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           To set scan direction differently, refer to function
2803:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerScanDirection().
2804:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2805:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2806:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are available, they can be chosen using
2807:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2808:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2809:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 54


2810:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2811:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2812:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2813:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2814:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2815:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
2816:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2817:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2818:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2819:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2820:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2821:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
2822:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerLength\n
2823:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerLength\n
2824:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerLength\n
2825:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerLength\n
2826:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerLength\n
2827:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerLength\n
2828:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerLength\n
2829:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerLength
2830:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2831:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
2832:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2833:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2834:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2835:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2836:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2837:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2838:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2839:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2840:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2841:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2842:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
2843:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2844:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, SequencerNbRanks);
2845:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2846:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2847:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2848:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
2849:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2850:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2851:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2852:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2853:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are configurable.
2854:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This function retrieves:
2855:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2856:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2857:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2858:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2859:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2860:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2861:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2862:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2863:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are defined by channel number.
2864:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This function retrieves:
2865:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2866:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 55


2867:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2868:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2869:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2870:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2871:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             highest channel number).
2872:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2873:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2874:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *          To set scan direction differently, refer to function
2875:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *          @ref LL_ADC_REG_SetSequencerScanDirection().
2876:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2877:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2878:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are available, they can be chosen using
2879:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2880:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2881:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2882:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerLength\n
2883:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerLength\n
2884:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerLength\n
2885:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerLength\n
2886:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerLength\n
2887:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerLength\n
2888:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerLength\n
2889:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerLength
2890:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2891:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2892:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2893:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2894:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2895:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2896:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2897:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2898:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2899:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2900:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2901:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(const ADC_TypeDef *ADCx)
2902:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2903:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   __IO uint32_t ChannelsRanks = READ_BIT(ADCx->CHSELR, ADC_CHSELR_SQ_ALL);
2904:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t SequencerLength = LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS;
2905:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t RankIndex;
2906:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2907:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parse register for end of sequence identifier */
2908:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   for (RankIndex = 0UL; RankIndex < (32U - 4U); RankIndex += 4U)
2909:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   {
2910:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     if ((ChannelsRanks & (ADC_CHSELR_SQ2 << RankIndex)) == (ADC_CHSELR_SQ2 << RankIndex))
2911:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     {
2912:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       SequencerLength = (ADC_CHSELR_SQ2 << RankIndex);
2913:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       break;
2914:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     }
2915:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
2916:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2917:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return SequencerLength;
2918:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2919:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2920:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2921:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2922:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2923:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         to mode not fully configurable,
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 56


2924:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2925:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On some other STM32 series, this setting is not available and
2926:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         the default scan direction is forward.
2927:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2928:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2929:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2930:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2931:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2932:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2933:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2934:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
2935:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2936:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2937:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2938:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
2939:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2940:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2941:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2942:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2943:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2944:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2945:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
2946:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2947:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2948:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2949:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2950:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2951:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
2952:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2953:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         to mode not fully configurable,
2954:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2955:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2956:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         the default scan direction is forward.
2957:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
2958:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2959:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2960:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2961:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2962:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2963:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(const ADC_TypeDef *ADCx)
2964:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2965:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
2966:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2967:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2968:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2969:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2970:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2971:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         number of ranks.
2972:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
2973:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2974:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2975:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2976:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2977:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2978:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2979:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2980:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 57


2981:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2982:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2983:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2984:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2985:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2986:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
2987:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2988:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2989:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2990:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2991:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2992:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         number of ranks.
2993:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2994:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2995:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2996:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2997:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2998:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2999:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(const ADC_TypeDef *ADCx)
3000:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3001:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
3002:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3003:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3004:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3005:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3006:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         scan sequence rank.
3007:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function performs configuration of:
3008:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3009:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3010:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3011:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3012:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         affectation to a channel are configurable.
3013:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3015:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3016:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3017:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3018:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         enabled separately.
3019:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3020:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3021:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3023:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3024:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3025:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3026:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3027:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
3028:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3029:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3030:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3031:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
3032:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerRanks\n
3033:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerRanks\n
3034:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerRanks\n
3035:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerRanks\n
3036:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerRanks\n
3037:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerRanks\n
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 58


3038:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerRanks\n
3039:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerRanks
3040:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3041:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3042:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3043:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3044:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3045:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3046:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3047:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3048:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3049:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3050:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3051:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3052:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3053:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3054:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3055:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3056:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3057:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3058:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3059:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3060:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3061:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3062:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3063:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3064:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3065:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3066:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3067:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3068:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3069:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3070:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3071:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3072:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3073:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3074:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3075:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3076:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3077:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3078:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3079:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3082:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3083:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3084:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3085:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3086:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3087:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3088:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3089:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3090:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3091:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
3092:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3093:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3094:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CHSELR,
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 59


3095:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3096:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK_SEQ) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
3097:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
3098:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3099:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3100:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3101:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3102:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         scan sequence rank.
3103:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3104:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3105:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         affectation to a channel are configurable.
3106:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3107:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3108:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3109:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3110:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3111:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3112:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3113:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3114:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3115:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3116:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           as parameter for another function.
3117:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3118:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           process the returned value with the helper macro
3119:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3120:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerRanks\n
3121:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerRanks\n
3122:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerRanks\n
3123:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerRanks\n
3124:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerRanks\n
3125:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerRanks\n
3126:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerRanks\n
3127:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerRanks
3128:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3129:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3130:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3131:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3132:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3133:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3134:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3135:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3136:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3137:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3138:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3139:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3140:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3141:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3142:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3143:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3144:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3145:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3146:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3147:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3148:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3149:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3150:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3151:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 60


3152:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3153:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3154:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3155:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3156:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3157:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3158:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3159:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3160:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3161:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3162:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3163:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3164:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3165:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3166:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3168:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3170:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3171:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3172:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3173:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3174:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3175:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
3176:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3177:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->CHSELR,
3178:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                               ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
3179:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
3180:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                     ) << (ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
3181:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                    );
3182:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3183:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3184:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3185:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
3186:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         channel number.
3187:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function performs:
3188:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3189:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3190:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3191:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
3192:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           configuration.
3193:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3194:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3195:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are available, they can be chosen using
3196:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3197:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3198:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3199:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3200:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3201:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3202:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3203:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3204:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3205:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3206:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3207:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
3208:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 61


3209:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3210:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3211:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3212:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         enabled separately.
3213:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3214:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3215:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3216:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3217:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
3218:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
3219:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3220:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
3221:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
3222:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
3223:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
3224:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
3225:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
3226:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
3227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
3228:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
3229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
3230:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
3231:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
3232:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
3233:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
3234:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
3235:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
3236:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
3237:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
3238:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
3239:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3240:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3241:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3242:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3243:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3244:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3245:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3246:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3247:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3248:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3250:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3251:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3252:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3253:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3254:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3255:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3256:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3257:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3258:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3259:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3260:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3261:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3262:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3263:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3264:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 62


3266:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3267:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3268:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3269:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3270:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3271:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3272:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3273:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3274:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3275:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3276:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3277:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3278:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
3279:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3280:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3281:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3282:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3283:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3284:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3285:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3286:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
3287:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         channel number.
3288:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function performs:
3289:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3290:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3291:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3292:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
3293:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           configuration.
3294:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3295:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3296:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are available, they can be chosen using
3297:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3298:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3299:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3300:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3301:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3302:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3303:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3304:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3305:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3306:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3307:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3308:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
3309:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3310:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3311:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3312:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3313:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         enabled separately.
3314:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3315:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3316:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3317:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3318:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
3319:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
3320:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3321:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
3322:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 63


3323:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
3324:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
3325:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
3326:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
3327:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
3328:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
3329:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
3330:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
3331:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
3332:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
3333:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
3334:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
3335:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
3336:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
3337:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
3338:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
3339:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
3340:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3341:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3342:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3343:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3344:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3345:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3346:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3347:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3348:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3349:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3350:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3351:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3352:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3353:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3354:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3355:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3356:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3357:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3358:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3359:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3360:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3361:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3362:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3363:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3364:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3365:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3366:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3367:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3368:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3369:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3370:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3371:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3372:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3373:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3374:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3375:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3376:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3377:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3378:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3379:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 64


3380:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3381:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3382:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3383:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3384:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3385:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3386:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3387:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
3388:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         channel number.
3389:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function performs:
3390:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3391:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3392:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3393:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
3394:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           configuration.
3395:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3396:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3397:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are available, they can be chosen using
3398:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3399:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3400:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3401:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3402:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3403:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3404:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3405:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3406:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3407:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3408:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3409:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
3410:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3411:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3412:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3413:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3414:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         enabled separately.
3415:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3416:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3417:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3418:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3419:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
3420:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
3421:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3422:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
3423:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
3424:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
3425:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
3426:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
3427:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
3428:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
3429:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
3430:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
3431:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
3432:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
3433:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
3434:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
3435:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
3436:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 65


3437:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
3438:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
3439:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
3440:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
3441:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3442:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3443:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3444:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3445:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3446:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3447:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3448:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3449:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3450:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3451:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3452:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3453:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3454:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3455:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3456:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3457:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3458:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3459:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3460:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3461:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3462:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3463:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3464:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3465:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3466:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3467:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3468:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3469:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3470:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3471:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3472:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3473:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3474:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3475:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3476:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3477:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3478:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3479:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3480:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
3481:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3482:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3483:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3484:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3485:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3486:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3487:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3488:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
3489:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         channel number.
3490:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function performs:
3491:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
3492:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3493:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 66


3494:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3495:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3496:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are available, they can be chosen using
3497:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3498:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3499:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3500:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3501:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3502:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3503:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3504:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3505:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         enabled separately.
3506:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3507:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3508:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3509:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3510:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
3511:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be retrieved.
3512:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3513:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
3514:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
3515:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
3516:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
3517:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
3518:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
3519:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
3520:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
3521:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
3522:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
3523:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
3524:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
3525:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
3526:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
3527:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
3528:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
3529:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
3530:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
3531:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
3532:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3533:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3534:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3535:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3536:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3537:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3538:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3539:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3541:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3542:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3543:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3544:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3545:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3546:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3547:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3548:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3549:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3550:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 67


3551:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3552:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3553:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3554:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3555:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3556:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3557:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3558:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3559:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3560:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3561:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3562:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3563:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3564:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3565:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3566:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3567:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3568:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3569:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3570:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(const ADC_TypeDef *ADCx)
3571:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t ChannelsBitfield = (uint32_t)READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
3573:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3574:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((((ChannelsBitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_CHA
3575:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_C
3576:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_C
3577:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_C
3578:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_C
3579:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_C
3580:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_C
3581:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_C
3582:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_C
3583:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_C
3584:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_ADC
3585:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_ADC
3586:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_ADC
3587:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_ADC
3588:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_ADC
3589:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_ADC
3590:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_ADC
3591:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_ADC
3592:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_ADC
3593:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL19) >> ADC_CHSELR_CHSEL19_BITOFFSET_POS) * LL_ADC
3594:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL20) >> ADC_CHSELR_CHSEL20_BITOFFSET_POS) * LL_ADC
3595:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL21) >> ADC_CHSELR_CHSEL21_BITOFFSET_POS) * LL_ADC
3596:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL22) >> ADC_CHSELR_CHSEL22_BITOFFSET_POS) * LL_ADC
3597:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          );
3598:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3599:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3600:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3601:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3602:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3603:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3604:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3605:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           conversions launched successively automatically.
3606:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3607:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 68


3608:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3609:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3610:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
3611:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
3612:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3613:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3614:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3615:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3616:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3617:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3618:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3619:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3620:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
3621:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3623:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3624:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3625:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3626:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3627:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3628:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           conversions launched successively automatically.
3629:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
3630:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3631:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3632:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3633:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3634:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3635:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(const ADC_TypeDef *ADCx)
3636:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3637:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
3638:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3639:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3640:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3641:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3643:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3644:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         mode:
3645:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3646:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3647:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC conversions) is reached.
3648:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3649:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3650:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3651:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC conversions).
3652:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3653:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3654:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         mode non-circular:
3655:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3657:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3659:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3660:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3661:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3662:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
3663:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
3664:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 69


3665:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3666:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3667:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3668:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3670:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3671:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3672:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3673:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
3675:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3676:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3677:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3678:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3679:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3680:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3681:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         mode:
3682:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3683:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3684:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC conversions) is reached.
3685:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3686:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3687:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3688:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC conversions).
3689:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3690:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3691:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         mode non-circular:
3692:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3693:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3694:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3695:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3696:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3697:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
3698:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
3699:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3700:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3701:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3702:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3703:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3704:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3705:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(const ADC_TypeDef *ADCx)
3706:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3707:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
3708:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3709:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3710:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3711:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3712:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         data preserved or overwritten.
3713:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3714:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         other devices without this feature have a behavior
3715:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         equivalent to data overwritten.
3716:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3717:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3718:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         overrun should be set to data overwritten.
3719:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3720:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3721:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 70


3722:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
3723:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3724:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3725:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3726:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3727:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3728:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3729:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3730:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3731:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
3732:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3733:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3734:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3735:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3736:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         data preserved or overwritten.
3737:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
3738:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3739:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3740:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3741:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3742:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3743:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(const ADC_TypeDef *ADCx)
3744:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3745:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
3746:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3747:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3748:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3749:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
3750:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3751:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3752:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
3753:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
3754:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3756:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3757:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
3758:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Unit: ADC clock cycles.
3759:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3760:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3761:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
3762:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         converted:
3763:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
3764:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
3765:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         setting).
3766:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
3767:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TS_temp, ...).
3768:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3769:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3770:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         this STM32 series.
3771:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
3772:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
3773:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is required.
3774:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet.
3775:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3776:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3777:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3778:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 71


3779:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_SetChannelSamplingTime\n
3780:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_SetChannelSamplingTime\n
3781:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_SetChannelSamplingTime\n
3782:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_SetChannelSamplingTime\n
3783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_SetChannelSamplingTime\n
3784:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_SetChannelSamplingTime\n
3785:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_SetChannelSamplingTime\n
3786:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_SetChannelSamplingTime\n
3787:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_SetChannelSamplingTime\n
3788:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_SetChannelSamplingTime\n
3789:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_SetChannelSamplingTime\n
3790:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_SetChannelSamplingTime\n
3791:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_SetChannelSamplingTime\n
3792:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_SetChannelSamplingTime\n
3793:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_SetChannelSamplingTime\n
3794:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_SetChannelSamplingTime\n
3795:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_SetChannelSamplingTime\n
3796:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_SetChannelSamplingTime\n
3797:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_SetChannelSamplingTime
3798:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3799:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3800:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3801:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3802:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3803:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3804:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3805:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3806:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3807:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3808:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3809:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3810:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3811:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3812:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3813:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3814:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3815:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3816:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3817:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3818:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3819:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3820:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3821:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3822:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3823:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3824:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3825:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3826:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3827:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3828:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3829:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3830:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3831:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3832:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3833:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3834:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3835:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 72


3836:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3837:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3838:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3839:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3840:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
3841:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3842:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3843:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3844:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
3845:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
3846:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
3847:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****             );
3848:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3849:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3850:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3851:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
3852:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Unit: ADC clock cycles.
3853:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3854:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3855:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3856:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3857:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         this STM32 series.
3858:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_GetChannelSamplingTime\n
3859:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_GetChannelSamplingTime\n
3860:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_GetChannelSamplingTime\n
3861:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_GetChannelSamplingTime\n
3862:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_GetChannelSamplingTime\n
3863:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_GetChannelSamplingTime\n
3864:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_GetChannelSamplingTime\n
3865:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_GetChannelSamplingTime\n
3866:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_GetChannelSamplingTime\n
3867:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_GetChannelSamplingTime\n
3868:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_GetChannelSamplingTime\n
3869:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_GetChannelSamplingTime\n
3870:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_GetChannelSamplingTime\n
3871:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_GetChannelSamplingTime\n
3872:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_GetChannelSamplingTime\n
3873:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_GetChannelSamplingTime\n
3874:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_GetChannelSamplingTime\n
3875:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_GetChannelSamplingTime\n
3876:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_GetChannelSamplingTime
3877:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3878:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3879:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3880:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3881:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3882:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3883:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3884:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3885:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3886:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3887:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3888:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3889:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3890:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3891:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3892:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 73


3893:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3894:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3895:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3896:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3897:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3898:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3899:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3900:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3901:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3902:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3903:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3904:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3905:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3906:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3907:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3908:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3909:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3910:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3911:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3912:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3913:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3914:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3915:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3916:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3917:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3918:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(const ADC_TypeDef *ADCx, uint32_t Channel)
3919:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3920:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
3921:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3922:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
3923:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* and shift it to position 0.                                                 */
3924:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
3925:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                   >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NU
3926:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                        + ADC_SMPR_SMPSEL0_BITOFFSET_POS)
3927:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                       & 0x1FUL));
3928:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3929:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
3930:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
3931:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2));
3932:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3933:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3934:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3935:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
3936:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3937:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3938:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
3939:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
3940:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3941:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3942:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3943:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
3944:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a single channel or all channels,
3945:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on ADC group regular.
3946:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
3947:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is enabled.
3948:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
3949:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 74


3950:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
3951:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 1 kind of analog watchdog
3952:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         instance:
3953:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3954:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3955:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3956:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3957:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
3958:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3959:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3960:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
3961:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
3962:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
3963:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
3964:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
3965:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
3966:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3967:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3968:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3969:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3970:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3971:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
3972:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3973:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3974:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3975:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3976:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3977:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
3978:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3979:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3980:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
3981:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
3982:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
3983:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
3984:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3985:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3986:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3987:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3988:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3989:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3990:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3991:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3992:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (1)
3993:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (1)
3994:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_20_REG          (1)
3995:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_21_REG          (1)
3996:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_22_REG          (1)
3997:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
3998:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
3999:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDA_REG
4000:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VSSA_REG
4001:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter not available on all devices: only on STM32C031xx.
4002:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4003:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4004:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
4005:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4006:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 75


4007:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
4008:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
4009:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4010:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   register __IO uint32_t *preg;
4011:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4012:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   if (AWDy == LL_ADC_AWD1)
4013:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   {
4014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1, 0UL);
4015:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
4016:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   else
4017:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   {
4018:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->AWD2CR,
4019:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
4020:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
4021:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(*preg,
4023:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
4024:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              AWDChannelGroup & AWDy);
4025:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4026:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4027:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4028:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
4029:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4030:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4031:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4032:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4033:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4034:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4035:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4036:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           as parameter for another function.
4037:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4038:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           process the returned value with the helper macro
4039:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4040:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
4041:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           one channel.
4042:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 1 kind of analog watchdog
4043:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         instance:
4044:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4045:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4046:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
4047:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4048:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
4049:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4050:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4051:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4052:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4053:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             be selected. For example:
4054:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4055:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4056:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             groups regular and injected).
4057:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4058:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4059:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4060:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4061:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
4062:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4063:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 76


4064:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4065:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
4066:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
4067:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
4068:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
4069:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
4070:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
4071:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4072:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4073:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4074:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
4075:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
4076:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
4077:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
4078:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
4079:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
4080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
4081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             by bitfield.
4082:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4083:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
4084:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
4085:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
4086:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
4087:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
4088:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
4089:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
4090:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
4091:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
4092:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
4093:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
4094:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
4095:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
4096:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
4097:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
4098:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
4099:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
4100:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
4101:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
4102:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
4103:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (1)
4104:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (1)
4105:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_20_REG          (1)
4106:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_21_REG          (1)
4107:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_22_REG          (1)
4108:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
4109:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
4110:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDA_REG
4111:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VSSA_REG
4112:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter not available on all devices: only on STM32C031xx.
4113:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */__STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(const ADC_TypeDef *ADCx, uint32_t AWDy
4114:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4115:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1,
4116:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                       ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_A
4117:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
4118:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                          * ADC_AWD_CR12_REGOFFSETGAP_VAL));
4119:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4120:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   register uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 77


4121:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4122:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
4123:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
4124:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
4125:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* or a single channel.                                                     */
4126:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
4127:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   {
4128:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
4129:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     {
4130:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR1_AWD1SGL) == 0UL)
4131:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       {
4132:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4133:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
4134:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
4135:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                  )
4136:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                  & (~(ADC_CFGR1_AWD1CH))
4137:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                 );
4138:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       }
4139:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       else
4140:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       {
4141:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         /* AWD monitoring a single channel */
4142:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
4143:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR1_AWD1
4144:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                 );
4145:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       }
4146:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     }
4147:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     else
4148:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     {
4149:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
4150:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       {
4151:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4152:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
4153:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                  | (ADC_CFGR1_AWD1EN)
4154:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                 );
4155:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       }
4156:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       else
4157:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       {
4158:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         /* AWD monitoring a single channel */
4159:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4160:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
4161:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                  | (ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
4162:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
4163:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                 );
4164:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       }
4165:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     }
4166:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
4167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4168:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return AnalogWDMonitChannels;
4169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4170:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4171:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
4172:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         high and low.
4173:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
4174:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
4175:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4176:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4177:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 78


4178:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 2 kind of analog watchdog
4179:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         instance:
4180:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4181:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4182:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
4183:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4184:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
4185:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4186:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4187:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4188:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4189:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             be selected. For example:
4190:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4191:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4192:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             groups regular and injected).
4193:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4194:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4195:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4196:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4197:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
4198:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
4199:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
4200:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
4201:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
4202:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Examples:
4203:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4204:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
4205:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
4206:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4207:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
4208:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
4209:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4210:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
4211:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
4212:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4213:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4214:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4215:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
4216:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_ConfigAnalogWDThresholds\n
4217:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_ConfigAnalogWDThresholds\n
4218:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_ConfigAnalogWDThresholds\n
4219:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_ConfigAnalogWDThresholds\n
4220:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_ConfigAnalogWDThresholds\n
4221:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_ConfigAnalogWDThresholds
4222:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4223:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4224:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4225:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4226:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
4228:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
4229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4230:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4231:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
4232:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
4233:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4234:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 79


4235:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
4236:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* "AWDy".                                                                  */
4237:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
4238:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4239:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4240:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4241:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                               >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4242:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4243:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                 >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL))
4244:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             );
4245:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4246:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(*preg,
4247:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
4248:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
4249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4250:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4251:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
4252:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         high or low.
4253:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
4254:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
4255:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4256:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4257:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
4258:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 2 kinds of analog watchdog
4259:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         instance:
4260:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4261:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4262:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
4263:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4264:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
4265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4266:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4267:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4268:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4269:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             be selected. For example:
4270:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4271:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4272:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             groups regular and injected).
4273:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4274:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4275:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4276:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4277:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
4278:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
4279:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
4280:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
4281:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
4282:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Examples:
4283:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4284:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
4285:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
4286:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4287:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
4288:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
4289:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4290:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
4291:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 80


4292:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
4293:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4294:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
4295:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on ADC group regular.
4296:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_SetAnalogWDThresholds\n
4297:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_SetAnalogWDThresholds\n
4298:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_SetAnalogWDThresholds\n
4299:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_SetAnalogWDThresholds\n
4300:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_SetAnalogWDThresholds\n
4301:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_SetAnalogWDThresholds
4302:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4303:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4304:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4305:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4306:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4307:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
4308:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
4309:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
4310:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
4311:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4312:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4313:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
4314:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
4315:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4316:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
4317:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
4318:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
4319:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
4320:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4321:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4322:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4323:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                               >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4324:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4325:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                 >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL)));
4326:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4327:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(*preg,
4328:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              AWDThresholdsHighLow,
4329:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
4330:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4331:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4332:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4333:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
4334:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
4335:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         concatenated.
4336:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
4337:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
4338:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using helper macro:
4339:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
4340:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4341:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4342:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
4343:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_GetAnalogWDThresholds\n
4344:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_GetAnalogWDThresholds\n
4345:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_GetAnalogWDThresholds\n
4346:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_GetAnalogWDThresholds\n
4347:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_GetAnalogWDThresholds\n
4348:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_GetAnalogWDThresholds
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 81


4349:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4350:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4351:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4352:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4353:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4354:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
4355:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
4356:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
4357:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
4358:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4359:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4360:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(const ADC_TypeDef *ADCx, uint32_t AWDy, uint3
4361:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4362:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
4363:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
4364:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
4365:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
4366:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4367:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4368:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4369:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                     >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4370:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4371:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                       >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL
4372:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4373:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
4374:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_AWD1TR_LT1))
4375:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
4376:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                         (AWDThresholdsHighLow & ADC_AWD1TR_LT1))
4377:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                    );
4378:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4379:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4380:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4381:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
4382:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4383:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4384:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
4385:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
4386:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4387:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4388:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4389:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
4390:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4391:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4392:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
4393:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
4394:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4395:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
4396:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4397:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4398:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4399:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4400:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
4401:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4402:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
4403:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4404:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4405:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 82


4406:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
4407:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
4408:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4409:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4410:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4411:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4412:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4413:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(const ADC_TypeDef *ADCx)
4414:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4415:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
4416:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4417:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4418:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4419:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
4420:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on the selected ADC group.
4421:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4422:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4423:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are done from 1 trigger)
4424:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4425:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           needs a trigger)
4426:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4427:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4428:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
4429:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
4430:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4431:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
4432:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4433:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4434:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4435:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4436:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
4437:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4438:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
4439:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4440:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4441:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4442:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
4443:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on the selected ADC group.
4444:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4445:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4446:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are done from 1 trigger)
4447:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4448:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           needs a trigger)
4449:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
4450:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4451:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4452:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4453:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4454:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4455:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(const ADC_TypeDef *ADCx)
4456:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4457:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
4458:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4459:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4460:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4461:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC oversampling
4462:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 83


4463:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ratio
4464:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - shift
4465:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4466:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4467:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
4468:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
4469:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
4470:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4471:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
4472:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4473:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4474:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4475:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4476:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4477:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4478:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4479:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4480:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
4481:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4482:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4483:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4484:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4485:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4486:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4487:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4488:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4489:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4490:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4491:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4492:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
4493:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4494:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
4495:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4496:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4497:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4498:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
4499:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
4500:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4501:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
4502:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4503:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4504:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4505:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4506:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4507:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4508:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4509:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4510:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4511:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(const ADC_TypeDef *ADCx)
4512:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4513:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
4514:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4515:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4516:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4517:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
4518:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
4519:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 84


4520:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
4521:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4522:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4523:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4524:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4525:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4526:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4527:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4528:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4529:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4530:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4531:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(const ADC_TypeDef *ADCx)
4532:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4533:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
4534:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4535:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4536:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4537:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
4538:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4539:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
4541:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
4542:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4543:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4544:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4545:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
4546:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, there are three possibilities to enable
4547:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         the voltage regulator:
4548:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - by enabling it manually
4549:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
4550:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - by launching a calibration
4551:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
4552:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - by enabling the ADC
4553:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
4554:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
4555:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
4556:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
4557:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet, parameter "tADCVREG_STUP".
4558:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
4559:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4560:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4561:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4562:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
4563:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4564:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4565:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4566:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
4567:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4568:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4569:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4570:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4571:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4573:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_ADVREGEN);
4574:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4575:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4576:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 85


4577:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
4578:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4579:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4580:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4581:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
4582:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4583:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4584:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4585:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
4586:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4587:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
4588:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4589:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4590:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4591:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
4592:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
4593:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4594:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
4595:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4596:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(const ADC_TypeDef *ADCx)
4597:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4598:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
4599:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4600:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4601:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4602:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
4603:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
4604:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
4605:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC conversion start.
4606:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
4607:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4608:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4609:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4610:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4611:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4612:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
4613:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
4614:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4615:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4616:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4617:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
4618:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4619:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4620:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4621:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4623:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4624:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_ADEN);
4625:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4626:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4627:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4628:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
4629:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4630:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4631:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
4632:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
4633:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 86


4634:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4635:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4636:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4637:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
4638:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4639:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4640:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4641:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4643:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4644:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_ADDIS);
4645:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4646:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4647:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4648:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
4649:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4650:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4651:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4652:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
4653:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4654:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
4655:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(const ADC_TypeDef *ADCx)
  86              		.loc 2 4656 26 is_stmt 1 discriminator 2 view .LVU21
  87              	.LBB33:
4657:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
  88              		.loc 2 4658 3 discriminator 2 view .LVU22
  89              		.loc 2 4658 12 is_stmt 0 discriminator 2 view .LVU23
  90 0022 9A68     		ldr	r2, [r3, #8]
  91 0024 3100     		movs	r1, r6
  92 0026 1140     		ands	r1, r2
  93              		.loc 2 4658 68 discriminator 2 view .LVU24
  94 0028 1642     		tst	r6, r2
  95 002a 09D0     		beq	.L3
  96              	.LVL5:
  97              		.loc 2 4658 68 discriminator 2 view .LVU25
  98              	.LBE33:
  99              	.LBE32:
 129:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   {
 130:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Set ADC state */
 131:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 132:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 133:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 134:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 135:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Manage settings impacting calibration                                  */
 136:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* - Disable ADC mode auto power-off                                      */
 137:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* - Disable ADC DMA transfer request during calibration                  */
 138:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Note: Specificity of this STM32 series: Calibration factor is          */
 139:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /*       available in data register and also transferred by DMA.          */
 140:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /*       To not insert ADC calibration factor among ADC conversion data   */
 141:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /*       in array variable, DMA transfer must be disabled during          */
 142:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /*       calibration.                                                     */
 143:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     backup_setting_cfgr1 = READ_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC
 144:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC_CFGR1_AUTOFF);
 145:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 146:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* ADC calibration procedure */
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 87


 147:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Note: Perform an averaging of 8 calibrations for optimized accuracy */
 148:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     for (calibration_index = 0UL; calibration_index < 8UL; calibration_index++)
 149:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 150:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       /* Start ADC calibration */
 151:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       LL_ADC_StartCalibration(hadc->Instance);
 152:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 153:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       /* Wait for calibration completion */
 154:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       while (LL_ADC_IsCalibrationOnGoing(hadc->Instance) != 0UL)
 155:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       {
 156:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         wait_loop_index++;
 157:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 158:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         {
 159:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
 160:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
 161:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****                             HAL_ADC_STATE_BUSY_INTERNAL,
 162:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****                             HAL_ADC_STATE_ERROR_INTERNAL);
 163:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 164:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 165:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 166:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****           return HAL_ERROR;
 167:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         }
 168:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       }
 169:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 170:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       calibration_factor_accumulated += LL_ADC_GetCalibrationFactor(hadc->Instance);
 171:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     }
 172:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Compute average */
 173:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     calibration_factor_accumulated /= calibration_index;
 174:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Apply calibration factor (requires ADC enable and disable process) */
 175:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     LL_ADC_Enable(hadc->Instance);
 176:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 177:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Case of ADC clocked at low frequency: Delay required between ADC enable and disable actions 
 178:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     if (LL_ADC_GetClock(hadc->Instance) == LL_ADC_CLOCK_ASYNC)
 179:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 180:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       adc_clk_async_presc = LL_ADC_GetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 181:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 182:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       if (adc_clk_async_presc >= LL_ADC_CLOCK_ASYNC_DIV16)
 183:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       {
 184:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         /* Delay loop initialization and execution */
 185:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         /* Delay depends on ADC clock prescaler: Compute ADC clock asynchronous prescaler to decima
 186:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         delay_cpu_cycles = (1UL << ((adc_clk_async_presc >> ADC_CCR_PRESC_Pos) - 3UL));
 187:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         /* Divide variable by 2 to compensate partially CPU processing cycles */
 188:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         delay_cpu_cycles >>= 1UL;
 189:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 190:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         while (delay_cpu_cycles != 0UL)
 191:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         {
 192:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****           delay_cpu_cycles--;
 193:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         }
 194:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       }
 195:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     }
 196:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 197:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     LL_ADC_SetCalibrationFactor(hadc->Instance, calibration_factor_accumulated);
 198:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     LL_ADC_Disable(hadc->Instance);
 199:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 200:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Wait for ADC effectively disabled before changing configuration */
 201:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Get tick count */
 202:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 203:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 88


 204:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     while (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 205:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 206:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
 207:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       {
 208:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
 209:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 210:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         {
 211:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
 212:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 213:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 214:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****           /* Set ADC error code to ADC peripheral internal error */
 215:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 216:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 217:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****           return HAL_ERROR;
 218:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         }
 219:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       }
 220:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     }
 221:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 222:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Restore configuration after calibration */
 223:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CFGR1, backup_setting_cfgr1);
 224:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 225:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Set ADC state */
 226:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 227:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 228:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 229:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   }
 230:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   else
 231:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   {
 232:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 100              		.loc 1 232 5 is_stmt 1 view .LVU26
 101 002c A36D     		ldr	r3, [r4, #88]
 102 002e 1022     		movs	r2, #16
 103 0030 1343     		orrs	r3, r2
 104 0032 A365     		str	r3, [r4, #88]
 105              	.LVL6:
 106              	.L4:
 233:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 234:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Note: No need to update variable "tmp_hal_status" here: already set    */
 235:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /*       to state "HAL_ERROR" by function disabling the ADC.              */
 236:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   }
 237:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 238:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Process unlocked */
 239:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 107              		.loc 1 239 3 view .LVU27
 108              		.loc 1 239 3 view .LVU28
 109 0034 5423     		movs	r3, #84
 110 0036 0022     		movs	r2, #0
 111 0038 E254     		strb	r2, [r4, r3]
 112              		.loc 1 239 3 view .LVU29
 240:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 241:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Return function status */
 242:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   return tmp_hal_status;
 113              		.loc 1 242 3 view .LVU30
 114              	.LVL7:
 115              	.L2:
 243:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** }
 116              		.loc 1 243 1 is_stmt 0 view .LVU31
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 89


 117 003a 2800     		movs	r0, r5
 118 003c 03B0     		add	sp, sp, #12
 119              		@ sp needed
 120              	.LVL8:
 121              		.loc 1 243 1 view .LVU32
 122 003e F0BD     		pop	{r4, r5, r6, r7, pc}
 123              	.LVL9:
 124              	.L3:
 131:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 125              		.loc 1 131 5 is_stmt 1 view .LVU33
 126 0040 A26D     		ldr	r2, [r4, #88]
 127 0042 4748     		ldr	r0, .L19
 128              	.LVL10:
 131:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 129              		.loc 1 131 5 is_stmt 0 view .LVU34
 130 0044 0240     		ands	r2, r0
 131 0046 0630     		adds	r0, r0, #6
 132 0048 FF30     		adds	r0, r0, #255
 133 004a 0243     		orrs	r2, r0
 134 004c A265     		str	r2, [r4, #88]
 143:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC_CFGR1_AUTOFF);
 135              		.loc 1 143 5 is_stmt 1 view .LVU35
 143:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC_CFGR1_AUTOFF);
 136              		.loc 1 143 28 is_stmt 0 view .LVU36
 137 004e DE68     		ldr	r6, [r3, #12]
 143:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC_CFGR1_AUTOFF);
 138              		.loc 1 143 26 view .LVU37
 139 0050 444A     		ldr	r2, .L19+4
 140 0052 1640     		ands	r6, r2
 141              	.LVL11:
 144:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 142              		.loc 1 144 5 is_stmt 1 view .LVU38
 143 0054 DA68     		ldr	r2, [r3, #12]
 144 0056 4448     		ldr	r0, .L19+8
 145 0058 0240     		ands	r2, r0
 146 005a DA60     		str	r2, [r3, #12]
 148:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 147              		.loc 1 148 5 view .LVU39
 148              	.LVL12:
 111:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   uint32_t tickstart;
 149              		.loc 1 111 12 is_stmt 0 view .LVU40
 150 005c 0800     		movs	r0, r1
 148:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 151              		.loc 1 148 5 view .LVU41
 152 005e 05E0     		b	.L5
 153              	.LVL13:
 154              	.L18:
 170:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     }
 155              		.loc 1 170 7 is_stmt 1 view .LVU42
 156              	.LBB34:
 157              	.LBI34:
2263:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 158              		.loc 2 2263 26 view .LVU43
 159              	.LBB35:
2265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 160              		.loc 2 2265 3 view .LVU44
2265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 90


 161              		.loc 2 2265 21 is_stmt 0 view .LVU45
 162 0060 B422     		movs	r2, #180
 163 0062 9A58     		ldr	r2, [r3, r2]
2265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 164              		.loc 2 2265 10 view .LVU46
 165 0064 7F23     		movs	r3, #127
 166              	.LVL14:
2265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 167              		.loc 2 2265 10 view .LVU47
 168 0066 1340     		ands	r3, r2
 169              	.LVL15:
2265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 170              		.loc 2 2265 10 view .LVU48
 171              	.LBE35:
 172              	.LBE34:
 170:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     }
 173              		.loc 1 170 38 view .LVU49
 174 0068 C018     		adds	r0, r0, r3
 175              	.LVL16:
 148:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 176              		.loc 1 148 60 is_stmt 1 view .LVU50
 148:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 177              		.loc 1 148 77 is_stmt 0 view .LVU51
 178 006a 0131     		adds	r1, r1, #1
 179              	.LVL17:
 180              	.L5:
 148:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 181              		.loc 1 148 35 is_stmt 1 discriminator 1 view .LVU52
 148:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 182              		.loc 1 148 5 is_stmt 0 discriminator 1 view .LVU53
 183 006c 0729     		cmp	r1, #7
 184 006e 1ED8     		bhi	.L17
 151:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 185              		.loc 1 151 7 is_stmt 1 view .LVU54
 186 0070 2768     		ldr	r7, [r4]
 187              	.LVL18:
 188              	.LBB36:
 189              	.LBI36:
4659:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4660:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4661:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4662:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
4663:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
4664:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4665:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
4666:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4667:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(const ADC_TypeDef *ADCx)
4668:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
4670:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4671:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4672:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4673:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
4674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
4675:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
4676:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
4677:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 91


4678:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
4679:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         On this STM32 series, ADC DMA transfer request should be disabled
4680:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         during calibration:
4681:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Calibration factor is available in data register
4682:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and also transferred by DMA.
4683:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
4684:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
4685:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         calibration.
4686:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
4687:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
4688:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
4689:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
4690:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of usage of feature auto power-off:
4691:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This mode must be disabled during calibration
4692:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetLowPowerMode().
4693:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4694:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4695:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4696:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
4697:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4698:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4699:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4700:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
 190              		.loc 2 4700 22 view .LVU55
 191              	.LBB37:
4701:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4702:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4703:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4704:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4705:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 192              		.loc 2 4705 3 view .LVU56
 193 0072 BB68     		ldr	r3, [r7, #8]
 194 0074 3D4A     		ldr	r2, .L19+12
 195 0076 1A40     		ands	r2, r3
 196 0078 8023     		movs	r3, #128
 197 007a 1B06     		lsls	r3, r3, #24
 198 007c 1343     		orrs	r3, r2
 199 007e BB60     		str	r3, [r7, #8]
 200              	.LVL19:
 201              	.L6:
 202              		.loc 2 4705 3 is_stmt 0 view .LVU57
 203              	.LBE37:
 204              	.LBE36:
 154:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       {
 205              		.loc 1 154 13 is_stmt 1 view .LVU58
 154:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       {
 206              		.loc 1 154 46 is_stmt 0 view .LVU59
 207 0080 2368     		ldr	r3, [r4]
 208              	.LVL20:
 209              	.LBB38:
 210              	.LBI38:
4706:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4707:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_ADCAL);
4708:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4709:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4710:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4711:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC calibration state.
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 92


4712:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
4713:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4714:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
4715:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4716:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(const ADC_TypeDef *ADCx)
 211              		.loc 2 4716 26 is_stmt 1 view .LVU60
 212              	.LBB39:
4717:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4718:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
 213              		.loc 2 4718 3 view .LVU61
 214              		.loc 2 4718 12 is_stmt 0 view .LVU62
 215 0082 9A68     		ldr	r2, [r3, #8]
 216              		.loc 2 4718 70 view .LVU63
 217 0084 002A     		cmp	r2, #0
 218 0086 EBDA     		bge	.L18
 219              	.LVL21:
 220              		.loc 2 4718 70 view .LVU64
 221              	.LBE39:
 222              	.LBE38:
 156:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 223              		.loc 1 156 9 is_stmt 1 view .LVU65
 156:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 224              		.loc 1 156 24 is_stmt 0 view .LVU66
 225 0088 019B     		ldr	r3, [sp, #4]
 226 008a 0133     		adds	r3, r3, #1
 227 008c 0193     		str	r3, [sp, #4]
 157:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         {
 228              		.loc 1 157 9 is_stmt 1 view .LVU67
 157:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         {
 229              		.loc 1 157 29 is_stmt 0 view .LVU68
 230 008e 019A     		ldr	r2, [sp, #4]
 157:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         {
 231              		.loc 1 157 12 view .LVU69
 232 0090 AE23     		movs	r3, #174
 233 0092 9B02     		lsls	r3, r3, #10
 234 0094 9A42     		cmp	r2, r3
 235 0096 F3D3     		bcc	.L6
 160:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****                             HAL_ADC_STATE_BUSY_INTERNAL,
 236              		.loc 1 160 11 is_stmt 1 view .LVU70
 237 0098 A36D     		ldr	r3, [r4, #88]
 238 009a 1222     		movs	r2, #18
 239 009c 9343     		bics	r3, r2
 240 009e 023A     		subs	r2, r2, #2
 241 00a0 1343     		orrs	r3, r2
 242 00a2 A365     		str	r3, [r4, #88]
 164:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 243              		.loc 1 164 11 view .LVU71
 164:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 244              		.loc 1 164 11 view .LVU72
 245 00a4 5423     		movs	r3, #84
 246 00a6 0022     		movs	r2, #0
 247 00a8 E254     		strb	r2, [r4, r3]
 164:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 248              		.loc 1 164 11 view .LVU73
 166:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         }
 249              		.loc 1 166 11 view .LVU74
 166:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         }
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 93


 250              		.loc 1 166 18 is_stmt 0 view .LVU75
 251 00aa 0125     		movs	r5, #1
 252              	.LVL22:
 166:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         }
 253              		.loc 1 166 18 view .LVU76
 254 00ac C5E7     		b	.L2
 255              	.LVL23:
 256              	.L17:
 173:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Apply calibration factor (requires ADC enable and disable process) */
 257              		.loc 1 173 5 is_stmt 1 view .LVU77
 173:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Apply calibration factor (requires ADC enable and disable process) */
 258              		.loc 1 173 36 is_stmt 0 view .LVU78
 259 00ae FFF7FEFF 		bl	__aeabi_uidiv
 260              	.LVL24:
 175:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 261              		.loc 1 175 5 is_stmt 1 view .LVU79
 262 00b2 2268     		ldr	r2, [r4]
 263              	.LVL25:
 264              	.LBB40:
 265              	.LBI40:
4617:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 266              		.loc 2 4617 22 view .LVU80
 267              	.LBB41:
4622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 268              		.loc 2 4622 3 view .LVU81
 269 00b4 9368     		ldr	r3, [r2, #8]
 270 00b6 2D49     		ldr	r1, .L19+12
 271 00b8 0B40     		ands	r3, r1
 272 00ba 0121     		movs	r1, #1
 273 00bc 0B43     		orrs	r3, r1
 274 00be 9360     		str	r3, [r2, #8]
 275              	.LVL26:
4622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 276              		.loc 2 4622 3 is_stmt 0 view .LVU82
 277              	.LBE41:
 278              	.LBE40:
 178:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 279              		.loc 1 178 5 is_stmt 1 view .LVU83
 178:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 280              		.loc 1 178 29 is_stmt 0 view .LVU84
 281 00c0 2268     		ldr	r2, [r4]
 282              	.LVL27:
 283              	.LBB42:
 284              	.LBI42:
2227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 285              		.loc 2 2227 26 is_stmt 1 view .LVU85
 286              	.LBB43:
2229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 287              		.loc 2 2229 3 view .LVU86
2229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 288              		.loc 2 2229 21 is_stmt 0 view .LVU87
 289 00c2 1369     		ldr	r3, [r2, #16]
2229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 290              		.loc 2 2229 10 view .LVU88
 291 00c4 9B0F     		lsrs	r3, r3, #30
 292              	.LVL28:
2229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 94


 293              		.loc 2 2229 10 view .LVU89
 294              	.LBE43:
 295              	.LBE42:
 178:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 296              		.loc 1 178 8 view .LVU90
 297 00c6 17D1     		bne	.L10
 180:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 298              		.loc 1 180 7 is_stmt 1 view .LVU91
 299              	.LVL29:
 300              	.LBB44:
 301              	.LBI44:
2036:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 302              		.loc 2 2036 26 view .LVU92
 303              	.LBB45:
2038:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 304              		.loc 2 2038 3 view .LVU93
2038:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 305              		.loc 2 2038 21 is_stmt 0 view .LVU94
 306 00c8 294B     		ldr	r3, .L19+16
 307 00ca 1B68     		ldr	r3, [r3]
2038:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 308              		.loc 2 2038 10 view .LVU95
 309 00cc F021     		movs	r1, #240
 310 00ce 8903     		lsls	r1, r1, #14
 311 00d0 0B40     		ands	r3, r1
 312              	.LVL30:
2038:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 313              		.loc 2 2038 10 view .LVU96
 314              	.LBE45:
 315              	.LBE44:
 182:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       {
 316              		.loc 1 182 7 is_stmt 1 view .LVU97
 182:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       {
 317              		.loc 1 182 10 is_stmt 0 view .LVU98
 318 00d2 E021     		movs	r1, #224
 319 00d4 4903     		lsls	r1, r1, #13
 320 00d6 8B42     		cmp	r3, r1
 321 00d8 0ED3     		bcc	.L10
 186:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         /* Divide variable by 2 to compensate partially CPU processing cycles */
 322              		.loc 1 186 9 is_stmt 1 view .LVU99
 186:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         /* Divide variable by 2 to compensate partially CPU processing cycles */
 323              		.loc 1 186 58 is_stmt 0 view .LVU100
 324 00da 9B0C     		lsrs	r3, r3, #18
 325              	.LVL31:
 186:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         /* Divide variable by 2 to compensate partially CPU processing cycles */
 326              		.loc 1 186 80 view .LVU101
 327 00dc 033B     		subs	r3, r3, #3
 186:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         /* Divide variable by 2 to compensate partially CPU processing cycles */
 328              		.loc 1 186 33 view .LVU102
 329 00de 0121     		movs	r1, #1
 330 00e0 9940     		lsls	r1, r1, r3
 186:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         /* Divide variable by 2 to compensate partially CPU processing cycles */
 331              		.loc 1 186 26 view .LVU103
 332 00e2 0091     		str	r1, [sp]
 188:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 333              		.loc 1 188 9 is_stmt 1 view .LVU104
 188:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 95


 334              		.loc 1 188 26 is_stmt 0 view .LVU105
 335 00e4 009B     		ldr	r3, [sp]
 336 00e6 5B08     		lsrs	r3, r3, #1
 337 00e8 0093     		str	r3, [sp]
 190:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         {
 338              		.loc 1 190 9 is_stmt 1 view .LVU106
 190:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         {
 339              		.loc 1 190 15 is_stmt 0 view .LVU107
 340 00ea 02E0     		b	.L11
 341              	.L12:
 192:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         }
 342              		.loc 1 192 11 is_stmt 1 view .LVU108
 192:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         }
 343              		.loc 1 192 27 is_stmt 0 view .LVU109
 344 00ec 009B     		ldr	r3, [sp]
 345 00ee 013B     		subs	r3, r3, #1
 346 00f0 0093     		str	r3, [sp]
 347              	.L11:
 190:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         {
 348              		.loc 1 190 15 is_stmt 1 view .LVU110
 190:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         {
 349              		.loc 1 190 33 is_stmt 0 view .LVU111
 350 00f2 009B     		ldr	r3, [sp]
 190:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         {
 351              		.loc 1 190 15 view .LVU112
 352 00f4 002B     		cmp	r3, #0
 353 00f6 F9D1     		bne	.L12
 354              	.L10:
 197:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     LL_ADC_Disable(hadc->Instance);
 355              		.loc 1 197 5 is_stmt 1 view .LVU113
 356              	.LVL32:
 357              	.LBB46:
 358              	.LBI46:
2247:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 359              		.loc 2 2247 22 view .LVU114
 360              	.LBB47:
2249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
 361              		.loc 2 2249 3 view .LVU115
 362 00f8 B421     		movs	r1, #180
 363 00fa 5358     		ldr	r3, [r2, r1]
 364 00fc 7F27     		movs	r7, #127
 365 00fe BB43     		bics	r3, r7
 366 0100 1843     		orrs	r0, r3
 367              	.LVL33:
2249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
 368              		.loc 2 2249 3 is_stmt 0 view .LVU116
 369 0102 5050     		str	r0, [r2, r1]
 370              	.LVL34:
2249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
 371              		.loc 2 2249 3 view .LVU117
 372              	.LBE47:
 373              	.LBE46:
 198:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 374              		.loc 1 198 5 is_stmt 1 view .LVU118
 375 0104 2268     		ldr	r2, [r4]
 376              	.LVL35:
 377              	.LBB48:
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 96


 378              	.LBI48:
4637:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 379              		.loc 2 4637 22 view .LVU119
 380              	.LBB49:
4642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 381              		.loc 2 4642 3 view .LVU120
 382 0106 9368     		ldr	r3, [r2, #8]
 383 0108 1849     		ldr	r1, .L19+12
 384 010a 0B40     		ands	r3, r1
 385 010c 0221     		movs	r1, #2
 386 010e 0B43     		orrs	r3, r1
 387 0110 9360     		str	r3, [r2, #8]
 388              	.LVL36:
4642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 389              		.loc 2 4642 3 is_stmt 0 view .LVU121
 390              	.LBE49:
 391              	.LBE48:
 202:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 392              		.loc 1 202 5 is_stmt 1 view .LVU122
 202:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 393              		.loc 1 202 17 is_stmt 0 view .LVU123
 394 0112 FFF7FEFF 		bl	HAL_GetTick
 395              	.LVL37:
 396 0116 0700     		movs	r7, r0
 397              	.LVL38:
 204:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 398              		.loc 1 204 5 is_stmt 1 view .LVU124
 399              	.L13:
 204:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 400              		.loc 1 204 11 view .LVU125
 204:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     {
 401              		.loc 1 204 33 is_stmt 0 view .LVU126
 402 0118 2368     		ldr	r3, [r4]
 403              	.LVL39:
 404              	.LBB50:
 405              	.LBI50:
4656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 406              		.loc 2 4656 26 is_stmt 1 view .LVU127
 407              	.LBB51:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 408              		.loc 2 4658 3 view .LVU128
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 409              		.loc 2 4658 12 is_stmt 0 view .LVU129
 410 011a 9A68     		ldr	r2, [r3, #8]
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 411              		.loc 2 4658 68 view .LVU130
 412 011c D207     		lsls	r2, r2, #31
 413 011e 09D4     		bmi	.L14
 414              	.LVL40:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 415              		.loc 2 4658 68 view .LVU131
 416              	.LBE51:
 417              	.LBE50:
 223:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 418              		.loc 1 223 5 is_stmt 1 view .LVU132
 419 0120 DA68     		ldr	r2, [r3, #12]
 420 0122 1643     		orrs	r6, r2
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 97


 421              	.LVL41:
 223:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 422              		.loc 1 223 5 is_stmt 0 view .LVU133
 423 0124 DE60     		str	r6, [r3, #12]
 226:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 424              		.loc 1 226 5 is_stmt 1 view .LVU134
 425 0126 A36D     		ldr	r3, [r4, #88]
 426 0128 0322     		movs	r2, #3
 427 012a 9343     		bics	r3, r2
 428 012c 023A     		subs	r2, r2, #2
 429 012e 1343     		orrs	r3, r2
 430 0130 A365     		str	r3, [r4, #88]
 431 0132 7FE7     		b	.L4
 432              	.LVL42:
 433              	.L14:
 206:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       {
 434              		.loc 1 206 7 view .LVU135
 206:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       {
 435              		.loc 1 206 12 is_stmt 0 view .LVU136
 436 0134 FFF7FEFF 		bl	HAL_GetTick
 437              	.LVL43:
 206:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       {
 438              		.loc 1 206 26 view .LVU137
 439 0138 C01B     		subs	r0, r0, r7
 206:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       {
 440              		.loc 1 206 10 view .LVU138
 441 013a 0228     		cmp	r0, #2
 442 013c ECD9     		bls	.L13
 209:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         {
 443              		.loc 1 209 9 is_stmt 1 view .LVU139
 209:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         {
 444              		.loc 1 209 34 is_stmt 0 view .LVU140
 445 013e 2368     		ldr	r3, [r4]
 446              	.LVL44:
 447              	.LBB52:
 448              	.LBI52:
4656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 449              		.loc 2 4656 26 is_stmt 1 view .LVU141
 450              	.LBB53:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 451              		.loc 2 4658 3 view .LVU142
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 452              		.loc 2 4658 12 is_stmt 0 view .LVU143
 453 0140 9B68     		ldr	r3, [r3, #8]
 454              	.LVL45:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 455              		.loc 2 4658 68 view .LVU144
 456 0142 DB07     		lsls	r3, r3, #31
 457 0144 E8D5     		bpl	.L13
 458              	.LVL46:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 459              		.loc 2 4658 68 view .LVU145
 460              	.LBE53:
 461              	.LBE52:
 212:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 462              		.loc 1 212 11 is_stmt 1 view .LVU146
 463 0146 A36D     		ldr	r3, [r4, #88]
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 98


 464 0148 1022     		movs	r2, #16
 465 014a 1343     		orrs	r3, r2
 466 014c A365     		str	r3, [r4, #88]
 215:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 467              		.loc 1 215 11 view .LVU147
 468 014e E36D     		ldr	r3, [r4, #92]
 469 0150 0F3A     		subs	r2, r2, #15
 470 0152 1343     		orrs	r3, r2
 471 0154 E365     		str	r3, [r4, #92]
 217:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         }
 472              		.loc 1 217 11 view .LVU148
 217:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         }
 473              		.loc 1 217 18 is_stmt 0 view .LVU149
 474 0156 0125     		movs	r5, #1
 475              	.LVL47:
 217:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****         }
 476              		.loc 1 217 18 view .LVU150
 477 0158 6FE7     		b	.L2
 478              	.LVL48:
 479              	.L16:
 120:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 480              		.loc 1 120 3 view .LVU151
 481 015a 0225     		movs	r5, #2
 482 015c 6DE7     		b	.L2
 483              	.L20:
 484 015e C046     		.align	2
 485              	.L19:
 486 0160 FDFEFFFF 		.word	-259
 487 0164 03800000 		.word	32771
 488 0168 FC7FFFFF 		.word	-32772
 489 016c E8FFFF7F 		.word	2147483624
 490 0170 08270140 		.word	1073817352
 491              		.cfi_endproc
 492              	.LFE342:
 494              		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 495              		.align	1
 496              		.global	HAL_ADCEx_Calibration_GetValue
 497              		.syntax unified
 498              		.code	16
 499              		.thumb_func
 501              	HAL_ADCEx_Calibration_GetValue:
 502              	.LVL49:
 503              	.LFB343:
 244:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 245:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /**
 246:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @brief  Get the calibration factor.
 247:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 248:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @retval Calibration value.
 249:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
 250:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(const ADC_HandleTypeDef *hadc)
 251:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** {
 504              		.loc 1 251 1 is_stmt 1 view -0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 252:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Check the parameters */
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 99


 253:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 509              		.loc 1 253 3 view .LVU153
 254:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 255:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */
 256:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   return ((hadc->Instance->CALFACT) & 0x0000007FU);
 510              		.loc 1 256 3 view .LVU154
 511              		.loc 1 256 16 is_stmt 0 view .LVU155
 512 0000 0268     		ldr	r2, [r0]
 513              		.loc 1 256 26 view .LVU156
 514 0002 B423     		movs	r3, #180
 515 0004 D358     		ldr	r3, [r2, r3]
 516              		.loc 1 256 37 view .LVU157
 517 0006 7F20     		movs	r0, #127
 518              	.LVL50:
 519              		.loc 1 256 37 view .LVU158
 520 0008 1840     		ands	r0, r3
 257:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** }
 521              		.loc 1 257 1 view .LVU159
 522              		@ sp needed
 523 000a 7047     		bx	lr
 524              		.cfi_endproc
 525              	.LFE343:
 527              		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 528              		.align	1
 529              		.global	HAL_ADCEx_Calibration_SetValue
 530              		.syntax unified
 531              		.code	16
 532              		.thumb_func
 534              	HAL_ADCEx_Calibration_SetValue:
 535              	.LVL51:
 536              	.LFB344:
 258:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 259:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /**
 260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result.
 261:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *         ADC must be enabled and no conversion is ongoing.
 262:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @param hadc ADC handle
 263:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @param CalibrationFactor Calibration factor (coded on 7 bits maximum)
 264:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @retval HAL state
 265:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
 266:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t CalibrationFacto
 267:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** {
 537              		.loc 1 267 1 is_stmt 1 view -0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		.loc 1 267 1 is_stmt 0 view .LVU161
 542 0000 30B5     		push	{r4, r5, lr}
 543              	.LCFI2:
 544              		.cfi_def_cfa_offset 12
 545              		.cfi_offset 4, -12
 546              		.cfi_offset 5, -8
 547              		.cfi_offset 14, -4
 548 0002 0300     		movs	r3, r0
 268:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 549              		.loc 1 268 3 is_stmt 1 view .LVU162
 550              	.LVL52:
 269:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 100


 551              		.loc 1 269 3 view .LVU163
 270:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 271:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Check the parameters */
 272:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 552              		.loc 1 272 3 view .LVU164
 273:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor));
 553              		.loc 1 273 3 view .LVU165
 274:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 275:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Process locked */
 276:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 554              		.loc 1 276 3 view .LVU166
 555              		.loc 1 276 3 view .LVU167
 556 0004 5422     		movs	r2, #84
 557 0006 825C     		ldrb	r2, [r0, r2]
 558 0008 012A     		cmp	r2, #1
 559 000a 27D0     		beq	.L27
 560              		.loc 1 276 3 discriminator 2 view .LVU168
 561 000c 5422     		movs	r2, #84
 562 000e 0120     		movs	r0, #1
 563              	.LVL53:
 564              		.loc 1 276 3 is_stmt 0 discriminator 2 view .LVU169
 565 0010 9854     		strb	r0, [r3, r2]
 566              		.loc 1 276 3 is_stmt 1 discriminator 2 view .LVU170
 277:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 278:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
 279:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
 280:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 567              		.loc 1 280 3 discriminator 2 view .LVU171
 568              		.loc 1 280 79 is_stmt 0 discriminator 2 view .LVU172
 569 0012 1A68     		ldr	r2, [r3]
 570              	.LVL54:
 571              	.LBB54:
 572              	.LBI54:
4719:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4720:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4721:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4722:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
4723:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4724:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4725:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
4726:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
4727:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4728:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4729:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4730:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
4731:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
4732:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
4733:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
4734:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           starts immediately.
4735:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
4736:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
4737:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           following the ADC start conversion command.
4738:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4739:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4740:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
4741:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
4742:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         without ADC disable command on going.
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 101


4743:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
4744:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4745:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4746:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4747:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
4748:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4749:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4750:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4751:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4752:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4753:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4754:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_ADSTART);
4755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4756:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4757:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4758:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
4759:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4760:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4761:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
4762:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         without ADC disable command on going.
4763:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
4764:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4765:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4766:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4767:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
4768:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4769:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4770:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4771:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4772:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4773:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4774:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_ADSTP);
4775:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4776:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4777:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4778:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
4779:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
4780:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4781:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
4782:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(const ADC_TypeDef *ADCx)
 573              		.loc 2 4783 26 is_stmt 1 discriminator 2 view .LVU173
 574              	.LBB55:
4784:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4785:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 575              		.loc 2 4785 3 discriminator 2 view .LVU174
 576              		.loc 2 4785 12 is_stmt 0 discriminator 2 view .LVU175
 577 0014 9068     		ldr	r0, [r2, #8]
 578 0016 0424     		movs	r4, #4
 579 0018 2500     		movs	r5, r4
 580 001a 0540     		ands	r5, r0
 581              		.loc 2 4785 74 discriminator 2 view .LVU176
 582 001c 0442     		tst	r4, r0
 583 001e 00D0     		beq	.L24
 584              		.loc 2 4785 74 view .LVU177
 585 0020 0125     		movs	r5, #1
 586              	.L24:
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 102


 587              	.LVL55:
 588              		.loc 2 4785 74 view .LVU178
 589              	.LBE55:
 590              	.LBE54:
 281:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 282:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 591              		.loc 1 282 3 is_stmt 1 view .LVU179
 592              	.LBB56:
 593              	.LBI56:
4656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 594              		.loc 2 4656 26 view .LVU180
 595              	.LBB57:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 596              		.loc 2 4658 3 view .LVU181
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 597              		.loc 2 4658 12 is_stmt 0 view .LVU182
 598 0022 9068     		ldr	r0, [r2, #8]
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 599              		.loc 2 4658 68 view .LVU183
 600 0024 C007     		lsls	r0, r0, #31
 601 0026 0CD5     		bpl	.L25
 602              	.LVL56:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 603              		.loc 2 4658 68 view .LVU184
 604              	.LBE57:
 605              	.LBE56:
 283:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 606              		.loc 1 283 7 view .LVU185
 607 0028 002D     		cmp	r5, #0
 608 002a 0AD1     		bne	.L25
 284:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****      )
 285:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   {
 286:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     hadc->Instance->CALFACT &= ~ADC_CALFACT_CALFACT;
 609              		.loc 1 286 5 is_stmt 1 view .LVU186
 610              		.loc 1 286 29 is_stmt 0 view .LVU187
 611 002c B420     		movs	r0, #180
 612 002e 1458     		ldr	r4, [r2, r0]
 613 0030 7F35     		adds	r5, r5, #127
 614              	.LVL57:
 615              		.loc 1 286 29 view .LVU188
 616 0032 AC43     		bics	r4, r5
 617 0034 1450     		str	r4, [r2, r0]
 287:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     hadc->Instance->CALFACT |= CalibrationFactor;
 618              		.loc 1 287 5 is_stmt 1 view .LVU189
 619              		.loc 1 287 9 is_stmt 0 view .LVU190
 620 0036 1C68     		ldr	r4, [r3]
 621              		.loc 1 287 29 view .LVU191
 622 0038 2258     		ldr	r2, [r4, r0]
 623 003a 1143     		orrs	r1, r2
 624              	.LVL58:
 625              		.loc 1 287 29 view .LVU192
 626 003c 2150     		str	r1, [r4, r0]
 268:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 627              		.loc 1 268 21 view .LVU193
 628 003e 0020     		movs	r0, #0
 629              		.loc 1 287 29 view .LVU194
 630 0040 08E0     		b	.L26
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 103


 631              	.LVL59:
 632              	.L25:
 288:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   }
 289:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   else
 290:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   {
 291:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Update ADC state machine */
 292:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 633              		.loc 1 292 5 is_stmt 1 view .LVU195
 634 0042 9A6D     		ldr	r2, [r3, #88]
 635 0044 2021     		movs	r1, #32
 636              	.LVL60:
 637              		.loc 1 292 5 is_stmt 0 view .LVU196
 638 0046 0A43     		orrs	r2, r1
 639 0048 9A65     		str	r2, [r3, #88]
 293:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Update ADC error code */
 294:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 640              		.loc 1 294 5 is_stmt 1 view .LVU197
 641 004a DA6D     		ldr	r2, [r3, #92]
 642 004c 1F39     		subs	r1, r1, #31
 643 004e 0A43     		orrs	r2, r1
 644 0050 DA65     		str	r2, [r3, #92]
 295:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 296:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 297:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 645              		.loc 1 297 5 view .LVU198
 646              	.LVL61:
 647              		.loc 1 297 20 is_stmt 0 view .LVU199
 648 0052 0120     		movs	r0, #1
 649              	.LVL62:
 650              	.L26:
 298:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   }
 299:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 300:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Process unlocked */
 301:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 651              		.loc 1 301 3 is_stmt 1 view .LVU200
 652              		.loc 1 301 3 view .LVU201
 653 0054 5422     		movs	r2, #84
 654 0056 0021     		movs	r1, #0
 655 0058 9954     		strb	r1, [r3, r2]
 656              		.loc 1 301 3 view .LVU202
 302:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 303:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Return function status */
 304:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   return tmp_hal_status;
 657              		.loc 1 304 3 view .LVU203
 658              	.LVL63:
 659              	.L23:
 305:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** }
 660              		.loc 1 305 1 is_stmt 0 view .LVU204
 661              		@ sp needed
 662 005a 30BD     		pop	{r4, r5, pc}
 663              	.LVL64:
 664              	.L27:
 276:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 665              		.loc 1 276 3 view .LVU205
 666 005c 0220     		movs	r0, #2
 667              	.LVL65:
 276:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 104


 668              		.loc 1 276 3 view .LVU206
 669 005e FCE7     		b	.L23
 670              		.cfi_endproc
 671              	.LFE344:
 673              		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 674              		.align	1
 675              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 676              		.syntax unified
 677              		.code	16
 678              		.thumb_func
 680              	HAL_ADCEx_LevelOutOfWindow2Callback:
 681              	.LVL66:
 682              	.LFB345:
 306:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 307:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /**
 308:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non-blocking mode.
 309:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @param hadc ADC handle
 310:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @retval None
 311:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
 312:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef *hadc)
 313:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** {
 683              		.loc 1 313 1 is_stmt 1 view -0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 314:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 315:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   UNUSED(hadc);
 688              		.loc 1 315 3 view .LVU208
 316:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 317:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 318:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow2Callback must be implemented in the user file.
 319:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
 320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** }
 689              		.loc 1 320 1 is_stmt 0 view .LVU209
 690              		@ sp needed
 691 0000 7047     		bx	lr
 692              		.cfi_endproc
 693              	.LFE345:
 695              		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 696              		.align	1
 697              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 698              		.syntax unified
 699              		.code	16
 700              		.thumb_func
 702              	HAL_ADCEx_LevelOutOfWindow3Callback:
 703              	.LVL67:
 704              	.LFB346:
 321:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 322:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /**
 323:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non-blocking mode.
 324:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @param hadc ADC handle
 325:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @retval None
 326:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
 327:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef *hadc)
 328:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** {
 705              		.loc 1 328 1 is_stmt 1 view -0
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 105


 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              		@ link register save eliminated.
 329:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 330:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   UNUSED(hadc);
 710              		.loc 1 330 3 view .LVU211
 331:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 332:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 333:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow3Callback must be implemented in the user file.
 334:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
 335:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** }
 711              		.loc 1 335 1 is_stmt 0 view .LVU212
 712              		@ sp needed
 713 0000 7047     		bx	lr
 714              		.cfi_endproc
 715              	.LFE346:
 717              		.section	.text.HAL_ADCEx_EndOfSamplingCallback,"ax",%progbits
 718              		.align	1
 719              		.weak	HAL_ADCEx_EndOfSamplingCallback
 720              		.syntax unified
 721              		.code	16
 722              		.thumb_func
 724              	HAL_ADCEx_EndOfSamplingCallback:
 725              	.LVL68:
 726              	.LFB347:
 336:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 337:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 338:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /**
 339:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @brief  End Of Sampling callback in non-blocking mode.
 340:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @param hadc ADC handle
 341:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @retval None
 342:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
 343:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** __weak void HAL_ADCEx_EndOfSamplingCallback(ADC_HandleTypeDef *hadc)
 344:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** {
 727              		.loc 1 344 1 is_stmt 1 view -0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 345:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 346:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   UNUSED(hadc);
 732              		.loc 1 346 3 view .LVU214
 347:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 348:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 349:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****             function HAL_ADCEx_EndOfSamplingCallback must be implemented in the user file.
 350:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
 351:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** }
 733              		.loc 1 351 1 is_stmt 0 view .LVU215
 734              		@ sp needed
 735 0000 7047     		bx	lr
 736              		.cfi_endproc
 737              	.LFE347:
 739              		.section	.text.HAL_ADCEx_ChannelConfigReadyCallback,"ax",%progbits
 740              		.align	1
 741              		.weak	HAL_ADCEx_ChannelConfigReadyCallback
 742              		.syntax unified
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 106


 743              		.code	16
 744              		.thumb_func
 746              	HAL_ADCEx_ChannelConfigReadyCallback:
 747              	.LVL69:
 748              	.LFB348:
 352:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 353:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /**
 354:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @brief  ADC channel configuration ready callback in non-blocking mode.
 355:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @param hadc ADC handle
 356:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @retval None
 357:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
 358:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** __weak void HAL_ADCEx_ChannelConfigReadyCallback(ADC_HandleTypeDef *hadc)
 359:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** {
 749              		.loc 1 359 1 is_stmt 1 view -0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753              		@ link register save eliminated.
 360:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 361:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   UNUSED(hadc);
 754              		.loc 1 361 3 view .LVU217
 362:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 363:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 364:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****             function HAL_ADCEx_ChannelConfigReadyCallback must be implemented in the user file.
 365:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
 366:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** }
 755              		.loc 1 366 1 is_stmt 0 view .LVU218
 756              		@ sp needed
 757 0000 7047     		bx	lr
 758              		.cfi_endproc
 759              	.LFE348:
 761              		.section	.text.HAL_ADCEx_DisableVoltageRegulator,"ax",%progbits
 762              		.align	1
 763              		.global	HAL_ADCEx_DisableVoltageRegulator
 764              		.syntax unified
 765              		.code	16
 766              		.thumb_func
 768              	HAL_ADCEx_DisableVoltageRegulator:
 769              	.LVL70:
 770              	.LFB349:
 367:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 368:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /**
 369:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @}
 370:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
 371:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 372:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** /**
 373:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @brief  Disable ADC voltage regulator.
 374:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @note   Disabling voltage regulator allows to save power. This operation can
 375:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *         be carried out only when ADC is disabled.
 376:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @note   To enable again the voltage regulator, the user is expected to
 377:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API.
 378:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @param hadc ADC handle
 379:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   * @retval HAL status
 380:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   */
 381:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableVoltageRegulator(ADC_HandleTypeDef *hadc)
 382:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** {
 771              		.loc 1 382 1 is_stmt 1 view -0
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 107


 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775              		@ link register save eliminated.
 383:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 776              		.loc 1 383 3 view .LVU220
 384:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 385:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Check the parameters */
 386:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 777              		.loc 1 386 3 view .LVU221
 387:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 388:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
 389:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 778              		.loc 1 389 3 view .LVU222
 779              		.loc 1 389 28 is_stmt 0 view .LVU223
 780 0000 0368     		ldr	r3, [r0]
 781              	.LVL71:
 782              	.LBB58:
 783              	.LBI58:
4656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 784              		.loc 2 4656 26 is_stmt 1 view .LVU224
 785              	.LBB59:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 786              		.loc 2 4658 3 view .LVU225
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 787              		.loc 2 4658 12 is_stmt 0 view .LVU226
 788 0002 9A68     		ldr	r2, [r3, #8]
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 789              		.loc 2 4658 68 view .LVU227
 790 0004 D207     		lsls	r2, r2, #31
 791 0006 05D4     		bmi	.L34
 792              	.LVL72:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 793              		.loc 2 4658 68 view .LVU228
 794              	.LBE59:
 795              	.LBE58:
 390:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   {
 391:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 796              		.loc 1 391 5 is_stmt 1 view .LVU229
 797              	.LBB60:
 798              	.LBI60:
4585:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 799              		.loc 2 4585 22 view .LVU230
 800              	.LBB61:
4587:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 801              		.loc 2 4587 3 view .LVU231
 802 0008 9A68     		ldr	r2, [r3, #8]
 803 000a 0349     		ldr	r1, .L35
 804 000c 0A40     		ands	r2, r1
 805 000e 9A60     		str	r2, [r3, #8]
 806              	.LVL73:
4587:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 807              		.loc 2 4587 3 is_stmt 0 view .LVU232
 808              	.LBE61:
 809              	.LBE60:
 392:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 810              		.loc 1 392 5 is_stmt 1 view .LVU233
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 108


 811              		.loc 1 392 20 is_stmt 0 view .LVU234
 812 0010 0020     		movs	r0, #0
 813              	.LVL74:
 814              	.L33:
 393:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   }
 394:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   else
 395:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   {
 396:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 397:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   }
 398:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** 
 399:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   return tmp_hal_status;
 815              		.loc 1 399 3 is_stmt 1 view .LVU235
 400:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c **** }
 816              		.loc 1 400 1 is_stmt 0 view .LVU236
 817              		@ sp needed
 818 0012 7047     		bx	lr
 819              	.LVL75:
 820              	.L34:
 396:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   }
 821              		.loc 1 396 20 view .LVU237
 822 0014 0120     		movs	r0, #1
 823              	.LVL76:
 396:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc_ex.c ****   }
 824              		.loc 1 396 20 view .LVU238
 825 0016 FCE7     		b	.L33
 826              	.L36:
 827              		.align	2
 828              	.L35:
 829 0018 E8FFFF6F 		.word	1879048168
 830              		.cfi_endproc
 831              	.LFE349:
 833              		.text
 834              	.Letext0:
 835              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 836              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 837              		.file 5 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/stm32c031xx.h"
 838              		.file 6 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/stm32c0xx.h"
 839              		.file 7 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_def.h"
 840              		.file 8 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_dma.h"
 841              		.file 9 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_adc.h"
 842              		.file 10 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal.h"
ARM GAS  C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s 			page 109


DEFINED SYMBOLS
                            *ABS*:00000000 stm32c0xx_hal_adc_ex.c
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:19     .text.HAL_ADCEx_Calibration_Start:00000000 $t
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:25     .text.HAL_ADCEx_Calibration_Start:00000000 HAL_ADCEx_Calibration_Start
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:486    .text.HAL_ADCEx_Calibration_Start:00000160 $d
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:495    .text.HAL_ADCEx_Calibration_GetValue:00000000 $t
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:501    .text.HAL_ADCEx_Calibration_GetValue:00000000 HAL_ADCEx_Calibration_GetValue
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:528    .text.HAL_ADCEx_Calibration_SetValue:00000000 $t
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:534    .text.HAL_ADCEx_Calibration_SetValue:00000000 HAL_ADCEx_Calibration_SetValue
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:674    .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 $t
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:680    .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 HAL_ADCEx_LevelOutOfWindow2Callback
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:696    .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 $t
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:702    .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 HAL_ADCEx_LevelOutOfWindow3Callback
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:718    .text.HAL_ADCEx_EndOfSamplingCallback:00000000 $t
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:724    .text.HAL_ADCEx_EndOfSamplingCallback:00000000 HAL_ADCEx_EndOfSamplingCallback
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:740    .text.HAL_ADCEx_ChannelConfigReadyCallback:00000000 $t
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:746    .text.HAL_ADCEx_ChannelConfigReadyCallback:00000000 HAL_ADCEx_ChannelConfigReadyCallback
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:762    .text.HAL_ADCEx_DisableVoltageRegulator:00000000 $t
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:768    .text.HAL_ADCEx_DisableVoltageRegulator:00000000 HAL_ADCEx_DisableVoltageRegulator
C:\Users\main\AppData\Local\Temp\cc8j5Jrv.s:829    .text.HAL_ADCEx_DisableVoltageRegulator:00000018 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
ADC_Disable
HAL_GetTick
